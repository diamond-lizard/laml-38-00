(((title "Scheme Source Linking Demo") (author "Kurt Nørmark" #t "normark@cs.aau.dk") (affiliation "Department of Computer Science" #t "Aalborg University" #t "Denmark") (abstract . " This is a demo manual, written to show additional aspects of SchemeDoc. In particular Scheme source linking.") (scheme-source-file . "/user/normark/scheme/examples/tutorial/schemedoc/prog5.scm/") (laml-resource . "false") (documentation-commenting-style . not-provided) (default-attribute-explanation . not-provided) (source-destination-delta . not-provided) (css-prestylesheet . "compact") (css-stylesheet . "original") (css-stylesheet-copying . "true") (make-dtd-manual-template . not-provided) (keep-syntactical-comment-file . not-provided) (manual-destination-name . not-provided) (mirror-names-defined . not-provided) (mirror-name-prefix . not-provided) (attribute-sorting . not-provided) (scheme-source-linking . "true")) ((kind "manual-section") (section-title "Mutatator and Selector functions.") (section-body "")) ((cross-references (reference "Scheme source file" "make-selector-function" "prog5-ep/prog5-1.html#make-selector-function")) (kind "manual-page") (description "Returns a function, which selects element number n in a list. The second parameter, which is optional, is used for error message purposes. In general, this parameter should be a string corresponding to the name of the selector function. If the second parameter is given, we check whether the list is long enough for selection. If not, we give a decent error message. We recommend use of the second parameter in order to avoid meaningless error messages. The first element is number 1. (make-selector-function 1) corresponds to car, (make-selector-function 2) corresponds to cadr, etc. ") (form "(make-selector-function n [selector-name])") (title "make-selector-function")) ((cross-references (reference "Scheme source file" "make-mutator-function" "prog5-ep/prog5-1.html#make-mutator-function")) (kind "manual-page") (description "Make and return a mutator function which mutates element number n in a list. The returned function takes a list and a new value as arguments. This function takes one optional parameter, which is the name of the mutator This is used for error message purposes. ") (title "make-mutator-function") (form (make-mutator-function n . optional-parameter-list))) ((kind "manual-section") (section-title "The fac and fib functions.") (section-body "These functions are found in the source file prog4.scm. The manual stuff for these is done via SchemeDoc. See also <a href=\"#def\"> the other section</a>. ") (section-id "abc")) ((cross-references (reference "Scheme source file" "fac" "prog5-ep/prog5-1.html#fac")) (kind "manual-page") (description "Calculate the factorial of n ") (title "fac") (form (fac n))) ((cross-references (reference "Scheme source file" "fib" "prog5-ep/prog5-1.html#fib")) (kind "manual-page") (description "Calculated the fib function. Notice that this is a very inefficient Implementation. ") (title "fib") (form (fib n))) ((kind "manual-section") (section-title "A couple of higher order function.") (section-body "These functions are useful in many situations. You may also consult <a href=\"#abc\"> the first section</a>. ") (section-id "def")) ((cross-references (reference "Scheme source file" "negate" "prog5-ep/prog5-1.html#negate")) (kind "manual-page") (parameters (parameter "p" "A predicate")) (description "A higher order functions which negates the predicate p. Negate accepts a predicate and returns the negated predicate.<br> .parameter In case I need to start this line with a dot, which is not an internal tag. ") (title "negate") (form (negate p))) ((kind "manual-page") (description "A higher order function that composes two functions. Returns a function which applies f on g. Both f and g are supposed to take a single argument. ") (misc "Miscelaneous information") (comment "Internal comment") (returns "Return value description") (title "compose") (form (compose f g)) (cross-references (reference "Scheme source file" "compose" "prog5-ep/prog5-1.html#compose") (internal-references "section" "abc") (internal-references "section" "SECTION2"))) ((kind "manual-section") (section-title "Another function") (section-body "")) ((cross-references (reference "Scheme source file" "my-as-string" "prog5-ep/prog5-1.html#my-as-string")) (kind "manual-page") (description "An alias of as-string from the general LAML library. ") (title "my-as-string") (form my-as-string)))