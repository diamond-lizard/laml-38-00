(((title . "Reference Manual of the HTML parser and pretty printer for LAML") (author (ast "span" ("Kurt N\370rmark" #t " " #t (char-ref copy)) () double xhtml10-transitional ()) #t "normark@cs.aau.dk") (affiliation "Department of Computer Science," #t "Aalborg University," #t "Denmark.") (abstract . " This is a non-validating HTML parser built on top of the simple XML parser for LAML.  In addition there are HTML pretty printing procedures in this tool. The implementation of the parser is done by redefining functions from the XML parser. Most of the xml-parser stuff is reused in this parser.<p> The top-level node is called a html-tree, which may hold top level comment nodes and declaration nodes (docttype nodes). The parser represents HTML comments within the document as special comment nodes.<p> The parser will be very confused if it meets a less than or greater than character which isn't part of tag symbol. Such character must be HTML protected (use the special character entities in HTML).<p> As of LAML version 31, the parser is able to parse certain non-wellfored HTML document (documents with crossing tags). This tool assumes that <kbd> laml.scm </kbd> and the general library are loaded.  The tool loads xml-support (which is the starting of this html support tool), collect-skip and file-read libraries.<p> See <a href=\"xml-support.html\">the XML support</a> for information about the format of  parse trees and variables that control the pretty printing. See also the illustrative <a href=\"../../../examples/html-parser-and-pretty-printer/index.html\">examples </a>  of the HTML parsing and pretty printing tools. <p> The typographical rebreaking and re-indenting of running text is still missing.<p> The LAML interactive tool procedures <kbd> html-pp </kbd> and <kbd> html-parse </kbd> in <kbd> laml.scm </kbd> are convenient top-level pretty printing and parse procedures respectively.<p>  Known problem: The handling of spaces after the start tag and before the end tag is not correct.<p> Please notice that this is not a production quality parser and pretty printer! It is currently used for internal purposes.") (scheme-source-file . "/user/normark/scheme/tools/xml-html-support/html-support.scm/") (laml-resource . "true") (documentation-commenting-style . not-provided) (default-attribute-explanation . not-provided) (source-destination-delta . not-provided) (css-prestylesheet . "compact") (css-stylesheet . "argentina") (css-stylesheet-copying . "true") (make-dtd-manual-template . not-provided) (keep-syntactical-comment-file . not-provided) (manual-destination-name . not-provided) (mirror-names-defined . not-provided) (mirror-name-prefix . not-provided) (attribute-sorting . not-provided) (scheme-source-linking . "true")) ((kind "manual-section") (section-title "Top level HTML parsing function.") (section-body "")) ((cross-references (reference "Scheme source file" "parse-html-file" "html-support-ep/html-support-1.html#parse-html-file")) (kind "manual-page") (description "Parse the file in in-file-path, and deliver the parse tree in out-file-path. If in-file-path has an empty file extension, html is added. ") (title "parse-html-file") (form (parse-html-file in-file-path out-file-path))) ((cross-references (reference "Scheme source file" "parse-html" "html-support-ep/html-support-1.html#parse-html")) (kind "manual-page") (description "This function parses a file and return the parse tree. Thus, the difference between this function and parse-html-file is that this function returns the parse tree (no file output). file-path is a file path (relative or absolute). An html extension is added, if necessary. ") (title "parse-html") (form (parse-html file-path))) ((kind "manual-section") (section-title "HTML pretty printing functions.") (section-body "")) ((cross-references (reference "Scheme source file" "pretty-print-html-parse-tree-file" "html-support-ep/html-support-1.html#pretty-print-html-parse-tree-file")) (kind "manual-page") (description "Pretty prints the HTML parse tree (lisp file) in in-file-path. Outputs the pretty printed result in out-file-path, which defaults to in-file-path if not explicitly passed. ") (form "(pretty-print-html-parse-tree-file in-file-path [out-file-path])") (title "pretty-print-html-parse-tree-file")) ((cross-references (reference "Scheme source file" "pretty-print-html-parse-tree" "html-support-ep/html-support-1.html#pretty-print-html-parse-tree")) (kind "manual-page") (description "Pretty prints a HTML parse tree, and return the result as a string. ") (title "pretty-print-html-parse-tree") (form (pretty-print-html-parse-tree parse-tree))) ((cross-references (reference "Scheme source file" "parse-html-string" "html-support-ep/html-support-1.html#parse-html-string")) (kind "manual-page") (description "Parse the string str which is supposed to contain a HTML document. The parsing is done by writing str to the temp dir in the LAML directory, and then using the function parse-html-file. Precondition: The temp dir of the LAML directory must exist. ") (title "parse-html-string") (form (parse-html-string str))))