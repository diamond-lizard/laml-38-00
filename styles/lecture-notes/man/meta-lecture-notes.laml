(load (string-append laml-dir "laml.scm"))

;-----------------------------------------------------------------------------
; notes.scm:

;; This file contains general information of these particular notes
;; Must be loaded by all sections just before style

(define note-source-directory (string-append laml-dir "/styles/lecture-notes/man/"))

(define notes-title "LENO")

(define current-lecture 1)

(define lecture-sections
  (list
    (list  "meta-lecture-notes" "The LENO Lecture note system")
   )
)

(define course-home-url "../../../../index.html")
(define author-home-url "http://www.cs.auc.dk/~normark/")
(define note-download-url  "")

; Returns A list of meta-tag contribution. Each meta-tag contribution is an even length list of the form (key val key val ...) .
; The clauses goes into meta-tags in the head of the html document.
; This parameter-less function must be defined in notes.scm.
(define (meta-tag-clauses)
   (list (list 'HTTP-EQUIV "Content-Type" 'content "text/html; charset = ISO-8859-1")  
         (list 'name "Generator" 'content "LAML")
         (list 'name "description" 
                     'lang (meta-language language-preference)
                     'content "A meta demonstration of the Scheme-based LENO lecture note system, describing its own format")
   )
)

(define (cross-reference-location-hints location-list)
  "")

;-----------------------------------------------------------------------------

(style "lecture-notes/lecture-notes")
(define apply-css-styling? #t)

(exercise-model 'make-indexes-and-solutions-per-lecture) ; none, make-indexes, make-indexes-and-solutions-per-lecture,
                               ; make-indexes-and-solutions-lecture-wide, synchronous-exercises, asynchronous-exercises
(include-word-index)

(define slide-header? 'normal) ; one of the symbols normal, none, or minimal


(define this-source-file "meta-lecture-notes.laml")

; must be set after (style ...):
(define front-index? #f)

(set-language 'english)

(set-lecture-name "meta-lecture-notes")
(set-lecture-number 1)

; (set-previous-lecture "")
; (set-next-lecture "")

(define end-marker "; end page")



(lecture-intro "The LENO Lecture Note System"
  (list (copyright-owner "Kurt Nørmark") "normark@cs.auc.dk" "Department of Computer Science" "Aalborg University" "Denmark")

  (con-par  "This is an example 'lecture note' the purpose of which it is to demontrate the capabilities of the LENO system itself.
   The material is organized as one page per 'means of expression' in the LENO system.
   Thus, on each slide page in the following you will see a description and a demonstration of
   a single LENO tag. In addition, we link to the LENO source from which the present pages have been produced.
   (For this purpose we use one of useful capabilities of LENO; the ability to extract information from an external text file
    and to display this information on a WEB page)."

  "The LENO lecture note system features a set of slides, a set of annotated slides, an aggregated lecture note, an index,
   and various overview pages.
   There is a substantial overlap between the information in the slides and the lecture notes. 
   The slides, the annotated slides, and the lecture note are different views on the same underlying information."

  "In order to navigate to the slide or the annotated slide views please follow the 'slide' and 'note' links in the right margin below"
  )
)

(begin-notes)

(note-page 'section1
  (section-title "This is a sectional unit")
) ; end page

(note-page 'title
  (title "This is a title of a note page"
         "This is an introductory description to this note page"
  )

  (source-program this-source-file  (list "(note-page 'section1" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program of the section title above. "
  )

  (source-program this-source-file  (list "(note-page 'title" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  

  (index-words "title")

) ; end page

(note-page 'text
  (title "Text"
         "Text elements presents plain text which goes to all views"
  )

  (text "An example of a text"
        "An additional explanation of the text"
  )

  (source-program this-source-file  (list "(note-page 'text" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "text")

) ; end page


(note-page 'items
  (title "Items"
         "Items is used to present arbitrarily nested items"
  )

  (items
    (item "An outer item"
          "Explanation of outer item"
          (items
            (item "Inner item 1"
                  "Explanation of inner item 1"
            )
        
            (item "Inner item 2"
                  "Explanation of inner item 2"
            )

            (item "Inner item 3"
                  "Explanation of inner item 3"
            )
          )
    )
  )  

  (index-words "items")

  (source-program this-source-file  (list "(note-page 'items" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

) ; end page


(note-page 'point
  (title "Point"
         "Point is used to make a particular point in the material"
  )

  (point "The point itself"
         "An additional explanation of the point"
  )

  (source-program this-source-file  (list "(note-page 'point" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "point")

) ; end page

(note-page 'source-program
  (title "Source program"
         "Source program is used to present a piece of program in the lecture notes.
          It is possible to select part of a program only, and it is possible to 
          colorize and font decorate substrings of the chosen selection. Here we demonstrate
          these features on the LENO Scheme source file, on which this demo is based.
         "
  )

  (source-program this-source-file  (list "(note-page 'source-program" end-marker)
       (list
         (list "source-program" "" red 'italic) 
         (list "(index-words" ")" blue 'bold)
       )
       '(slide-external book-external)
       "Explanation of an external program. For illustration purposes we show the LAML fragments producing
        this page (This is done on each page in this collection). We also illustrate the possibility of fonting and coloring."

  )

  (source-program this-source-file  (list "(note-page 'source-program" end-marker)
       (list
         (list "source-program" "" red 'italic) 
         (list "(index-words" ")" blue 'bold)
       )
       '(slide-inline book-inline)
       "Explanation of an inlined program. For illustration purposes we show the LAML fragments producing
        this page (This is done on each page in this collection). We also illustrate the possibility of fonting and coloring."

  )  

  (index-words "source-file")

) ; end page


(note-page 'image
  (title "Image"
         "Image is used to present a gif image"
  )

  (image "test-image.gif"
         "An image explanation"
  )

  (image "test-image.gif"
         "Another image explanation"
         '(horizontal picture text))

  (image "test-image.gif"
         "A third image explanation"
         '(vertical picture text))

  (source-program this-source-file  (list "(note-page 'image" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "image")

) ; end page

(note-page 'example
  (title "Example"
         "Example exlains an example of something"
  )

  (example "The example" "The example explanation")

  (source-program this-source-file  (list "(note-page 'example" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "example")

) ; end page

(note-page 'opposing
  (title "Opposing"
         "Opposing presents two list of opposing points"
  )

  (opposing
     (item "Statement number 1" "Statement number 2")
     (item "Statement number 3" "Statement number 4")
     (item "Statement number 5" "Statement number 6")
     (item "Statement number 7" "Statement number 8")
  )

  (source-program this-source-file  (list "(note-page 'opposing" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "opposing")

) ; end page


(note-page 'comment
  (title "Comment"
         "An internal comment in the notes"
  )

  (comment "This is the comment")

  (source-program this-source-file  (list "(note-page 'comment" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "comment")

) ; end page


(note-page 'syntax
  (title "Syntax"
         "This is description of a piece of syntax, such as a programming language syntax"
  )

  (syntax "This is a piece of syntax" 
           "This is an explanation of the syntax")

  ;@if expression then statement1 else statement2;@

  (syntax 
     (colorize-substrings 
       (read-text-file-between-marks this-source-file ";@")
       (list 
         (list "if" "" black 'bold)
         (list "then" "" black 'bold)
         (list "else" "" black 'bold)
         (list "expression" "" red 'italic)
         (list "statement1" "" red 'italic)
         (list "statement2" "" red 'italic)
       ))
       "An explanation of the if-then-else syntax. As it appears from the
        underlying LAML source, the syntax stems from a separate file, in this
        case a comment in this Scheme file. The colorizing and fonting is done when the
        the text has been read"
  )

  (source-program this-source-file  (list "(note-page 'syntax" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "syntax")

) ; end page


(note-page 'slide-space
  (title "Slide-space"
         "Makes some vertical space on a slide page. The other views are not affected"
  )

  (text "Here is some text produced by the text function")
  (slide-space)
  (text "Here is some more text produced by the text function")

  (source-program this-source-file  (list "(note-page 'slide-space" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "slide-space")

) ; end page

(note-page 'tabular
  (title "Tabular"
         "A tabular overview with a number of columns and rows"
  )

  (tabular 2 (list 100 50 200)
    (list
      (list (b "Header 1") (b "Header 2") (b "Header 3"))
      (list "Cell 1,1"     "Cell 1,2"     "Cell 1,3"    )
      (list "Cell 2,1"     "Cell 2,2"     "Cell 2,3"    )
      (list "Cell 3,1"     "Cell 3,2"     "Cell 3,3"    )
    )
    "An explanation of the table"
  )


  (source-program this-source-file  (list "(note-page 'tabular" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "tabular")

) ; end page


(note-page 'note-text
  (title "Note-text"
         "A piece of text showed only in the note views"
  )

  (note-text "Here is a pice of note text")

  (source-program this-source-file  (list "(note-page 'note-text" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "note-text")

) ; end page


(note-page 'slide-text
  (title "Slide-text"
         "A piece of text showed only in the slide view"
  )

  (slide-text "Here is a pice of slide text")

  (source-program this-source-file  (list "(note-page 'slide-text" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "slide-text")

) ; end page


(note-page 'cross-references
  (title "Cross-references"
         "A number of references to other pieces of information"
  )

  (cross-references
    (list
      (internet-reference "A refence to some place on the Internet (the authors home page)"
                           "http://www.cs.auc.dk/~normark/")
      (note-reference "A reference to another place in a set of lecture notes 
                       (the page describing the title function in these notes)" 'ln 'title)
      (informal-reference "A name of a resource" "A reference to the off-line resource")
    )
  )

  (source-program this-source-file  (list "(note-page 'cross-references" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "cross-references")

) ; end page


(note-page 'exercise
  (title "Exercise"
         "An exercise formulated in relation to this note page"
  )

  (exercise 'exercise-id 
    "Exercise title"
    (formulation
      "This is the text of the exercise")
    (solution
      "This is the solution"
    )
  )

  (source-program this-source-file  (list "(note-page 'exercise" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "exercise")

) ; end page

(note-page 'long-slide
  (title "Long-slide"
         "A declaration of that this is a long slide. On a long slide there are navigation 
          icons in the top as well as in the bottom part of a slide")

  (long-slide)

  (text "Some slide text via the text function")


  (source-program this-source-file  (list "(note-page 'long-slide" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "long-slide")

) ; end page

(note-page 'index-words
  (title "Index-words"
         "A declaration the words which goes into the index of a set of note pages.
          The leaves no trace on this page"
  )

  (index-words "sample index word" "another sample index word")

  (source-program this-source-file  (list "(note-page 'index-words" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "index-words")

) ; end page

(note-page 'image-series
  (title "Image-series"
         "A cartoon-like series of images, which can be shown via 
          a reference button or inlined in the slides and/or in the notes"
  )

  (image-series 
      "An overall description of the image series"
      (list 
         (list "test-image.gif" "A description of the first image")
         (list "test-image-1.gif" "A description of the next image")
         (list "test-image-1.gif" "A description of the last image")
      )
     '(slide-external book-inline)
  )  

  (source-program this-source-file  (list "(note-page 'image-series" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "image-series")

) ; end page

(note-page 'concept-list
  (title "Concept-list"
         "A list of concepts defined in this set of notes"
  )

  (concept-list
    (concept "concept number 1" 
             "Definition of concept 1"
             "An introductory description of the first concept"
    )
    (concept "concept number 2"
             "Definition of concept 2"
             "An introductory description of the second concept"
    )
  )

  (source-program this-source-file  (list "(note-page 'concept-list" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "concept-list")

) ; end page

(note-page 'applet-program
  (title "Applet-program"
         "A Java applet displayed on this page"
  )

  (applet-program
     "ColorPresenter.class"  "applets/farver"
     "A description of the Java applet"
     400 250)

  (source-program this-source-file  (list "(note-page 'applet-program" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "applet-program")

) ; end page


(note-page 'quotation
  (title "Quotation"
         "A quote"
  )

  (quotation
   "This is a quote"
   "And this is a comment to the quote"
  )

  (source-program this-source-file  (list "(note-page 'quotation" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words "quotation")


) ; end page

(note-page 'synopsis
  (title "Synopsis"
         "A synosis summarizes a number of pages"
  )

  (synopsis 
   (synopsis-item "Synopsis text 1"
                  "Synopsis comment 1"
                  )

   (synopsis-item "Synopsis text 2"
                  "Synopsis comment 2"
                  )

   (synopsis-item "Synopsis text 3"
                  "Synopsis comment 3"
                  )
  )

  (source-program this-source-file  (list "(note-page 'synopsis" end-marker)
       (list
       )
       '(slide-external book-external)
       "The underlying LAML program. This shows the underlying source of this part of the notes"
  )

  (index-words  "synopsis")

) ; end page


; (note-page 'cross-references
;   (title "Cross-references"
;          "Cross references to Internet material, another place in these notes, or to off line material"
;   )
; 
;   (cross-references
;       (list
;        (note-reference "Rerence to the title page" 'meta-lecture-notes 'title)
;        (internet-reference "Reference to the author's home page" "http://www.cs.auc.dk/~normark/")
;        (informal-reference "Abelson and Sussman" "The structure and Interpretation of Computer Programs, MIT Press")
;      )
;   )
; 
;   (source-program this-source-file  (list "(note-page 'cross-references" end-marker)
;        (list
;        )
;        '(slide-external book-external)
;        "The underlying LAML program. This shows the underlying source of this part of the notes"
;   )
; 
;   (index-words "cross-references")
; 
; ) ; end page


(end-notes)








