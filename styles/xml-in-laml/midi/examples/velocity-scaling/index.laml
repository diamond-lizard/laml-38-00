(load (string-append laml-dir "laml.scm"))
(laml-style "simple-xhtml1.0-transitional-validating")
(lib-load "xhtml1.0-convenience.scm")
(load (in-startup-directory "../" "common-example-stuff.scm"))


(begin-laml)

(define current-xml-language 'xhtml10-transitional)
(define laml-generation-meta (meta 'name "Generator" 'content "LAML"))
(define meta-props (list 'http-equiv "Content-Type" 'content "text/html; charset=iso-8859-1"))
(define html-props (list 'xmlns "http://www.w3.org/1999/xhtml"))

; Insert the LAML template "Processing Options" here
; if you need variations in the LAML processing

(define ttl "Velocity Scaling")

(write-html '(raw prolog)
 (html html-props
  (head 
   (meta meta-props) laml-generation-meta
   (title ttl))
  (body
    (h1 ttl)


    (p "Here follows an example of velocity scaling, by bar."
       (a 'href "sample/baseline-1.midl" "Starting point")_ "," "(80 C3 notes all of velocity 64) corresponding to this" 
       (a 'href "sample-midi/baseline-1.mid" "midi file")_ "." )

    (table  'border 1
      (tr (td (b "Description")) (td (b "Midl source file")) (td (b "Resulting midi file")))
      (tr (get-baseline "sample" 2))
    )

    (p "The expanded velocity scaled" (a 'href "sample/baseline-3.midl" "midl file") 
       "(and" (a 'href "sample-midi/baseline-3.mid" "midi file") _ ")" 
       "is also available." )

    (vertical-space 1) (hr) (vertical-space 1)

    (p "Here follows an example of velocity scaling, by time."
       (a 'href "sample/baseline-1.midl" "Starting point")_ "," "(80 C3 notes all of velocity 64) corresponding to this" 
       (a 'href "sample-midi/baseline-1.mid" "midi file")_ "." )

    (table  'border 1
      (tr (td (b "Description")) (td (b "Midl source file")) (td (b "Resulting midi file")))
      (tr (get-baseline "sample-by-time" 1))
    )

    (p "The expanded velocity scaled" (a 'href "sample-by-time/baseline-2.midl" "midl file") 
       "(and" (a 'href "sample-by-time-midi/baseline-2.mid" "midi file") _ ")" 
       "is also available." )





  )
 )
)


(end-laml)