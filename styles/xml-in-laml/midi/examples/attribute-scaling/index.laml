(load (string-append laml-dir "laml.scm"))
(laml-style "simple-xhtml1.0-transitional-validating")
(lib-load "xhtml1.0-convenience.scm")
(load (in-startup-directory "../" "common-example-stuff.scm"))


(begin-laml)

(define current-xml-language 'xhtml10-transitional)
(define laml-generation-meta (meta 'name "Generator" 'content "LAML"))
(define meta-props (list 'http-equiv "Content-Type" 'content "text/html; charset=iso-8859-1"))
(define html-props (list 'xmlns "http://www.w3.org/1999/xhtml"))

; Insert the LAML template "Processing Options" here
; if you need variations in the LAML processing

(define ttl "Attribute Scaling")

(write-html '(raw prolog)
 (html html-props
  (head 
   (meta meta-props) laml-generation-meta
   (title ttl))
  (body
    (h1 ttl)

    (p "Attribute scaling is a relatively low-level facility for scaling of one of the attributes" (kbd "deltaTime") _ "," (kbd "absTime") _ "," "
        " (kbd "duration") _ "," "and" (kbd "velocity") _ ".")

    (p "The starting point of this example is a simple scale:" (a 'href "scale/baseline-1.midl" "midl file") 
       "(which is evaluated and expanded to this" (a 'href "scale/baseline-6.midl" "midl file") _ ")" "corresponding to this" 
       (a 'href "scale-midi/baseline-1.mid" "midi file")_ "." )

    (table  'border 1
      (tr (td (b "Description")) (td (b "Midl source file")) (td (b "Resulting midi file")))
      (tr (get-baseline "scale" 7))
      (tr (get-baseline "scale" 8))
      (tr (get-baseline "scale" 9))
      (tr (get-baseline "scale" 10))
      (tr (get-baseline "scale" 11))
    )

    (p "For illustrative purposes, we show a sketch of the scaling function used in
        the first two rows of the table.")

    (img 'src "down-flat-up.jpg" 'alt "")

  )
 )
)


(end-laml)