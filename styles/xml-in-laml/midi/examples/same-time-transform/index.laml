(load (string-append laml-dir "laml.scm"))
(laml-style "simple-xhtml1.0-transitional-validating")
(lib-load "xhtml1.0-convenience.scm")
(load (in-startup-directory "../" "common-example-stuff.scm"))


(begin-laml)

(define current-xml-language 'xhtml10-transitional)
(define laml-generation-meta (meta 'name "Generator" 'content "LAML"))
(define meta-props (list 'http-equiv "Content-Type" 'content "text/html; charset=iso-8859-1"))
(define html-props (list 'xmlns "http://www.w3.org/1999/xhtml"))

; Insert the LAML template "Processing Options" here
; if you need variations in the LAML processing

(define ttl "Same time transformation")

(write-html '(raw prolog)
 (html html-props
  (head 
   (meta meta-props) laml-generation-meta
   (title ttl))
  (body
    (h1 ttl)

    (p "The function same-time-transform captures a number of NoteOn messages in some given channels, all of which occur at the exact same time.
        They have most likely been played by hitting a single key, which is instructed to generated two or more notes. In the example below one key
        generates three" (string-it "same-time notes") _ "." "
       ")

    (p "We correct a couple of errors in channel 1, but it is - in general - a major work to redo the same corrections in channel 3 and 4 as well.
        The function" (kbd "same-time-transform") "helps. The lambda expression is called on every occurrence of the three" (string-it "same-time notes") _ "," "and the
        function returns the correction. In the example, channel 3 and 4 are instructed to follow channel 1.")

    (p "The interesting places in all example files start with the first" (kbd "NoteOn") "message. Please scroll a bit!")

    (table  'border 1
      (tr (td (b "Description")) (td (b "Midl source file")) (td (b "Resulting midi file")))
      (tr (get-baseline "X" 1))
      (tr (get-baseline "X" 2))
      (tr (get-baseline "X" 3))
      (tr (get-baseline "X" 4))
    )

    (p "The midi files of the two last rows are identical, of course.")



  )
 )
)


(end-laml)