(((kind "manual-section") (section-title "Document type definition.") (section-body "\nThis section contains <kbd>document-type-declaration</kbd>, that returns the appropriate\ndocument type declaration of this mirror.\n\n")) ((kind "manual-page") (description "Return a document type declaration of this mirror.\n") (title "document-type-declaration") (form (document-type-declaration))) ((kind "manual-section") (section-title "Table functions.") (section-body "A set of functions which generate HTML tables from Scheme list-of-list structures.\n\n")) ((kind "manual-page") (description "Return a table with elements from list-of-list. \nThe sublists of list represent the rows in the table. The border is an optional parameter.\n") (title "table") (form (table list-of-list . border))) ((kind "manual-page") (description "A more versatile variant of table.\nA variant of table which requires border (an integer, 0 if no border),\na list of cell widths, a list of column colors, the table contens (list-of-list), and an optional valign parameter\n") (title "table-1") (form (table-1 border cell-width-list cell-color-list-1 list-of-list . valign))) ((kind "manual-page") (description "A variant of table and table-1 which supports a header row\n") (title "table-2") (form (table-2 border cell-width-list cell-color-list-1 header-list list-of-list))) ((kind "manual-page") (description "A variant of table-1, but without a column color list.\nThe cell color becomes identical with the background.\n") (title "table-3") (form (table-3 border cell-width-list list-of-list . valign))) ((kind "manual-page") (description "A variant of table-1 with a row color list instead of a column color list.\nThe length of row-color-list must be the same as the length of each row list in list-of-list.\n") (title "table-4") (form (table-4 border cell-width-list row-color-list list-of-list . valign))) ((kind "manual-section") (section-title "Form stuff.") (section-body "A number of functions which supports the work with (input) forms in Scheme.\n\n")) ((kind "manual-page") (description "Embed x in to form, which activates cgi-url upon form completion.\n") (title "form") (form (form cgi-url x))) ((kind "manual-page") (description "Embed x into a multipart form. Activate cgi-url when the form is submitted.\nA multipart form is used for file uploading. Files are written into \ntarget-directory when uploaded.\nThe parameter target-directory-url gives the URL of the directory, in which the file is uploaded.\nThis is used for subsequent WWW retrival of the file.\n") (title "multipart-form") (form (multipart-form cgi-url target-directory target-directory-url x))) ((kind "manual-page") (description "Return an input tag of type checkbox. The name is a string or symbol which identifies the checkbox.\nChecked is an optional boolean parameter. If checked is #t, the checkbox will be checked initially.\nReturns the string true to the form processing application if checked.\n") (title "checkbox") (form (checkbox name . checked))) ((kind "manual-page") (description "Return an input tag of type radio. \nchecked is a boolean parameter, i.e. true or false (in Scheme sense). \n") (title "radio-button") (form (radio-button value group-name . checked))) ((kind "manual-page") (description "Return an input tag of type text. \nThe name is a string of symbol which identifies the text line.\nSize is the the text line width in character positions.\nValue is the initial value on the text line.\n") (title "text-line") (form (text-line name size value))) ((kind "manual-page") (description "Return an input tag of type hidden. \nThe name is a string of symbol which identifies the hidden line.\nValue is the string contents of the hidden line\n") (title "hidden-line") (form (hidden-line name value))) ((kind "manual-page") (description "Return an input tag of type file.\nSuch an input tag is used for file uploading.\nThe name of the uploading is name.\n") (title "file-upload") (form (file-upload name . optional-parameters))) ((kind "manual-page") (description "Return an input tag of type password. \nThe name is a string of symbol which identifies the password.\nSize is the the line width in character positions.\nValue is the initial contents of the password field (not very useful...).\n") (title "password-line") (form (password-line name size value))) ((kind "manual-page") (description "Return an input tag of type submit. Renders a button. \nValue is the string label of the button. If the optional parameter name\nis given it identifies a particular submit button with a name, value pair in the submitted data.") (form "(submit value [name])") (title "submit")) ((kind "manual-page") (description "Return an input tag of type reset. \nValue is the string label of the button.\n") (title "reset") (form (reset value))) ((kind "manual-page") (description "Return a select tag, defining a multiple choice menu. Name is a string or symbol which identifies the selection.\nValue-list is a list of the values to be returned upon selection.\nContents-list is the list of contents to be shown in the menu.\nSelected-value is an optional value, which is to be selected initially. This value should be a member of value-list.\n") (title "select") (form (select name value-list contents-list . selected-value))) ((kind "manual-page") (description "Return a textarea form. \nRows is the number of rows of the text area.\nCols is the number of columns measured in characters.\nContents is the initial contents of the text area.\n") (title "textarea") (form (textarea name rows cols contents))) ((kind "manual-section") (section-title "Multi column lists.") (section-body "The functions in this section return multi-column lists. Given a list of elements the functions\nreturn a table in which the elements have been arranged in a number of columns. The first function,\nmulti-column-list, arranges the elements in row major order. The two last functions arrange the\nthe elements in column major order. These are the most advanced functions due to the way tables\nare organized in HTML.\n\n\n")) ((kind "manual-page") (description "Return a multi-column list, row major, with columns columns.\nColumns (the first parameter) must be at least 2.\nThe total width (sum of column widths) is given as the last parameter.\nInternally, a HTML table with zero border is formed and returned.\n") (title "multi-column-list") (form (multi-column-list columns elements total-width))) ((kind "manual-page") (description "Return a two column list, column major.\ntotal-width (sum of column widths) is the width you want the resulting table to have.\nInternally, a HTML table with zero border is formed and returned.\n") (title "two-column-list") (form (two-column-list elements total-width))) ((kind "manual-page") (description "Return an n column list, column-major, of the element list (second parameter).\nThis is a generalized version of two-column-list.\ntotal-width (sum of column widths) is the width you want the resulting table to have.\nn is the number of columens\nInternally, a HTML table with zero border is formed and returned.\n") (title "n-column-list") (form (n-column-list n elements total-width))) ((kind "manual-section") (section-title "Uncategorized functions.") (section-body "The rest of the functions are not yet categorized.\n\n\n")) ((kind "manual-page") (description "The result of this function is inserted as an HTML comment on each html page generated.\nRedefine this function for your own tracing.\nAs of here, it returns the empty string.\n") (title "tracing-comment") (form (tracing-comment))) ((kind "manual-page") (description "\nReturn a simple HTML page with html, head and title tags.\n Also include the value of the parameter-less function (laml-standard-comment) as an initial html-comment.\n The optional color-list must consist of a background color, text color, link color and visited link color.") (title "page") (form (page title body . color-list))) ((kind "manual-page") (description "the part of a HTML page before the body. A html-v1 version of this function should be provided for.\n") (title "pre-page") (form (pre-page title . color-list))) ((kind "manual-page") (description "the part of a HTML page after the body. A html-v1 version of this function should be provided for.\n") (title "post-page") (form (post-page))) ((kind "manual-page") (description "Return an a tag constructructed from the URL and the anchor. \nIf no anchor is provided uses the url as anchor text.\n") (title "a-tag") (form (a-tag url . anchor))) ((kind "manual-page") (description "A variant of a tag which supports a target attribute of the a-tag (where in browser to show the result).\n") (title "a-tag-target") (form (a-tag-target url anchor target))) ((kind "manual-page") (description "Name the current place by means of an a tag with name attribute\n") (title "a-name") (form (a-name name))) ((kind "manual-page") (description "Return a mail link by means of the mailto facility in an a tag.\n") (title "mail-link") (form (mail-link email-adr . anchor-name))) ((kind "manual-page") (description "Return an ol (ordered list) tag. The elements in list becomes the elements. Li tags are inserted automatically by this function.\n") (title "ordered-list") (form (ordered-list lst))) ((kind "manual-page") (description "A convenient alias for ordered-list\n") (title "ol") (form ol)) ((kind "manual-page") (description "Return an ul (uordered list) tag. The elements in list becomes the elements. Li tags are inserted automatically by this function.\n") (title "unordered-list") (form (unordered-list lst))) ((kind "manual-page") (description "Return a flat list, separate by breaks\n") (title "br-list") (form (br-list lst))) ((kind "manual-page") (description "A convenient alias for br-list\n") (title "brl") (form brl)) ((kind "manual-page") (description "A convenient alias for unordered-list\n") (title "ul") (form ul)) ((kind "manual-page") (description "\nMake a definition list.\n  lst is a list of lists. Each inner list must be of length two,\n  dt and dd respectively. I.e. definition terms and the defintion proper, resp.\n  As a special case supported, the inner list can be of lenght one, in which case\n  the dd is considered empty") (title "definition-list") (form (definition-list lst))) ((kind "manual-page") (description "A convenient alias for definition-list\n") (title "dl") (form dl)) ((kind "manual-page") (description "\nRender lst as a bulleted list. Both parameters must be symbols.\n  Bullet-size is either 'small or 'large.\n  Bullet-color is either 'red, 'green, 'yellow, 'blue, or 'cyan.\n  Depends on the presence of appropriate gif files in images directory.") (title "bullet-list") (form (bullet-list lst bullet-size bullet-color))) ((kind "manual-page") (description "\na large, red bulleted list") (title "bl") (form (bl lst))) ((kind "manual-page") (description "Show tree as an indented, bulleted list.\nA tree is a list.\nThe first element of the list is the root.\nThe tail of the list is the list of subtrees.\nA subtree, which is a leaf, can be given as a symbol, string or number.\n") (title "ul-tree") (form (ul-tree tree))) ((kind "manual-page") (description "Present x in a kbd tag\n") (title "kbd") (form (kbd x))) ((kind "manual-page") (description "Return a horizontal rule, a hr tag.\n") (title "hr") (form (hr . size))) ((kind "manual-page") (description "Return an img tag, in which a file on file-name is presented. An optional width parameter is supported.\n") (title "img") (form (img file-name . width))) ((kind "manual-page") (description "A variant of img which presents an image with a border\n") (title "img-with-border") (form (img-with-border file-name . width))) ((kind "manual-page") (description "Returns h tags, h1 if i=1, h2 if i=2, etc.\n") (title "h") (form (h i x))) ((kind "manual-page") (description "Present x in a i tag\n") (title "i") (form (i x))) ((kind "manual-page") (description "Present x in a strong tag\n") (title "strong") (form (strong x))) ((kind "manual-page") (description "Present x in a pre tag\n") (title "pre") (form (pre x))) ((kind "manual-page") (description "Present x in a center tag\n") (title "center") (form (center x))) ((kind "manual-page") (description "\nReturns a font tag.\nsize is a number and color is a rgb list of three, decimal integers or\na color symbol.") (title "font") (form (font size color x))) ((kind "manual-page") (description "\nLike font, but only supports size.\nsize is a number and color is a rgb list of three, decimal integers or\na color symbol.") (title "font-size") (form (font-size size x))) ((kind "manual-page") (description "\nLike font, but only supports color.\ncolor is a rgb list of three, decimal integers") (title "font-color") (form (font-color color x))) ((kind "manual-page") (description "Present x in a b tag (bold)\n") (title "b") (form (b x))) ((kind "manual-page") (description "Present x in a u tag (underline)\n") (title "u") (form (u x))) ((kind "manual-page") (description "Present x in a em tag (emphasize)\n") (title "em") (form (em x))) ((kind "manual-page") (description "Present x in a blockquote tag\n") (title "cite") (form (cite x))) ((kind "manual-page") (description "Present x in a blockquote tag\n") (title "blockquote") (form blockquote)) ((kind "manual-page") (description "Present a p tag (paragraph). If no parameter is given, just return a p tag without content.\nIf a parameter is given, return x embedded in a p tag.\n") (title "p") (form (p . x))) ((kind "manual-page") (description "Return a br tag (break)\n") (title "br") (form (br))) ((kind "manual-page") (description "Return n space special characters (horizontal space)\n") (title "space") (form (space n))) ((kind "manual-page") (description "Return n space special characters \n") (title "horizontal-space") (form horizontal-space)) ((kind "manual-page") (description "Return n vertical spaces, i.e., n p tags\n") (title "vertical-space") (form (vertical-space n))) ((kind "manual-page") (description "Return an HTML comment form. I.e, embed comment into the HTML comment characters\n") (title "html-comment") (form (html-comment comment))) ((kind "manual-page") (description "Return an HTML a tag (anchor) which links to the LAML software home page via an small gif icon.\nIf possible, a relative URL is used as the href attribute.\nThe parameter extra-level is an extra level to add. Normally, extra-level is 0 (zero).\nAs an example, extra-level should be 1 in case HTML files are organized\nin a sub-directory relative to the laml source file.\nText-or-image is either the symbol 'text or 'image, or a string. If 'text, a textual anchor is used.\nif 'image, a small 'laml house' is used as image. If text-or-image is a string it is a name of an image file\nin the laml image directory (including file name extension, excluding any file path).\nThe optional start-dir gives the directory, in which the home button is to be placed; It defaults to (startup-directory).\n") (title "laml-home-button") (form (laml-home-button extra-level text-or-image . start-dir))) ((kind "manual-page") (description "Return a banner with left, middle, and right justified contributions.\n") (title "left-middle-right-banner") (form (left-middle-right-banner left middle right))) ((kind "manual-page") (description "Return a banner with left and right justified contributions.\n") (title "left-right-banner") (form (left-right-banner left right))) ((kind "manual-page") (description "Return the standard LAML top banner with time of generation, copyright, and home icon\n") (title "laml-top-banner") (form (laml-top-banner))) ((kind "manual-section") (section-title "Indenting and framing.") (section-body "Here is a number of functions of indentation and framing\n\n")) ((kind "manual-page") (description "Indent text with p pixels\n") (title "indent-pixels") (form (indent-pixels p text))) ((kind "manual-page") (description "Show text in a column, narrowed from both left and right with p pixels\n") (title "narrow-with-pixels") (form (narrow-with-pixels p text))) ((kind "manual-page") (description "Shown text in a simple frame\n") (title "frame") (form (frame text))) ((kind "manual-page") (description "Embed text in an invisible table with one cell\n") (title "box") (form (box text))) ((kind "manual-page") (description "Present the contents-list, which is a list of elements, in a narrow\ncolumn of width, separated with activations of separator-fn.\n") (title "narrow") (form (narrow separator-fn width . contents-list))) ((kind "manual-page") (description "Embed text into a color frame. It is the background which is colored.\n") (title "color-frame") (form (color-frame text color))) ((kind "manual-page") (description "As color-frame, but this function supports and extra widht parameter. This is an integer: the with of the frame in pixels.\n") (title "color-frame-width") (form (color-frame-width text color width))) ((kind "manual-page") (description "Like frame, but with an extra width parameter. This is an integer: the with of the frame in pixels.\n") (title "frame-width") (form (frame-width text width))) ((kind "manual-page") (description "Embed text into a centered frame\n") (title "center-frame") (form (center-frame indentation text))) ((kind "manual-page") (description "\nTransliterate angle brackets in str to the particular html character entities.\n  With this useful function it is possible to show the html tags in a browser") (title "html-protect") (form (html-protect str))) ((kind "manual-page") (description "\nThis is a more advanced function which make font changes to substrings of str.\n  Surround substrings of str, as specified by the third parameter, in font tags.\n  Region-color-list is a list of coloring descriptors.  <p>\n  Each color descriptor is of the form:\n  (from-string to-string color face multiplicity). <p>\n  Face and multiplicity are optional.\n  From-string and to-strings delimits and identifies a substring of str to colorize etc.\n  color is a list of three integers: a rgb list.\n  We support the following face symbols: italic, bold, typewriter, underlined, plain (default bold).\n  Multiplicity is an integer telling how many times to to attempt the colorization on str (default 1). <p>\n  NB: In strange situations, the fontification of an early region-color-element may\n  affect the searching for latter region-color-elements. This is not an error, but a consequence of\n  the way font tags are puted into str.") (title "colorize-substrings") (form (colorize-substrings str region-color-list))) ((kind "manual-page") (cross-references (reference "similar function" "concatenate" "../html4.0-loose/man/surface.html#concatenate")) (description "Concatenete a number of strings. Con is an alias of string-append.\nIt is the intension to use it when concatenating HTML constituents.") (form "(con . string-list)") (title "con")) ((kind "manual-page") (description "Like con, but ensure that there are white space in between the concatenated strings.\n") (title "con-space") (form (con-space . string-list))) ((kind "manual-page") (description "Like con, but ensure that there are paragraphs marks in between the concatenated strings.\nlike con, but insert a p tag between all strings in string-list") (title "con-par") (form (con-par . string-list))) ((kind "manual-page") (description "\nif x is a number return a numbered character entity.\n  if x is a symbol og string, return a named character entity.") (title "character-entity") (form (character-entity x))) ((kind "manual-page") (description "Embed x into a copyright indication\n") (title "copyright-owner") (form (copyright-owner x))) ((kind "manual-page") (description "Return the standard LAML comment, to be inserted at the top of every LAML generated page.\n") (title "laml-standard-comment") (form (laml-standard-comment))) ((kind "manual-page") (description "Support of generation of alphabetic indexes. \nReturn an 'array' of letter links to #letter") (title "alphabetic-link-array") (form (alphabetic-link-array))) ((kind "manual-page") (description "\nReturn an 'array' of letter links to (string-append target-file-prefix \"-\" letter \".html\") for all letters in alphabet. \n  This is a generalized version of alphabetic-link-array.\n  target-file-prefix is a prefix of the file names, in which the index files are located.\n  alphabet is a list of letters, for which to generate index links from the alphabet arrays. Some letters\n  may be missing from the alphabet compared with a complete alphabet.\n  emphasis-letter is an optional letter which we emphasize in the link array") (title "alphabetic-link-array-1") (form (alphabetic-link-array-1 target-file-prefix alphabet . emphasis-letter))) ((kind "manual-page") (description "\ngenerate a function which appends element ") (title "html-appender") (form (html-appender element))) ((kind "manual-page") (description "\nReturn a html fonted version of str. Initial letter is sized base-size+1.\n  The rest is size base-size") (title "font-rise") (form (font-rise str base-size))) ((kind "manual-page") (description "The URL where the author of this library keeps a number of images (icons).\n") (title "kn-internet-image-path") (form kn-internet-image-path)) ((kind "manual-page") (description "Determination of the actual file path to images in html files.\nThis function depends on the variable image-file-access, which MUST defined external to this library.\nThe value of image-file-access can be changed via procedure set-image-file-access!\nOne of the following symbols: local, parent, net, sub-directory, or fixed. Default is local.\nlocal means that images are taken from the current directory.\nparent means that images are tagen from ../images.\nsub-directory means that images are taken from ./images.\nfixed means that images are taken from fixed-image-directory (a variable which must be defined\nexternal to this library).\nFinally, net means that images are taken from kn-internet-image-path (a variable).\n") (title "image-file-path") (form (image-file-path))) ((kind "manual-page") (description "\nSet the image-file-access variable. \n  mode is symbol, either local, parent, sub-directory, net, or fixed.\n  Relative to the hmtl directory, where the target files are written.") (title "set-image-file-path!") (form (set-image-file-path! mode))) ((kind "manual-page") (description "\nReturn the full path/address f image file named file-name. \n  Relies of the setting of the variable image-file-access via the procedure set-image-file-path!\n  File name must include file extension") (title "image-file") (form (image-file file-name))) ((kind "manual-page") (description "Return a Javascript calling form, given function function-name and parameters.\nReturns a string of the form: function-name(parameters).\nThis functions adds commas between the actual Javascript parameters.\n") (title "js-call") (form (js-call function-name parameters))) ((kind "manual-page") (description "Return a manifest javascript array given its elements\n") (title "js-string-array") (form (js-string-array elements))) ((kind "manual-page") (description "Write a HTML page consisting of header and body to file. \nFile is without extension. This function adds the html extension\n") (title "write-html-page") (form (write-html-page file header body))) ((kind "manual-page") (description "Makes a horizontal menu menu in terms of a table with links.\nThe table is made on the basis of parameter mini-menu-list, which is a list of\nmenu entries. A menu entry is a list of anchor-text and URL pairs (lists of\ntwo strings). Dark-color must be some dark color.\n") (title "mini-menu") (form (mini-menu mini-menu-list dark-color))))