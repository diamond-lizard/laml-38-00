; This file is generated by an LAML script based on the LAML tool tools/xml-in-laml/xml-in-laml.scm. DO NOT EDIT!

; lib/xml-in-laml/xml-in-laml.scm is not loaded here. 
; You must load it yourself prior to the loading of this file.

(define xhtml11-xml-transliterate-character-data? #t)
(define xhtml11-xml-char-transformation-table html-char-transformation-table)
(define xhtml11-xml-non-transliteration-elements (list "script" "style"))
(define xhtml11-xml-preformatted-text-elements (list "pre" "script" "style"))
(define xhtml11-xml-pass-default-dtd-attributes? #f)
(define xhtml11-xml-accept-only-string-valued-attributes? #f)
(define xhtml11-xml-accept-extended-contents? #t)
(define xhtml11-xml-document-type-declaration "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">")
(define xhtml11-xml-represent-white-space? #t)
(define xhtml11-xml-duplicated-attribute-handling 'keep-first)


; Empty temporary language map
(set! temp-language-map (quote ()))



;;; The validation procedures

(define (br-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED")))) (req-n 0)) (xml-check-for-empty-contents! contents "br") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "br"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "br"))))

(define (span-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "span"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "span")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "span"))))

(define (abbr-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "abbr"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "abbr")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "abbr"))))

(define (acronym-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "acronym"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "acronym")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "acronym"))))

(define (cite-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "cite"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "cite")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "cite"))))

(define (code-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "code"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "code")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "code"))))

(define (dfn-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "dfn"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "dfn")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "dfn"))))

(define (em-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "em"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "em")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "em"))))

(define (kbd-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "kbd"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "kbd")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "kbd"))))

(define (q-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("cite" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "q"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "q")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "q"))))

(define (samp-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "samp"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "samp")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "samp"))))

(define (strong-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "strong"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "strong")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "strong"))))

(define (var-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "var"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "var")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "var"))))

(define (div-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "div"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "div")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "div"))))

(define (p-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "p"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "p")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "p"))))

(define (address-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "address"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "address")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "address"))))

(define (blockquote-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("cite" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (45) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (0 k 10) (0 l 11) (0 m 12) (0 n 13) (0 o 14) (0 p 15) (0 q 16) (0 r 17) (0 s 18) (0 t 19) (0 u 20) (0 v 21) (0 w 22) (1 b 23) (1 c 24) (1 d 25) (1 e 26) (1 f 27) (1 g 28) (1 h 29) (1 i 30) (1 j 31) (1 k 32) (1 l 33) (1 m 34) (1 n 35) (1 o 36) (1 p 37) (1 q 38) (1 r 39) (1 s 40) (1 t 41) (1 u 42) (1 v 43) (1 w 44) (1 x 45) (2 b 23) (2 c 24) (2 d 25) (2 e 26) (2 f 27) (2 g 28) (2 h 29) (2 i 30) (2 j 31) (2 k 32) (2 l 33) (2 m 34) (2 n 35) (2 o 36) (2 p 37) (2 q 38) (2 r 39) (2 s 40) (2 t 41) (2 u 42) (2 v 43) (2 w 44) (2 x 45) (3 b 23) (3 c 24) (3 d 25) (3 e 26) (3 f 27) (3 g 28) (3 h 29) (3 i 30) (3 j 31) (3 k 32) (3 l 33) (3 m 34) (3 n 35) (3 o 36) (3 p 37) (3 q 38) (3 r 39) (3 s 40) (3 t 41) (3 u 42) (3 v 43) (3 w 44) (3 x 45) (4 b 23) (4 c 24) (4 d 25) (4 e 26) (4 f 27) (4 g 28) (4 h 29) (4 i 30) (4 j 31) (4 k 32) (4 l 33) (4 m 34) (4 n 35) (4 o 36) (4 p 37) (4 q 38) (4 r 39) (4 s 40) (4 t 41) (4 u 42) (4 v 43) (4 w 44) (4 x 45) (5 b 23) (5 c 24) (5 d 25) (5 e 26) (5 f 27) (5 g 28) (5 h 29) (5 i 30) (5 j 31) (5 k 32) (5 l 33) (5 m 34) (5 n 35) (5 o 36) (5 p 37) (5 q 38) (5 r 39) (5 s 40) (5 t 41) (5 u 42) (5 v 43) (5 w 44) (5 x 45) (6 b 23) (6 c 24) (6 d 25) (6 e 26) (6 f 27) (6 g 28) (6 h 29) (6 i 30) (6 j 31) (6 k 32) (6 l 33) (6 m 34) (6 n 35) (6 o 36) (6 p 37) (6 q 38) (6 r 39) (6 s 40) (6 t 41) (6 u 42) (6 v 43) (6 w 44) (6 x 45) (7 b 23) (7 c 24) (7 d 25) (7 e 26) (7 f 27) (7 g 28) (7 h 29) (7 i 30) (7 j 31) (7 k 32) (7 l 33) (7 m 34) (7 n 35) (7 o 36) (7 p 37) (7 q 38) (7 r 39) (7 s 40) (7 t 41) (7 u 42) (7 v 43) (7 w 44) (7 x 45) (8 b 23) (8 c 24) (8 d 25) (8 e 26) (8 f 27) (8 g 28) (8 h 29) (8 i 30) (8 j 31) (8 k 32) (8 l 33) (8 m 34) (8 n 35) (8 o 36) (8 p 37) (8 q 38) (8 r 39) (8 s 40) (8 t 41) (8 u 42) (8 v 43) (8 w 44) (8 x 45) (9 b 23) (9 c 24) (9 d 25) (9 e 26) (9 f 27) (9 g 28) (9 h 29) (9 i 30) (9 j 31) (9 k 32) (9 l 33) (9 m 34) (9 n 35) (9 o 36) (9 p 37) (9 q 38) (9 r 39) (9 s 40) (9 t 41) (9 u 42) (9 v 43) (9 w 44) (9 x 45) (10 b 23) (10 c 24) (10 d 25) (10 e 26) (10 f 27) (10 g 28) (10 h 29) (10 i 30) (10 j 31) (10 k 32) (10 l 33) (10 m 34) (10 n 35) (10 o 36) (10 p 37) (10 q 38) (10 r 39) (10 s 40) (10 t 41) (10 u 42) (10 v 43) (10 w 44) (10 x 45) (11 b 23) (11 c 24) (11 d 25) (11 e 26) (11 f 27) (11 g 28) (11 h 29) (11 i 30) (11 j 31) (11 k 32) (11 l 33) (11 m 34) (11 n 35) (11 o 36) (11 p 37) (11 q 38) (11 r 39) (11 s 40) (11 t 41) (11 u 42) (11 v 43) (11 w 44) (11 x 45) (12 b 23) (12 c 24) (12 d 25) (12 e 26) (12 f 27) (12 g 28) (12 h 29) (12 i 30) (12 j 31) (12 k 32) (12 l 33) (12 m 34) (12 n 35) (12 o 36) (12 p 37) (12 q 38) (12 r 39) (12 s 40) (12 t 41) (12 u 42) (12 v 43) (12 w 44) (12 x 45) (13 b 23) (13 c 24) (13 d 25) (13 e 26) (13 f 27) (13 g 28) (13 h 29) (13 i 30) (13 j 31) (13 k 32) (13 l 33) (13 m 34) (13 n 35) (13 o 36) (13 p 37) (13 q 38) (13 r 39) (13 s 40) (13 t 41) (13 u 42) (13 v 43) (13 w 44) (13 x 45) (14 b 23) (14 c 24) (14 d 25) (14 e 26) (14 f 27) (14 g 28) (14 h 29) (14 i 30) (14 j 31) (14 k 32) (14 l 33) (14 m 34) (14 n 35) (14 o 36) (14 p 37) (14 q 38) (14 r 39) (14 s 40) (14 t 41) (14 u 42) (14 v 43) (14 w 44) (14 x 45) (15 b 23) (15 c 24) (15 d 25) (15 e 26) (15 f 27) (15 g 28) (15 h 29) (15 i 30) (15 j 31) (15 k 32) (15 l 33) (15 m 34) (15 n 35) (15 o 36) (15 p 37) (15 q 38) (15 r 39) (15 s 40) (15 t 41) (15 u 42) (15 v 43) (15 w 44) (15 x 45) (16 b 23) (16 c 24) (16 d 25) (16 e 26) (16 f 27) (16 g 28) (16 h 29) (16 i 30) (16 j 31) (16 k 32) (16 l 33) (16 m 34) (16 n 35) (16 o 36) (16 p 37) (16 q 38) (16 r 39) (16 s 40) (16 t 41) (16 u 42) (16 v 43) (16 w 44) (16 x 45) (17 b 23) (17 c 24) (17 d 25) (17 e 26) (17 f 27) (17 g 28) (17 h 29) (17 i 30) (17 j 31) (17 k 32) (17 l 33) (17 m 34) (17 n 35) (17 o 36) (17 p 37) (17 q 38) (17 r 39) (17 s 40) (17 t 41) (17 u 42) (17 v 43) (17 w 44) (17 x 45) (18 b 23) (18 c 24) (18 d 25) (18 e 26) (18 f 27) (18 g 28) (18 h 29) (18 i 30) (18 j 31) (18 k 32) (18 l 33) (18 m 34) (18 n 35) (18 o 36) (18 p 37) (18 q 38) (18 r 39) (18 s 40) (18 t 41) (18 u 42) (18 v 43) (18 w 44) (18 x 45) (19 b 23) (19 c 24) (19 d 25) (19 e 26) (19 f 27) (19 g 28) (19 h 29) (19 i 30) (19 j 31) (19 k 32) (19 l 33) (19 m 34) (19 n 35) (19 o 36) (19 p 37) (19 q 38) (19 r 39) (19 s 40) (19 t 41) (19 u 42) (19 v 43) (19 w 44) (19 x 45) (20 b 23) (20 c 24) (20 d 25) (20 e 26) (20 f 27) (20 g 28) (20 h 29) (20 i 30) (20 j 31) (20 k 32) (20 l 33) (20 m 34) (20 n 35) (20 o 36) (20 p 37) (20 q 38) (20 r 39) (20 s 40) (20 t 41) (20 u 42) (20 v 43) (20 w 44) (20 x 45) (21 b 23) (21 c 24) (21 d 25) (21 e 26) (21 f 27) (21 g 28) (21 h 29) (21 i 30) (21 j 31) (21 k 32) (21 l 33) (21 m 34) (21 n 35) (21 o 36) (21 p 37) (21 q 38) (21 r 39) (21 s 40) (21 t 41) (21 u 42) (21 v 43) (21 w 44) (21 x 45) (22 b 23) (22 c 24) (22 d 25) (22 e 26) (22 f 27) (22 g 28) (22 h 29) (22 i 30) (22 j 31) (22 k 32) (22 l 33) (22 m 34) (22 n 35) (22 o 36) (22 p 37) (22 q 38) (22 r 39) (22 s 40) (22 t 41) (22 u 42) (22 v 43) (22 w 44) (22 x 45) (23 b 23) (23 c 24) (23 d 25) (23 e 26) (23 f 27) (23 g 28) (23 h 29) (23 i 30) (23 j 31) (23 k 32) (23 l 33) (23 m 34) (23 n 35) (23 o 36) (23 p 37) (23 q 38) (23 r 39) (23 s 40) (23 t 41) (23 u 42) (23 v 43) (23 w 44) (23 x 45) (24 b 23) (24 c 24) (24 d 25) (24 e 26) (24 f 27) (24 g 28) (24 h 29) (24 i 30) (24 j 31) (24 k 32) (24 l 33) (24 m 34) (24 n 35) (24 o 36) (24 p 37) (24 q 38) (24 r 39) (24 s 40) (24 t 41) (24 u 42) (24 v 43) (24 w 44) (24 x 45) (25 b 23) (25 c 24) (25 d 25) (25 e 26) (25 f 27) (25 g 28) (25 h 29) (25 i 30) (25 j 31) (25 k 32) (25 l 33) (25 m 34) (25 n 35) (25 o 36) (25 p 37) (25 q 38) (25 r 39) (25 s 40) (25 t 41) (25 u 42) (25 v 43) (25 w 44) (25 x 45) (26 b 23) (26 c 24) (26 d 25) (26 e 26) (26 f 27) (26 g 28) (26 h 29) (26 i 30) (26 j 31) (26 k 32) (26 l 33) (26 m 34) (26 n 35) (26 o 36) (26 p 37) (26 q 38) (26 r 39) (26 s 40) (26 t 41) (26 u 42) (26 v 43) (26 w 44) (26 x 45) (27 b 23) (27 c 24) (27 d 25) (27 e 26) (27 f 27) (27 g 28) (27 h 29) (27 i 30) (27 j 31) (27 k 32) (27 l 33) (27 m 34) (27 n 35) (27 o 36) (27 p 37) (27 q 38) (27 r 39) (27 s 40) (27 t 41) (27 u 42) (27 v 43) (27 w 44) (27 x 45) (28 b 23) (28 c 24) (28 d 25) (28 e 26) (28 f 27) (28 g 28) (28 h 29) (28 i 30) (28 j 31) (28 k 32) (28 l 33) (28 m 34) (28 n 35) (28 o 36) (28 p 37) (28 q 38) (28 r 39) (28 s 40) (28 t 41) (28 u 42) (28 v 43) (28 w 44) (28 x 45) (29 b 23) (29 c 24) (29 d 25) (29 e 26) (29 f 27) (29 g 28) (29 h 29) (29 i 30) (29 j 31) (29 k 32) (29 l 33) (29 m 34) (29 n 35) (29 o 36) (29 p 37) (29 q 38) (29 r 39) (29 s 40) (29 t 41) (29 u 42) (29 v 43) (29 w 44) (29 x 45) (30 b 23) (30 c 24) (30 d 25) (30 e 26) (30 f 27) (30 g 28) (30 h 29) (30 i 30) (30 j 31) (30 k 32) (30 l 33) (30 m 34) (30 n 35) (30 o 36) (30 p 37) (30 q 38) (30 r 39) (30 s 40) (30 t 41) (30 u 42) (30 v 43) (30 w 44) (30 x 45) (31 b 23) (31 c 24) (31 d 25) (31 e 26) (31 f 27) (31 g 28) (31 h 29) (31 i 30) (31 j 31) (31 k 32) (31 l 33) (31 m 34) (31 n 35) (31 o 36) (31 p 37) (31 q 38) (31 r 39) (31 s 40) (31 t 41) (31 u 42) (31 v 43) (31 w 44) (31 x 45) (32 b 23) (32 c 24) (32 d 25) (32 e 26) (32 f 27) (32 g 28) (32 h 29) (32 i 30) (32 j 31) (32 k 32) (32 l 33) (32 m 34) (32 n 35) (32 o 36) (32 p 37) (32 q 38) (32 r 39) (32 s 40) (32 t 41) (32 u 42) (32 v 43) (32 w 44) (32 x 45) (33 b 23) (33 c 24) (33 d 25) (33 e 26) (33 f 27) (33 g 28) (33 h 29) (33 i 30) (33 j 31) (33 k 32) (33 l 33) (33 m 34) (33 n 35) (33 o 36) (33 p 37) (33 q 38) (33 r 39) (33 s 40) (33 t 41) (33 u 42) (33 v 43) (33 w 44) (33 x 45) (34 b 23) (34 c 24) (34 d 25) (34 e 26) (34 f 27) (34 g 28) (34 h 29) (34 i 30) (34 j 31) (34 k 32) (34 l 33) (34 m 34) (34 n 35) (34 o 36) (34 p 37) (34 q 38) (34 r 39) (34 s 40) (34 t 41) (34 u 42) (34 v 43) (34 w 44) (34 x 45) (35 b 23) (35 c 24) (35 d 25) (35 e 26) (35 f 27) (35 g 28) (35 h 29) (35 i 30) (35 j 31) (35 k 32) (35 l 33) (35 m 34) (35 n 35) (35 o 36) (35 p 37) (35 q 38) (35 r 39) (35 s 40) (35 t 41) (35 u 42) (35 v 43) (35 w 44) (35 x 45) (36 b 23) (36 c 24) (36 d 25) (36 e 26) (36 f 27) (36 g 28) (36 h 29) (36 i 30) (36 j 31) (36 k 32) (36 l 33) (36 m 34) (36 n 35) (36 o 36) (36 p 37) (36 q 38) (36 r 39) (36 s 40) (36 t 41) (36 u 42) (36 v 43) (36 w 44) (36 x 45) (37 b 23) (37 c 24) (37 d 25) (37 e 26) (37 f 27) (37 g 28) (37 h 29) (37 i 30) (37 j 31) (37 k 32) (37 l 33) (37 m 34) (37 n 35) (37 o 36) (37 p 37) (37 q 38) (37 r 39) (37 s 40) (37 t 41) (37 u 42) (37 v 43) (37 w 44) (37 x 45) (38 b 23) (38 c 24) (38 d 25) (38 e 26) (38 f 27) (38 g 28) (38 h 29) (38 i 30) (38 j 31) (38 k 32) (38 l 33) (38 m 34) (38 n 35) (38 o 36) (38 p 37) (38 q 38) (38 r 39) (38 s 40) (38 t 41) (38 u 42) (38 v 43) (38 w 44) (38 x 45) (39 b 23) (39 c 24) (39 d 25) (39 e 26) (39 f 27) (39 g 28) (39 h 29) (39 i 30) (39 j 31) (39 k 32) (39 l 33) (39 m 34) (39 n 35) (39 o 36) (39 p 37) (39 q 38) (39 r 39) (39 s 40) (39 t 41) (39 u 42) (39 v 43) (39 w 44) (39 x 45) (40 b 23) (40 c 24) (40 d 25) (40 e 26) (40 f 27) (40 g 28) (40 h 29) (40 i 30) (40 j 31) (40 k 32) (40 l 33) (40 m 34) (40 n 35) (40 o 36) (40 p 37) (40 q 38) (40 r 39) (40 s 40) (40 t 41) (40 u 42) (40 v 43) (40 w 44) (40 x 45) (41 b 23) (41 c 24) (41 d 25) (41 e 26) (41 f 27) (41 g 28) (41 h 29) (41 i 30) (41 j 31) (41 k 32) (41 l 33) (41 m 34) (41 n 35) (41 o 36) (41 p 37) (41 q 38) (41 r 39) (41 s 40) (41 t 41) (41 u 42) (41 v 43) (41 w 44) (41 x 45) (42 b 23) (42 c 24) (42 d 25) (42 e 26) (42 f 27) (42 g 28) (42 h 29) (42 i 30) (42 j 31) (42 k 32) (42 l 33) (42 m 34) (42 n 35) (42 o 36) (42 p 37) (42 q 38) (42 r 39) (42 s 40) (42 t 41) (42 u 42) (42 v 43) (42 w 44) (42 x 45) (43 b 23) (43 c 24) (43 d 25) (43 e 26) (43 f 27) (43 g 28) (43 h 29) (43 i 30) (43 j 31) (43 k 32) (43 l 33) (43 m 34) (43 n 35) (43 o 36) (43 p 37) (43 q 38) (43 r 39) (43 s 40) (43 t 41) (43 u 42) (43 v 43) (43 w 44) (43 x 45) (44 b 23) (44 c 24) (44 d 25) (44 e 26) (44 f 27) (44 g 28) (44 h 29) (44 i 30) (44 j 31) (44 k 32) (44 l 33) (44 m 34) (44 n 35) (44 o 36) (44 p 37) (44 q 38) (44 r 39) (44 s 40) (44 t 41) (44 u 42) (44 v 43) (44 w 44) (44 x 45)) #((address  . o) (blockquote  . n) (del  . u) (div  . l) (dl  . j) (fieldset  . s) (form  . r) (h1  . b) (h2  . c) (h3  . d) (h4  . e) (h5  . f) (h6  . g) (hr  . p) (ins  . t) (noscript  . w) (ol  . i) (p  . k) (pre  . m) (script  . v) (table  . q) (terminator$$  . x) (ul  . h)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "blockquote"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "blockquote")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "blockquote"))))

(define (pre-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("preserve") "preserve" "#FIXED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "pre"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "pre")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b bdo a script map)) "pre"))))

(define (h1-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "h1"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "h1")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "h1"))))

(define (h2-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "h2"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "h2")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "h2"))))

(define (h3-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "h3"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "h3")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "h3"))))

(define (h4-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "h4"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "h4")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "h4"))))

(define (h5-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "h5"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "h5")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "h5"))))

(define (h6-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "h6"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "h6")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "h6"))))

(define (a-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("shape" ("rect" "circle" "poly" "default") "rect") ("coords" "CDATA" "#IMPLIED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("href" "CDATA" "#IMPLIED") ("charset" "CDATA" "#IMPLIED") ("type" "CDATA" "#IMPLIED") ("hreflang" "NMTOKEN" "#IMPLIED") ("rel" "NMTOKENS" "#IMPLIED") ("rev" "NMTOKENS" "#IMPLIED") ("accesskey" "CDATA" "#IMPLIED") ("tabindex" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "a"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "a")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo img map object input select textarea label button ruby ins del script noscript)) "a"))))

(define (dl-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (5) #((0 b 1) (0 c 2) (1 b 3) (1 c 4) (1 d 5) (2 b 3) (2 c 4) (2 d 5) (3 b 3) (3 c 4) (3 d 5) (4 b 3) (4 c 4) (4 d 5)) #((dd  . c) (dt  . b) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "dl"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "dl")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "dl"))))

(define (dt-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "dt"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "dt")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "dt"))))

(define (dd-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "dd"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "dd")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "dd"))))

(define (ol-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((li  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "ol"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "ol")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "ol"))))

(define (ul-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((li  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "ul"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "ul")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "ul"))))

(define (li-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "li"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "li")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "li"))))

(define (ins-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("cite" "CDATA" "#IMPLIED") ("datetime" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "ins"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "ins")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "ins"))))

(define (del-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("cite" "CDATA" "#IMPLIED") ("datetime" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "del"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "del")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "del"))))

(define (bdo-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("dir" ("ltr" "rtl") "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 1)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "bdo"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "bdo")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "bdo"))))

(define (ruby-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote ())) (req-n 0) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (1 d 6) (1 e 7) (2 g 3) (3 f 4) (3 g 5) (5 f 4) (6 f 4) (7 d 8) (8 e 9) (9 f 4)) #((rb  . b) (rbc  . c) (rp  . e) (rt  . d) (rtc  . g) (terminator$$  . f)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "ruby"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "ruby")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "ruby"))))

(define (rbc-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((rb  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "rbc"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "rbc")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "rbc"))))

(define (rtc-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((rt  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "rtc"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "rtc")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "rtc"))))

(define (rb-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "rb"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "rb")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ins del script noscript)) "rb"))))

(define (rt-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("rbspan" "CDATA" "1")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "rt"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "rt")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ins del script noscript)) "rt"))))

(define (rp-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "rp"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "rp")) (if xml-validate-contents? (validate-as-pcdata! contents "rp"))))

(define (b-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "b"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "b")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "b"))))

(define (big-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "big"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "big")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "big"))))

(define (i-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "i"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "i")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "i"))))

(define (small-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "small"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "small")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "small"))))

(define (sub-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "sub"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "sub")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "sub"))))

(define (sup-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "sup"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "sup")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "sup"))))

(define (tt-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "tt"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "tt")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "tt"))))

(define (hr-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (xml-check-for-empty-contents! contents "hr") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "hr"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "hr"))))

(define (link-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("charset" "CDATA" "#IMPLIED") ("href" "CDATA" "#IMPLIED") ("hreflang" "NMTOKEN" "#IMPLIED") ("type" "CDATA" "#IMPLIED") ("rel" "NMTOKENS" "#IMPLIED") ("rev" "NMTOKENS" "#IMPLIED") ("media" "CDATA" "#IMPLIED")))) (req-n 0)) (xml-check-for-empty-contents! contents "link") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "link"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "link"))))

(define (meta-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("content" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("http-equiv" "NMTOKEN" "#IMPLIED") ("name" "NMTOKEN" "#IMPLIED") ("scheme" "CDATA" "#IMPLIED")))) (req-n 1)) (xml-check-for-empty-contents! contents "meta") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "meta"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "meta"))))

(define (base-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("href" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED")))) (req-n 1)) (xml-check-for-empty-contents! contents "base") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "base"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "base"))))

(define (script-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("type" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("charset" "CDATA" "#IMPLIED") ("src" "CDATA" "#IMPLIED") ("defer" ("defer") "#IMPLIED") ("xml:space" ("preserve") "preserve" "#FIXED")))) (req-n 1)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "script"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "script")) (if xml-validate-contents? (validate-as-pcdata! contents "script"))))

(define (noscript-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (45) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (0 k 10) (0 l 11) (0 m 12) (0 n 13) (0 o 14) (0 p 15) (0 q 16) (0 r 17) (0 s 18) (0 t 19) (0 u 20) (0 v 21) (0 w 22) (1 b 23) (1 c 24) (1 d 25) (1 e 26) (1 f 27) (1 g 28) (1 h 29) (1 i 30) (1 j 31) (1 k 32) (1 l 33) (1 m 34) (1 n 35) (1 o 36) (1 p 37) (1 q 38) (1 r 39) (1 s 40) (1 t 41) (1 u 42) (1 v 43) (1 w 44) (1 x 45) (2 b 23) (2 c 24) (2 d 25) (2 e 26) (2 f 27) (2 g 28) (2 h 29) (2 i 30) (2 j 31) (2 k 32) (2 l 33) (2 m 34) (2 n 35) (2 o 36) (2 p 37) (2 q 38) (2 r 39) (2 s 40) (2 t 41) (2 u 42) (2 v 43) (2 w 44) (2 x 45) (3 b 23) (3 c 24) (3 d 25) (3 e 26) (3 f 27) (3 g 28) (3 h 29) (3 i 30) (3 j 31) (3 k 32) (3 l 33) (3 m 34) (3 n 35) (3 o 36) (3 p 37) (3 q 38) (3 r 39) (3 s 40) (3 t 41) (3 u 42) (3 v 43) (3 w 44) (3 x 45) (4 b 23) (4 c 24) (4 d 25) (4 e 26) (4 f 27) (4 g 28) (4 h 29) (4 i 30) (4 j 31) (4 k 32) (4 l 33) (4 m 34) (4 n 35) (4 o 36) (4 p 37) (4 q 38) (4 r 39) (4 s 40) (4 t 41) (4 u 42) (4 v 43) (4 w 44) (4 x 45) (5 b 23) (5 c 24) (5 d 25) (5 e 26) (5 f 27) (5 g 28) (5 h 29) (5 i 30) (5 j 31) (5 k 32) (5 l 33) (5 m 34) (5 n 35) (5 o 36) (5 p 37) (5 q 38) (5 r 39) (5 s 40) (5 t 41) (5 u 42) (5 v 43) (5 w 44) (5 x 45) (6 b 23) (6 c 24) (6 d 25) (6 e 26) (6 f 27) (6 g 28) (6 h 29) (6 i 30) (6 j 31) (6 k 32) (6 l 33) (6 m 34) (6 n 35) (6 o 36) (6 p 37) (6 q 38) (6 r 39) (6 s 40) (6 t 41) (6 u 42) (6 v 43) (6 w 44) (6 x 45) (7 b 23) (7 c 24) (7 d 25) (7 e 26) (7 f 27) (7 g 28) (7 h 29) (7 i 30) (7 j 31) (7 k 32) (7 l 33) (7 m 34) (7 n 35) (7 o 36) (7 p 37) (7 q 38) (7 r 39) (7 s 40) (7 t 41) (7 u 42) (7 v 43) (7 w 44) (7 x 45) (8 b 23) (8 c 24) (8 d 25) (8 e 26) (8 f 27) (8 g 28) (8 h 29) (8 i 30) (8 j 31) (8 k 32) (8 l 33) (8 m 34) (8 n 35) (8 o 36) (8 p 37) (8 q 38) (8 r 39) (8 s 40) (8 t 41) (8 u 42) (8 v 43) (8 w 44) (8 x 45) (9 b 23) (9 c 24) (9 d 25) (9 e 26) (9 f 27) (9 g 28) (9 h 29) (9 i 30) (9 j 31) (9 k 32) (9 l 33) (9 m 34) (9 n 35) (9 o 36) (9 p 37) (9 q 38) (9 r 39) (9 s 40) (9 t 41) (9 u 42) (9 v 43) (9 w 44) (9 x 45) (10 b 23) (10 c 24) (10 d 25) (10 e 26) (10 f 27) (10 g 28) (10 h 29) (10 i 30) (10 j 31) (10 k 32) (10 l 33) (10 m 34) (10 n 35) (10 o 36) (10 p 37) (10 q 38) (10 r 39) (10 s 40) (10 t 41) (10 u 42) (10 v 43) (10 w 44) (10 x 45) (11 b 23) (11 c 24) (11 d 25) (11 e 26) (11 f 27) (11 g 28) (11 h 29) (11 i 30) (11 j 31) (11 k 32) (11 l 33) (11 m 34) (11 n 35) (11 o 36) (11 p 37) (11 q 38) (11 r 39) (11 s 40) (11 t 41) (11 u 42) (11 v 43) (11 w 44) (11 x 45) (12 b 23) (12 c 24) (12 d 25) (12 e 26) (12 f 27) (12 g 28) (12 h 29) (12 i 30) (12 j 31) (12 k 32) (12 l 33) (12 m 34) (12 n 35) (12 o 36) (12 p 37) (12 q 38) (12 r 39) (12 s 40) (12 t 41) (12 u 42) (12 v 43) (12 w 44) (12 x 45) (13 b 23) (13 c 24) (13 d 25) (13 e 26) (13 f 27) (13 g 28) (13 h 29) (13 i 30) (13 j 31) (13 k 32) (13 l 33) (13 m 34) (13 n 35) (13 o 36) (13 p 37) (13 q 38) (13 r 39) (13 s 40) (13 t 41) (13 u 42) (13 v 43) (13 w 44) (13 x 45) (14 b 23) (14 c 24) (14 d 25) (14 e 26) (14 f 27) (14 g 28) (14 h 29) (14 i 30) (14 j 31) (14 k 32) (14 l 33) (14 m 34) (14 n 35) (14 o 36) (14 p 37) (14 q 38) (14 r 39) (14 s 40) (14 t 41) (14 u 42) (14 v 43) (14 w 44) (14 x 45) (15 b 23) (15 c 24) (15 d 25) (15 e 26) (15 f 27) (15 g 28) (15 h 29) (15 i 30) (15 j 31) (15 k 32) (15 l 33) (15 m 34) (15 n 35) (15 o 36) (15 p 37) (15 q 38) (15 r 39) (15 s 40) (15 t 41) (15 u 42) (15 v 43) (15 w 44) (15 x 45) (16 b 23) (16 c 24) (16 d 25) (16 e 26) (16 f 27) (16 g 28) (16 h 29) (16 i 30) (16 j 31) (16 k 32) (16 l 33) (16 m 34) (16 n 35) (16 o 36) (16 p 37) (16 q 38) (16 r 39) (16 s 40) (16 t 41) (16 u 42) (16 v 43) (16 w 44) (16 x 45) (17 b 23) (17 c 24) (17 d 25) (17 e 26) (17 f 27) (17 g 28) (17 h 29) (17 i 30) (17 j 31) (17 k 32) (17 l 33) (17 m 34) (17 n 35) (17 o 36) (17 p 37) (17 q 38) (17 r 39) (17 s 40) (17 t 41) (17 u 42) (17 v 43) (17 w 44) (17 x 45) (18 b 23) (18 c 24) (18 d 25) (18 e 26) (18 f 27) (18 g 28) (18 h 29) (18 i 30) (18 j 31) (18 k 32) (18 l 33) (18 m 34) (18 n 35) (18 o 36) (18 p 37) (18 q 38) (18 r 39) (18 s 40) (18 t 41) (18 u 42) (18 v 43) (18 w 44) (18 x 45) (19 b 23) (19 c 24) (19 d 25) (19 e 26) (19 f 27) (19 g 28) (19 h 29) (19 i 30) (19 j 31) (19 k 32) (19 l 33) (19 m 34) (19 n 35) (19 o 36) (19 p 37) (19 q 38) (19 r 39) (19 s 40) (19 t 41) (19 u 42) (19 v 43) (19 w 44) (19 x 45) (20 b 23) (20 c 24) (20 d 25) (20 e 26) (20 f 27) (20 g 28) (20 h 29) (20 i 30) (20 j 31) (20 k 32) (20 l 33) (20 m 34) (20 n 35) (20 o 36) (20 p 37) (20 q 38) (20 r 39) (20 s 40) (20 t 41) (20 u 42) (20 v 43) (20 w 44) (20 x 45) (21 b 23) (21 c 24) (21 d 25) (21 e 26) (21 f 27) (21 g 28) (21 h 29) (21 i 30) (21 j 31) (21 k 32) (21 l 33) (21 m 34) (21 n 35) (21 o 36) (21 p 37) (21 q 38) (21 r 39) (21 s 40) (21 t 41) (21 u 42) (21 v 43) (21 w 44) (21 x 45) (22 b 23) (22 c 24) (22 d 25) (22 e 26) (22 f 27) (22 g 28) (22 h 29) (22 i 30) (22 j 31) (22 k 32) (22 l 33) (22 m 34) (22 n 35) (22 o 36) (22 p 37) (22 q 38) (22 r 39) (22 s 40) (22 t 41) (22 u 42) (22 v 43) (22 w 44) (22 x 45) (23 b 23) (23 c 24) (23 d 25) (23 e 26) (23 f 27) (23 g 28) (23 h 29) (23 i 30) (23 j 31) (23 k 32) (23 l 33) (23 m 34) (23 n 35) (23 o 36) (23 p 37) (23 q 38) (23 r 39) (23 s 40) (23 t 41) (23 u 42) (23 v 43) (23 w 44) (23 x 45) (24 b 23) (24 c 24) (24 d 25) (24 e 26) (24 f 27) (24 g 28) (24 h 29) (24 i 30) (24 j 31) (24 k 32) (24 l 33) (24 m 34) (24 n 35) (24 o 36) (24 p 37) (24 q 38) (24 r 39) (24 s 40) (24 t 41) (24 u 42) (24 v 43) (24 w 44) (24 x 45) (25 b 23) (25 c 24) (25 d 25) (25 e 26) (25 f 27) (25 g 28) (25 h 29) (25 i 30) (25 j 31) (25 k 32) (25 l 33) (25 m 34) (25 n 35) (25 o 36) (25 p 37) (25 q 38) (25 r 39) (25 s 40) (25 t 41) (25 u 42) (25 v 43) (25 w 44) (25 x 45) (26 b 23) (26 c 24) (26 d 25) (26 e 26) (26 f 27) (26 g 28) (26 h 29) (26 i 30) (26 j 31) (26 k 32) (26 l 33) (26 m 34) (26 n 35) (26 o 36) (26 p 37) (26 q 38) (26 r 39) (26 s 40) (26 t 41) (26 u 42) (26 v 43) (26 w 44) (26 x 45) (27 b 23) (27 c 24) (27 d 25) (27 e 26) (27 f 27) (27 g 28) (27 h 29) (27 i 30) (27 j 31) (27 k 32) (27 l 33) (27 m 34) (27 n 35) (27 o 36) (27 p 37) (27 q 38) (27 r 39) (27 s 40) (27 t 41) (27 u 42) (27 v 43) (27 w 44) (27 x 45) (28 b 23) (28 c 24) (28 d 25) (28 e 26) (28 f 27) (28 g 28) (28 h 29) (28 i 30) (28 j 31) (28 k 32) (28 l 33) (28 m 34) (28 n 35) (28 o 36) (28 p 37) (28 q 38) (28 r 39) (28 s 40) (28 t 41) (28 u 42) (28 v 43) (28 w 44) (28 x 45) (29 b 23) (29 c 24) (29 d 25) (29 e 26) (29 f 27) (29 g 28) (29 h 29) (29 i 30) (29 j 31) (29 k 32) (29 l 33) (29 m 34) (29 n 35) (29 o 36) (29 p 37) (29 q 38) (29 r 39) (29 s 40) (29 t 41) (29 u 42) (29 v 43) (29 w 44) (29 x 45) (30 b 23) (30 c 24) (30 d 25) (30 e 26) (30 f 27) (30 g 28) (30 h 29) (30 i 30) (30 j 31) (30 k 32) (30 l 33) (30 m 34) (30 n 35) (30 o 36) (30 p 37) (30 q 38) (30 r 39) (30 s 40) (30 t 41) (30 u 42) (30 v 43) (30 w 44) (30 x 45) (31 b 23) (31 c 24) (31 d 25) (31 e 26) (31 f 27) (31 g 28) (31 h 29) (31 i 30) (31 j 31) (31 k 32) (31 l 33) (31 m 34) (31 n 35) (31 o 36) (31 p 37) (31 q 38) (31 r 39) (31 s 40) (31 t 41) (31 u 42) (31 v 43) (31 w 44) (31 x 45) (32 b 23) (32 c 24) (32 d 25) (32 e 26) (32 f 27) (32 g 28) (32 h 29) (32 i 30) (32 j 31) (32 k 32) (32 l 33) (32 m 34) (32 n 35) (32 o 36) (32 p 37) (32 q 38) (32 r 39) (32 s 40) (32 t 41) (32 u 42) (32 v 43) (32 w 44) (32 x 45) (33 b 23) (33 c 24) (33 d 25) (33 e 26) (33 f 27) (33 g 28) (33 h 29) (33 i 30) (33 j 31) (33 k 32) (33 l 33) (33 m 34) (33 n 35) (33 o 36) (33 p 37) (33 q 38) (33 r 39) (33 s 40) (33 t 41) (33 u 42) (33 v 43) (33 w 44) (33 x 45) (34 b 23) (34 c 24) (34 d 25) (34 e 26) (34 f 27) (34 g 28) (34 h 29) (34 i 30) (34 j 31) (34 k 32) (34 l 33) (34 m 34) (34 n 35) (34 o 36) (34 p 37) (34 q 38) (34 r 39) (34 s 40) (34 t 41) (34 u 42) (34 v 43) (34 w 44) (34 x 45) (35 b 23) (35 c 24) (35 d 25) (35 e 26) (35 f 27) (35 g 28) (35 h 29) (35 i 30) (35 j 31) (35 k 32) (35 l 33) (35 m 34) (35 n 35) (35 o 36) (35 p 37) (35 q 38) (35 r 39) (35 s 40) (35 t 41) (35 u 42) (35 v 43) (35 w 44) (35 x 45) (36 b 23) (36 c 24) (36 d 25) (36 e 26) (36 f 27) (36 g 28) (36 h 29) (36 i 30) (36 j 31) (36 k 32) (36 l 33) (36 m 34) (36 n 35) (36 o 36) (36 p 37) (36 q 38) (36 r 39) (36 s 40) (36 t 41) (36 u 42) (36 v 43) (36 w 44) (36 x 45) (37 b 23) (37 c 24) (37 d 25) (37 e 26) (37 f 27) (37 g 28) (37 h 29) (37 i 30) (37 j 31) (37 k 32) (37 l 33) (37 m 34) (37 n 35) (37 o 36) (37 p 37) (37 q 38) (37 r 39) (37 s 40) (37 t 41) (37 u 42) (37 v 43) (37 w 44) (37 x 45) (38 b 23) (38 c 24) (38 d 25) (38 e 26) (38 f 27) (38 g 28) (38 h 29) (38 i 30) (38 j 31) (38 k 32) (38 l 33) (38 m 34) (38 n 35) (38 o 36) (38 p 37) (38 q 38) (38 r 39) (38 s 40) (38 t 41) (38 u 42) (38 v 43) (38 w 44) (38 x 45) (39 b 23) (39 c 24) (39 d 25) (39 e 26) (39 f 27) (39 g 28) (39 h 29) (39 i 30) (39 j 31) (39 k 32) (39 l 33) (39 m 34) (39 n 35) (39 o 36) (39 p 37) (39 q 38) (39 r 39) (39 s 40) (39 t 41) (39 u 42) (39 v 43) (39 w 44) (39 x 45) (40 b 23) (40 c 24) (40 d 25) (40 e 26) (40 f 27) (40 g 28) (40 h 29) (40 i 30) (40 j 31) (40 k 32) (40 l 33) (40 m 34) (40 n 35) (40 o 36) (40 p 37) (40 q 38) (40 r 39) (40 s 40) (40 t 41) (40 u 42) (40 v 43) (40 w 44) (40 x 45) (41 b 23) (41 c 24) (41 d 25) (41 e 26) (41 f 27) (41 g 28) (41 h 29) (41 i 30) (41 j 31) (41 k 32) (41 l 33) (41 m 34) (41 n 35) (41 o 36) (41 p 37) (41 q 38) (41 r 39) (41 s 40) (41 t 41) (41 u 42) (41 v 43) (41 w 44) (41 x 45) (42 b 23) (42 c 24) (42 d 25) (42 e 26) (42 f 27) (42 g 28) (42 h 29) (42 i 30) (42 j 31) (42 k 32) (42 l 33) (42 m 34) (42 n 35) (42 o 36) (42 p 37) (42 q 38) (42 r 39) (42 s 40) (42 t 41) (42 u 42) (42 v 43) (42 w 44) (42 x 45) (43 b 23) (43 c 24) (43 d 25) (43 e 26) (43 f 27) (43 g 28) (43 h 29) (43 i 30) (43 j 31) (43 k 32) (43 l 33) (43 m 34) (43 n 35) (43 o 36) (43 p 37) (43 q 38) (43 r 39) (43 s 40) (43 t 41) (43 u 42) (43 v 43) (43 w 44) (43 x 45) (44 b 23) (44 c 24) (44 d 25) (44 e 26) (44 f 27) (44 g 28) (44 h 29) (44 i 30) (44 j 31) (44 k 32) (44 l 33) (44 m 34) (44 n 35) (44 o 36) (44 p 37) (44 q 38) (44 r 39) (44 s 40) (44 t 41) (44 u 42) (44 v 43) (44 w 44) (44 x 45)) #((address  . o) (blockquote  . n) (del  . u) (div  . l) (dl  . j) (fieldset  . s) (form  . r) (h1  . b) (h2  . c) (h3  . d) (h4  . e) (h5  . f) (h6  . g) (hr  . p) (ins  . t) (noscript  . w) (ol  . i) (p  . k) (pre  . m) (script  . v) (table  . q) (terminator$$  . x) (ul  . h)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "noscript"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "noscript")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "noscript"))))

(define (style-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("type" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("title" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("media" "CDATA" "#IMPLIED") ("xml:space" ("preserve") "preserve" "#FIXED")))) (req-n 1)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "style"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "style")) (if xml-validate-contents? (validate-as-pcdata! contents "style"))))

(define (img-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("src" "CDATA" "#REQUIRED") ("alt" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("longdesc" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("usemap" "IDREF" "#IMPLIED") ("ismap" ("ismap") "#IMPLIED")))) (req-n 2)) (xml-check-for-empty-contents! contents "img") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "img"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "img"))))

(define (area-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("alt" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("href" "CDATA" "#IMPLIED") ("shape" ("rect" "circle" "poly" "default") "rect") ("coords" "CDATA" "#IMPLIED") ("nohref" ("nohref") "#IMPLIED") ("tabindex" "CDATA" "#IMPLIED") ("accesskey" "CDATA" "#IMPLIED")))) (req-n 1)) (xml-check-for-empty-contents! contents "area") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "area"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "area"))))

(define (map-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (47) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (0 k 10) (0 l 11) (0 m 12) (0 n 13) (0 o 14) (0 p 15) (0 q 16) (0 r 17) (0 s 18) (0 t 19) (0 u 20) (0 v 21) (0 w 22) (0 x 23) (1 b 24) (1 c 25) (1 d 26) (1 e 27) (1 f 28) (1 g 29) (1 h 30) (1 i 31) (1 j 32) (1 k 33) (1 l 34) (1 m 35) (1 n 36) (1 o 37) (1 p 38) (1 q 39) (1 r 40) (1 s 41) (1 t 42) (1 u 43) (1 v 44) (1 w 45) (1 x 46) (1 y 47) (2 b 24) (2 c 25) (2 d 26) (2 e 27) (2 f 28) (2 g 29) (2 h 30) (2 i 31) (2 j 32) (2 k 33) (2 l 34) (2 m 35) (2 n 36) (2 o 37) (2 p 38) (2 q 39) (2 r 40) (2 s 41) (2 t 42) (2 u 43) (2 v 44) (2 w 45) (2 x 46) (2 y 47) (3 b 24) (3 c 25) (3 d 26) (3 e 27) (3 f 28) (3 g 29) (3 h 30) (3 i 31) (3 j 32) (3 k 33) (3 l 34) (3 m 35) (3 n 36) (3 o 37) (3 p 38) (3 q 39) (3 r 40) (3 s 41) (3 t 42) (3 u 43) (3 v 44) (3 w 45) (3 x 46) (3 y 47) (4 b 24) (4 c 25) (4 d 26) (4 e 27) (4 f 28) (4 g 29) (4 h 30) (4 i 31) (4 j 32) (4 k 33) (4 l 34) (4 m 35) (4 n 36) (4 o 37) (4 p 38) (4 q 39) (4 r 40) (4 s 41) (4 t 42) (4 u 43) (4 v 44) (4 w 45) (4 x 46) (4 y 47) (5 b 24) (5 c 25) (5 d 26) (5 e 27) (5 f 28) (5 g 29) (5 h 30) (5 i 31) (5 j 32) (5 k 33) (5 l 34) (5 m 35) (5 n 36) (5 o 37) (5 p 38) (5 q 39) (5 r 40) (5 s 41) (5 t 42) (5 u 43) (5 v 44) (5 w 45) (5 x 46) (5 y 47) (6 b 24) (6 c 25) (6 d 26) (6 e 27) (6 f 28) (6 g 29) (6 h 30) (6 i 31) (6 j 32) (6 k 33) (6 l 34) (6 m 35) (6 n 36) (6 o 37) (6 p 38) (6 q 39) (6 r 40) (6 s 41) (6 t 42) (6 u 43) (6 v 44) (6 w 45) (6 x 46) (6 y 47) (7 b 24) (7 c 25) (7 d 26) (7 e 27) (7 f 28) (7 g 29) (7 h 30) (7 i 31) (7 j 32) (7 k 33) (7 l 34) (7 m 35) (7 n 36) (7 o 37) (7 p 38) (7 q 39) (7 r 40) (7 s 41) (7 t 42) (7 u 43) (7 v 44) (7 w 45) (7 x 46) (7 y 47) (8 b 24) (8 c 25) (8 d 26) (8 e 27) (8 f 28) (8 g 29) (8 h 30) (8 i 31) (8 j 32) (8 k 33) (8 l 34) (8 m 35) (8 n 36) (8 o 37) (8 p 38) (8 q 39) (8 r 40) (8 s 41) (8 t 42) (8 u 43) (8 v 44) (8 w 45) (8 x 46) (8 y 47) (9 b 24) (9 c 25) (9 d 26) (9 e 27) (9 f 28) (9 g 29) (9 h 30) (9 i 31) (9 j 32) (9 k 33) (9 l 34) (9 m 35) (9 n 36) (9 o 37) (9 p 38) (9 q 39) (9 r 40) (9 s 41) (9 t 42) (9 u 43) (9 v 44) (9 w 45) (9 x 46) (9 y 47) (10 b 24) (10 c 25) (10 d 26) (10 e 27) (10 f 28) (10 g 29) (10 h 30) (10 i 31) (10 j 32) (10 k 33) (10 l 34) (10 m 35) (10 n 36) (10 o 37) (10 p 38) (10 q 39) (10 r 40) (10 s 41) (10 t 42) (10 u 43) (10 v 44) (10 w 45) (10 x 46) (10 y 47) (11 b 24) (11 c 25) (11 d 26) (11 e 27) (11 f 28) (11 g 29) (11 h 30) (11 i 31) (11 j 32) (11 k 33) (11 l 34) (11 m 35) (11 n 36) (11 o 37) (11 p 38) (11 q 39) (11 r 40) (11 s 41) (11 t 42) (11 u 43) (11 v 44) (11 w 45) (11 x 46) (11 y 47) (12 b 24) (12 c 25) (12 d 26) (12 e 27) (12 f 28) (12 g 29) (12 h 30) (12 i 31) (12 j 32) (12 k 33) (12 l 34) (12 m 35) (12 n 36) (12 o 37) (12 p 38) (12 q 39) (12 r 40) (12 s 41) (12 t 42) (12 u 43) (12 v 44) (12 w 45) (12 x 46) (12 y 47) (13 b 24) (13 c 25) (13 d 26) (13 e 27) (13 f 28) (13 g 29) (13 h 30) (13 i 31) (13 j 32) (13 k 33) (13 l 34) (13 m 35) (13 n 36) (13 o 37) (13 p 38) (13 q 39) (13 r 40) (13 s 41) (13 t 42) (13 u 43) (13 v 44) (13 w 45) (13 x 46) (13 y 47) (14 b 24) (14 c 25) (14 d 26) (14 e 27) (14 f 28) (14 g 29) (14 h 30) (14 i 31) (14 j 32) (14 k 33) (14 l 34) (14 m 35) (14 n 36) (14 o 37) (14 p 38) (14 q 39) (14 r 40) (14 s 41) (14 t 42) (14 u 43) (14 v 44) (14 w 45) (14 x 46) (14 y 47) (15 b 24) (15 c 25) (15 d 26) (15 e 27) (15 f 28) (15 g 29) (15 h 30) (15 i 31) (15 j 32) (15 k 33) (15 l 34) (15 m 35) (15 n 36) (15 o 37) (15 p 38) (15 q 39) (15 r 40) (15 s 41) (15 t 42) (15 u 43) (15 v 44) (15 w 45) (15 x 46) (15 y 47) (16 b 24) (16 c 25) (16 d 26) (16 e 27) (16 f 28) (16 g 29) (16 h 30) (16 i 31) (16 j 32) (16 k 33) (16 l 34) (16 m 35) (16 n 36) (16 o 37) (16 p 38) (16 q 39) (16 r 40) (16 s 41) (16 t 42) (16 u 43) (16 v 44) (16 w 45) (16 x 46) (16 y 47) (17 b 24) (17 c 25) (17 d 26) (17 e 27) (17 f 28) (17 g 29) (17 h 30) (17 i 31) (17 j 32) (17 k 33) (17 l 34) (17 m 35) (17 n 36) (17 o 37) (17 p 38) (17 q 39) (17 r 40) (17 s 41) (17 t 42) (17 u 43) (17 v 44) (17 w 45) (17 x 46) (17 y 47) (18 b 24) (18 c 25) (18 d 26) (18 e 27) (18 f 28) (18 g 29) (18 h 30) (18 i 31) (18 j 32) (18 k 33) (18 l 34) (18 m 35) (18 n 36) (18 o 37) (18 p 38) (18 q 39) (18 r 40) (18 s 41) (18 t 42) (18 u 43) (18 v 44) (18 w 45) (18 x 46) (18 y 47) (19 b 24) (19 c 25) (19 d 26) (19 e 27) (19 f 28) (19 g 29) (19 h 30) (19 i 31) (19 j 32) (19 k 33) (19 l 34) (19 m 35) (19 n 36) (19 o 37) (19 p 38) (19 q 39) (19 r 40) (19 s 41) (19 t 42) (19 u 43) (19 v 44) (19 w 45) (19 x 46) (19 y 47) (20 b 24) (20 c 25) (20 d 26) (20 e 27) (20 f 28) (20 g 29) (20 h 30) (20 i 31) (20 j 32) (20 k 33) (20 l 34) (20 m 35) (20 n 36) (20 o 37) (20 p 38) (20 q 39) (20 r 40) (20 s 41) (20 t 42) (20 u 43) (20 v 44) (20 w 45) (20 x 46) (20 y 47) (21 b 24) (21 c 25) (21 d 26) (21 e 27) (21 f 28) (21 g 29) (21 h 30) (21 i 31) (21 j 32) (21 k 33) (21 l 34) (21 m 35) (21 n 36) (21 o 37) (21 p 38) (21 q 39) (21 r 40) (21 s 41) (21 t 42) (21 u 43) (21 v 44) (21 w 45) (21 x 46) (21 y 47) (22 b 24) (22 c 25) (22 d 26) (22 e 27) (22 f 28) (22 g 29) (22 h 30) (22 i 31) (22 j 32) (22 k 33) (22 l 34) (22 m 35) (22 n 36) (22 o 37) (22 p 38) (22 q 39) (22 r 40) (22 s 41) (22 t 42) (22 u 43) (22 v 44) (22 w 45) (22 x 46) (22 y 47) (23 b 24) (23 c 25) (23 d 26) (23 e 27) (23 f 28) (23 g 29) (23 h 30) (23 i 31) (23 j 32) (23 k 33) (23 l 34) (23 m 35) (23 n 36) (23 o 37) (23 p 38) (23 q 39) (23 r 40) (23 s 41) (23 t 42) (23 u 43) (23 v 44) (23 w 45) (23 x 46) (23 y 47) (24 b 24) (24 c 25) (24 d 26) (24 e 27) (24 f 28) (24 g 29) (24 h 30) (24 i 31) (24 j 32) (24 k 33) (24 l 34) (24 m 35) (24 n 36) (24 o 37) (24 p 38) (24 q 39) (24 r 40) (24 s 41) (24 t 42) (24 u 43) (24 v 44) (24 w 45) (24 x 46) (24 y 47) (25 b 24) (25 c 25) (25 d 26) (25 e 27) (25 f 28) (25 g 29) (25 h 30) (25 i 31) (25 j 32) (25 k 33) (25 l 34) (25 m 35) (25 n 36) (25 o 37) (25 p 38) (25 q 39) (25 r 40) (25 s 41) (25 t 42) (25 u 43) (25 v 44) (25 w 45) (25 x 46) (25 y 47) (26 b 24) (26 c 25) (26 d 26) (26 e 27) (26 f 28) (26 g 29) (26 h 30) (26 i 31) (26 j 32) (26 k 33) (26 l 34) (26 m 35) (26 n 36) (26 o 37) (26 p 38) (26 q 39) (26 r 40) (26 s 41) (26 t 42) (26 u 43) (26 v 44) (26 w 45) (26 x 46) (26 y 47) (27 b 24) (27 c 25) (27 d 26) (27 e 27) (27 f 28) (27 g 29) (27 h 30) (27 i 31) (27 j 32) (27 k 33) (27 l 34) (27 m 35) (27 n 36) (27 o 37) (27 p 38) (27 q 39) (27 r 40) (27 s 41) (27 t 42) (27 u 43) (27 v 44) (27 w 45) (27 x 46) (27 y 47) (28 b 24) (28 c 25) (28 d 26) (28 e 27) (28 f 28) (28 g 29) (28 h 30) (28 i 31) (28 j 32) (28 k 33) (28 l 34) (28 m 35) (28 n 36) (28 o 37) (28 p 38) (28 q 39) (28 r 40) (28 s 41) (28 t 42) (28 u 43) (28 v 44) (28 w 45) (28 x 46) (28 y 47) (29 b 24) (29 c 25) (29 d 26) (29 e 27) (29 f 28) (29 g 29) (29 h 30) (29 i 31) (29 j 32) (29 k 33) (29 l 34) (29 m 35) (29 n 36) (29 o 37) (29 p 38) (29 q 39) (29 r 40) (29 s 41) (29 t 42) (29 u 43) (29 v 44) (29 w 45) (29 x 46) (29 y 47) (30 b 24) (30 c 25) (30 d 26) (30 e 27) (30 f 28) (30 g 29) (30 h 30) (30 i 31) (30 j 32) (30 k 33) (30 l 34) (30 m 35) (30 n 36) (30 o 37) (30 p 38) (30 q 39) (30 r 40) (30 s 41) (30 t 42) (30 u 43) (30 v 44) (30 w 45) (30 x 46) (30 y 47) (31 b 24) (31 c 25) (31 d 26) (31 e 27) (31 f 28) (31 g 29) (31 h 30) (31 i 31) (31 j 32) (31 k 33) (31 l 34) (31 m 35) (31 n 36) (31 o 37) (31 p 38) (31 q 39) (31 r 40) (31 s 41) (31 t 42) (31 u 43) (31 v 44) (31 w 45) (31 x 46) (31 y 47) (32 b 24) (32 c 25) (32 d 26) (32 e 27) (32 f 28) (32 g 29) (32 h 30) (32 i 31) (32 j 32) (32 k 33) (32 l 34) (32 m 35) (32 n 36) (32 o 37) (32 p 38) (32 q 39) (32 r 40) (32 s 41) (32 t 42) (32 u 43) (32 v 44) (32 w 45) (32 x 46) (32 y 47) (33 b 24) (33 c 25) (33 d 26) (33 e 27) (33 f 28) (33 g 29) (33 h 30) (33 i 31) (33 j 32) (33 k 33) (33 l 34) (33 m 35) (33 n 36) (33 o 37) (33 p 38) (33 q 39) (33 r 40) (33 s 41) (33 t 42) (33 u 43) (33 v 44) (33 w 45) (33 x 46) (33 y 47) (34 b 24) (34 c 25) (34 d 26) (34 e 27) (34 f 28) (34 g 29) (34 h 30) (34 i 31) (34 j 32) (34 k 33) (34 l 34) (34 m 35) (34 n 36) (34 o 37) (34 p 38) (34 q 39) (34 r 40) (34 s 41) (34 t 42) (34 u 43) (34 v 44) (34 w 45) (34 x 46) (34 y 47) (35 b 24) (35 c 25) (35 d 26) (35 e 27) (35 f 28) (35 g 29) (35 h 30) (35 i 31) (35 j 32) (35 k 33) (35 l 34) (35 m 35) (35 n 36) (35 o 37) (35 p 38) (35 q 39) (35 r 40) (35 s 41) (35 t 42) (35 u 43) (35 v 44) (35 w 45) (35 x 46) (35 y 47) (36 b 24) (36 c 25) (36 d 26) (36 e 27) (36 f 28) (36 g 29) (36 h 30) (36 i 31) (36 j 32) (36 k 33) (36 l 34) (36 m 35) (36 n 36) (36 o 37) (36 p 38) (36 q 39) (36 r 40) (36 s 41) (36 t 42) (36 u 43) (36 v 44) (36 w 45) (36 x 46) (36 y 47) (37 b 24) (37 c 25) (37 d 26) (37 e 27) (37 f 28) (37 g 29) (37 h 30) (37 i 31) (37 j 32) (37 k 33) (37 l 34) (37 m 35) (37 n 36) (37 o 37) (37 p 38) (37 q 39) (37 r 40) (37 s 41) (37 t 42) (37 u 43) (37 v 44) (37 w 45) (37 x 46) (37 y 47) (38 b 24) (38 c 25) (38 d 26) (38 e 27) (38 f 28) (38 g 29) (38 h 30) (38 i 31) (38 j 32) (38 k 33) (38 l 34) (38 m 35) (38 n 36) (38 o 37) (38 p 38) (38 q 39) (38 r 40) (38 s 41) (38 t 42) (38 u 43) (38 v 44) (38 w 45) (38 x 46) (38 y 47) (39 b 24) (39 c 25) (39 d 26) (39 e 27) (39 f 28) (39 g 29) (39 h 30) (39 i 31) (39 j 32) (39 k 33) (39 l 34) (39 m 35) (39 n 36) (39 o 37) (39 p 38) (39 q 39) (39 r 40) (39 s 41) (39 t 42) (39 u 43) (39 v 44) (39 w 45) (39 x 46) (39 y 47) (40 b 24) (40 c 25) (40 d 26) (40 e 27) (40 f 28) (40 g 29) (40 h 30) (40 i 31) (40 j 32) (40 k 33) (40 l 34) (40 m 35) (40 n 36) (40 o 37) (40 p 38) (40 q 39) (40 r 40) (40 s 41) (40 t 42) (40 u 43) (40 v 44) (40 w 45) (40 x 46) (40 y 47) (41 b 24) (41 c 25) (41 d 26) (41 e 27) (41 f 28) (41 g 29) (41 h 30) (41 i 31) (41 j 32) (41 k 33) (41 l 34) (41 m 35) (41 n 36) (41 o 37) (41 p 38) (41 q 39) (41 r 40) (41 s 41) (41 t 42) (41 u 43) (41 v 44) (41 w 45) (41 x 46) (41 y 47) (42 b 24) (42 c 25) (42 d 26) (42 e 27) (42 f 28) (42 g 29) (42 h 30) (42 i 31) (42 j 32) (42 k 33) (42 l 34) (42 m 35) (42 n 36) (42 o 37) (42 p 38) (42 q 39) (42 r 40) (42 s 41) (42 t 42) (42 u 43) (42 v 44) (42 w 45) (42 x 46) (42 y 47) (43 b 24) (43 c 25) (43 d 26) (43 e 27) (43 f 28) (43 g 29) (43 h 30) (43 i 31) (43 j 32) (43 k 33) (43 l 34) (43 m 35) (43 n 36) (43 o 37) (43 p 38) (43 q 39) (43 r 40) (43 s 41) (43 t 42) (43 u 43) (43 v 44) (43 w 45) (43 x 46) (43 y 47) (44 b 24) (44 c 25) (44 d 26) (44 e 27) (44 f 28) (44 g 29) (44 h 30) (44 i 31) (44 j 32) (44 k 33) (44 l 34) (44 m 35) (44 n 36) (44 o 37) (44 p 38) (44 q 39) (44 r 40) (44 s 41) (44 t 42) (44 u 43) (44 v 44) (44 w 45) (44 x 46) (44 y 47) (45 b 24) (45 c 25) (45 d 26) (45 e 27) (45 f 28) (45 g 29) (45 h 30) (45 i 31) (45 j 32) (45 k 33) (45 l 34) (45 m 35) (45 n 36) (45 o 37) (45 p 38) (45 q 39) (45 r 40) (45 s 41) (45 t 42) (45 u 43) (45 v 44) (45 w 45) (45 x 46) (45 y 47) (46 b 24) (46 c 25) (46 d 26) (46 e 27) (46 f 28) (46 g 29) (46 h 30) (46 i 31) (46 j 32) (46 k 33) (46 l 34) (46 m 35) (46 n 36) (46 o 37) (46 p 38) (46 q 39) (46 r 40) (46 s 41) (46 t 42) (46 u 43) (46 v 44) (46 w 45) (46 x 46) (46 y 47)) #((address  . o) (area  . x) (blockquote  . n) (del  . u) (div  . l) (dl  . j) (fieldset  . s) (form  . r) (h1  . b) (h2  . c) (h3  . d) (h4  . e) (h5  . f) (h6  . g) (hr  . p) (ins  . t) (noscript  . w) (ol  . i) (p  . k) (pre  . m) (script  . v) (table  . q) (terminator$$  . y) (ul  . h)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "map"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "map")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "map"))))

(define (param-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("name" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("value" "CDATA" "#IMPLIED") ("valuetype" ("data" "ref" "object") "data") ("type" "CDATA" "#IMPLIED")))) (req-n 1)) (xml-check-for-empty-contents! contents "param") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "param"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "param"))))

(define (object-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("usemap" "IDREF" "#IMPLIED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("declare" ("declare") "#IMPLIED") ("classid" "CDATA" "#IMPLIED") ("codebase" "CDATA" "#IMPLIED") ("data" "CDATA" "#IMPLIED") ("type" "CDATA" "#IMPLIED") ("codetype" "CDATA" "#IMPLIED") ("archive" "CDATA" "#IMPLIED") ("standby" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("name" "CDATA" "#IMPLIED") ("tabindex" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "object"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "object")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript param)) "object"))))

(define (table-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("summary" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("border" "CDATA" "#IMPLIED") ("frame" ("void" "above" "below" "hsides" "lhs" "rhs" "vsides" "box" "border") "#IMPLIED") ("rules" ("none" "groups" "rows" "cols" "all") "#IMPLIED") ("cellspacing" "CDATA" "#IMPLIED") ("cellpadding" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (2 c 2) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (4 f 5) (4 g 6) (5 g 6) (6 g 10) (6 i 9) (7 h 8) (7 i 9) (8 h 8) (8 i 9) (10 g 10) (10 i 9)) #((caption  . b) (col  . c) (colgroup  . d) (tbody  . g) (terminator$$  . i) (tfoot  . f) (thead  . e) (tr  . h)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "table"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "table")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "table"))))

(define (caption-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "caption"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "caption")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "caption"))))

(define (thead-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("align" ("left" "center" "right" "justify" "char") "#IMPLIED") ("char" "CDATA" "#IMPLIED") ("charoff" "CDATA" "#IMPLIED") ("valign" ("top" "middle" "bottom" "baseline") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((terminator$$  . c) (tr  . b)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "thead"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "thead")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "thead"))))

(define (tfoot-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("align" ("left" "center" "right" "justify" "char") "#IMPLIED") ("char" "CDATA" "#IMPLIED") ("charoff" "CDATA" "#IMPLIED") ("valign" ("top" "middle" "bottom" "baseline") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((terminator$$  . c) (tr  . b)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "tfoot"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "tfoot")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "tfoot"))))

(define (tbody-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("align" ("left" "center" "right" "justify" "char") "#IMPLIED") ("char" "CDATA" "#IMPLIED") ("charoff" "CDATA" "#IMPLIED") ("valign" ("top" "middle" "bottom" "baseline") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((terminator$$  . c) (tr  . b)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "tbody"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "tbody")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "tbody"))))

(define (colgroup-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("span" "CDATA" "1") ("width" "CDATA" "#IMPLIED") ("align" ("left" "center" "right" "justify" "char") "#IMPLIED") ("char" "CDATA" "#IMPLIED") ("charoff" "CDATA" "#IMPLIED") ("valign" ("top" "middle" "bottom" "baseline") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (2) #((0 b 1) (0 c 2) (1 b 1) (1 c 2)) #((col  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "colgroup"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "colgroup")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "colgroup"))))

(define (col-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("span" "CDATA" "1") ("width" "CDATA" "#IMPLIED") ("align" ("left" "center" "right" "justify" "char") "#IMPLIED") ("char" "CDATA" "#IMPLIED") ("charoff" "CDATA" "#IMPLIED") ("valign" ("top" "middle" "bottom" "baseline") "#IMPLIED")))) (req-n 0)) (xml-check-for-empty-contents! contents "col") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "col"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "col"))))

(define (tr-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("align" ("left" "center" "right" "justify" "char") "#IMPLIED") ("char" "CDATA" "#IMPLIED") ("charoff" "CDATA" "#IMPLIED") ("valign" ("top" "middle" "bottom" "baseline") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (5) #((0 b 1) (0 c 2) (1 b 3) (1 c 4) (1 d 5) (2 b 3) (2 c 4) (2 d 5) (3 b 3) (3 c 4) (3 d 5) (4 b 3) (4 c 4) (4 d 5)) #((td  . c) (terminator$$  . d) (th  . b)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "tr"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "tr")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "tr"))))

(define (th-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("abbr" "CDATA" "#IMPLIED") ("axis" "CDATA" "#IMPLIED") ("headers" "IDREFS" "#IMPLIED") ("scope" ("row" "col" "rowgroup" "colgroup") "#IMPLIED") ("rowspan" "CDATA" "1") ("colspan" "CDATA" "1") ("align" ("left" "center" "right" "justify" "char") "#IMPLIED") ("char" "CDATA" "#IMPLIED") ("charoff" "CDATA" "#IMPLIED") ("valign" ("top" "middle" "bottom" "baseline") "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "th"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "th")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "th"))))

(define (td-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("abbr" "CDATA" "#IMPLIED") ("axis" "CDATA" "#IMPLIED") ("headers" "IDREFS" "#IMPLIED") ("scope" ("row" "col" "rowgroup" "colgroup") "#IMPLIED") ("rowspan" "CDATA" "1") ("colspan" "CDATA" "1") ("align" ("left" "center" "right" "justify" "char") "#IMPLIED") ("char" "CDATA" "#IMPLIED") ("charoff" "CDATA" "#IMPLIED") ("valign" ("top" "middle" "bottom" "baseline") "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "td"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "td")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "td"))))

(define (form-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("action" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("method" ("get" "post") "get") ("enctype" "CDATA" "application/x-www-form-urlencoded") ("accept-charset" "CDATA" "#IMPLIED") ("accept" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (43) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (0 k 10) (0 l 11) (0 m 12) (0 n 13) (0 o 14) (0 p 15) (0 q 16) (0 r 17) (0 s 18) (0 t 19) (0 u 20) (0 v 21) (1 b 22) (1 c 23) (1 d 24) (1 e 25) (1 f 26) (1 g 27) (1 h 28) (1 i 29) (1 j 30) (1 k 31) (1 l 32) (1 m 33) (1 n 34) (1 o 35) (1 p 36) (1 q 37) (1 r 38) (1 s 39) (1 t 40) (1 u 41) (1 v 42) (1 w 43) (2 b 22) (2 c 23) (2 d 24) (2 e 25) (2 f 26) (2 g 27) (2 h 28) (2 i 29) (2 j 30) (2 k 31) (2 l 32) (2 m 33) (2 n 34) (2 o 35) (2 p 36) (2 q 37) (2 r 38) (2 s 39) (2 t 40) (2 u 41) (2 v 42) (2 w 43) (3 b 22) (3 c 23) (3 d 24) (3 e 25) (3 f 26) (3 g 27) (3 h 28) (3 i 29) (3 j 30) (3 k 31) (3 l 32) (3 m 33) (3 n 34) (3 o 35) (3 p 36) (3 q 37) (3 r 38) (3 s 39) (3 t 40) (3 u 41) (3 v 42) (3 w 43) (4 b 22) (4 c 23) (4 d 24) (4 e 25) (4 f 26) (4 g 27) (4 h 28) (4 i 29) (4 j 30) (4 k 31) (4 l 32) (4 m 33) (4 n 34) (4 o 35) (4 p 36) (4 q 37) (4 r 38) (4 s 39) (4 t 40) (4 u 41) (4 v 42) (4 w 43) (5 b 22) (5 c 23) (5 d 24) (5 e 25) (5 f 26) (5 g 27) (5 h 28) (5 i 29) (5 j 30) (5 k 31) (5 l 32) (5 m 33) (5 n 34) (5 o 35) (5 p 36) (5 q 37) (5 r 38) (5 s 39) (5 t 40) (5 u 41) (5 v 42) (5 w 43) (6 b 22) (6 c 23) (6 d 24) (6 e 25) (6 f 26) (6 g 27) (6 h 28) (6 i 29) (6 j 30) (6 k 31) (6 l 32) (6 m 33) (6 n 34) (6 o 35) (6 p 36) (6 q 37) (6 r 38) (6 s 39) (6 t 40) (6 u 41) (6 v 42) (6 w 43) (7 b 22) (7 c 23) (7 d 24) (7 e 25) (7 f 26) (7 g 27) (7 h 28) (7 i 29) (7 j 30) (7 k 31) (7 l 32) (7 m 33) (7 n 34) (7 o 35) (7 p 36) (7 q 37) (7 r 38) (7 s 39) (7 t 40) (7 u 41) (7 v 42) (7 w 43) (8 b 22) (8 c 23) (8 d 24) (8 e 25) (8 f 26) (8 g 27) (8 h 28) (8 i 29) (8 j 30) (8 k 31) (8 l 32) (8 m 33) (8 n 34) (8 o 35) (8 p 36) (8 q 37) (8 r 38) (8 s 39) (8 t 40) (8 u 41) (8 v 42) (8 w 43) (9 b 22) (9 c 23) (9 d 24) (9 e 25) (9 f 26) (9 g 27) (9 h 28) (9 i 29) (9 j 30) (9 k 31) (9 l 32) (9 m 33) (9 n 34) (9 o 35) (9 p 36) (9 q 37) (9 r 38) (9 s 39) (9 t 40) (9 u 41) (9 v 42) (9 w 43) (10 b 22) (10 c 23) (10 d 24) (10 e 25) (10 f 26) (10 g 27) (10 h 28) (10 i 29) (10 j 30) (10 k 31) (10 l 32) (10 m 33) (10 n 34) (10 o 35) (10 p 36) (10 q 37) (10 r 38) (10 s 39) (10 t 40) (10 u 41) (10 v 42) (10 w 43) (11 b 22) (11 c 23) (11 d 24) (11 e 25) (11 f 26) (11 g 27) (11 h 28) (11 i 29) (11 j 30) (11 k 31) (11 l 32) (11 m 33) (11 n 34) (11 o 35) (11 p 36) (11 q 37) (11 r 38) (11 s 39) (11 t 40) (11 u 41) (11 v 42) (11 w 43) (12 b 22) (12 c 23) (12 d 24) (12 e 25) (12 f 26) (12 g 27) (12 h 28) (12 i 29) (12 j 30) (12 k 31) (12 l 32) (12 m 33) (12 n 34) (12 o 35) (12 p 36) (12 q 37) (12 r 38) (12 s 39) (12 t 40) (12 u 41) (12 v 42) (12 w 43) (13 b 22) (13 c 23) (13 d 24) (13 e 25) (13 f 26) (13 g 27) (13 h 28) (13 i 29) (13 j 30) (13 k 31) (13 l 32) (13 m 33) (13 n 34) (13 o 35) (13 p 36) (13 q 37) (13 r 38) (13 s 39) (13 t 40) (13 u 41) (13 v 42) (13 w 43) (14 b 22) (14 c 23) (14 d 24) (14 e 25) (14 f 26) (14 g 27) (14 h 28) (14 i 29) (14 j 30) (14 k 31) (14 l 32) (14 m 33) (14 n 34) (14 o 35) (14 p 36) (14 q 37) (14 r 38) (14 s 39) (14 t 40) (14 u 41) (14 v 42) (14 w 43) (15 b 22) (15 c 23) (15 d 24) (15 e 25) (15 f 26) (15 g 27) (15 h 28) (15 i 29) (15 j 30) (15 k 31) (15 l 32) (15 m 33) (15 n 34) (15 o 35) (15 p 36) (15 q 37) (15 r 38) (15 s 39) (15 t 40) (15 u 41) (15 v 42) (15 w 43) (16 b 22) (16 c 23) (16 d 24) (16 e 25) (16 f 26) (16 g 27) (16 h 28) (16 i 29) (16 j 30) (16 k 31) (16 l 32) (16 m 33) (16 n 34) (16 o 35) (16 p 36) (16 q 37) (16 r 38) (16 s 39) (16 t 40) (16 u 41) (16 v 42) (16 w 43) (17 b 22) (17 c 23) (17 d 24) (17 e 25) (17 f 26) (17 g 27) (17 h 28) (17 i 29) (17 j 30) (17 k 31) (17 l 32) (17 m 33) (17 n 34) (17 o 35) (17 p 36) (17 q 37) (17 r 38) (17 s 39) (17 t 40) (17 u 41) (17 v 42) (17 w 43) (18 b 22) (18 c 23) (18 d 24) (18 e 25) (18 f 26) (18 g 27) (18 h 28) (18 i 29) (18 j 30) (18 k 31) (18 l 32) (18 m 33) (18 n 34) (18 o 35) (18 p 36) (18 q 37) (18 r 38) (18 s 39) (18 t 40) (18 u 41) (18 v 42) (18 w 43) (19 b 22) (19 c 23) (19 d 24) (19 e 25) (19 f 26) (19 g 27) (19 h 28) (19 i 29) (19 j 30) (19 k 31) (19 l 32) (19 m 33) (19 n 34) (19 o 35) (19 p 36) (19 q 37) (19 r 38) (19 s 39) (19 t 40) (19 u 41) (19 v 42) (19 w 43) (20 b 22) (20 c 23) (20 d 24) (20 e 25) (20 f 26) (20 g 27) (20 h 28) (20 i 29) (20 j 30) (20 k 31) (20 l 32) (20 m 33) (20 n 34) (20 o 35) (20 p 36) (20 q 37) (20 r 38) (20 s 39) (20 t 40) (20 u 41) (20 v 42) (20 w 43) (21 b 22) (21 c 23) (21 d 24) (21 e 25) (21 f 26) (21 g 27) (21 h 28) (21 i 29) (21 j 30) (21 k 31) (21 l 32) (21 m 33) (21 n 34) (21 o 35) (21 p 36) (21 q 37) (21 r 38) (21 s 39) (21 t 40) (21 u 41) (21 v 42) (21 w 43) (22 b 22) (22 c 23) (22 d 24) (22 e 25) (22 f 26) (22 g 27) (22 h 28) (22 i 29) (22 j 30) (22 k 31) (22 l 32) (22 m 33) (22 n 34) (22 o 35) (22 p 36) (22 q 37) (22 r 38) (22 s 39) (22 t 40) (22 u 41) (22 v 42) (22 w 43) (23 b 22) (23 c 23) (23 d 24) (23 e 25) (23 f 26) (23 g 27) (23 h 28) (23 i 29) (23 j 30) (23 k 31) (23 l 32) (23 m 33) (23 n 34) (23 o 35) (23 p 36) (23 q 37) (23 r 38) (23 s 39) (23 t 40) (23 u 41) (23 v 42) (23 w 43) (24 b 22) (24 c 23) (24 d 24) (24 e 25) (24 f 26) (24 g 27) (24 h 28) (24 i 29) (24 j 30) (24 k 31) (24 l 32) (24 m 33) (24 n 34) (24 o 35) (24 p 36) (24 q 37) (24 r 38) (24 s 39) (24 t 40) (24 u 41) (24 v 42) (24 w 43) (25 b 22) (25 c 23) (25 d 24) (25 e 25) (25 f 26) (25 g 27) (25 h 28) (25 i 29) (25 j 30) (25 k 31) (25 l 32) (25 m 33) (25 n 34) (25 o 35) (25 p 36) (25 q 37) (25 r 38) (25 s 39) (25 t 40) (25 u 41) (25 v 42) (25 w 43) (26 b 22) (26 c 23) (26 d 24) (26 e 25) (26 f 26) (26 g 27) (26 h 28) (26 i 29) (26 j 30) (26 k 31) (26 l 32) (26 m 33) (26 n 34) (26 o 35) (26 p 36) (26 q 37) (26 r 38) (26 s 39) (26 t 40) (26 u 41) (26 v 42) (26 w 43) (27 b 22) (27 c 23) (27 d 24) (27 e 25) (27 f 26) (27 g 27) (27 h 28) (27 i 29) (27 j 30) (27 k 31) (27 l 32) (27 m 33) (27 n 34) (27 o 35) (27 p 36) (27 q 37) (27 r 38) (27 s 39) (27 t 40) (27 u 41) (27 v 42) (27 w 43) (28 b 22) (28 c 23) (28 d 24) (28 e 25) (28 f 26) (28 g 27) (28 h 28) (28 i 29) (28 j 30) (28 k 31) (28 l 32) (28 m 33) (28 n 34) (28 o 35) (28 p 36) (28 q 37) (28 r 38) (28 s 39) (28 t 40) (28 u 41) (28 v 42) (28 w 43) (29 b 22) (29 c 23) (29 d 24) (29 e 25) (29 f 26) (29 g 27) (29 h 28) (29 i 29) (29 j 30) (29 k 31) (29 l 32) (29 m 33) (29 n 34) (29 o 35) (29 p 36) (29 q 37) (29 r 38) (29 s 39) (29 t 40) (29 u 41) (29 v 42) (29 w 43) (30 b 22) (30 c 23) (30 d 24) (30 e 25) (30 f 26) (30 g 27) (30 h 28) (30 i 29) (30 j 30) (30 k 31) (30 l 32) (30 m 33) (30 n 34) (30 o 35) (30 p 36) (30 q 37) (30 r 38) (30 s 39) (30 t 40) (30 u 41) (30 v 42) (30 w 43) (31 b 22) (31 c 23) (31 d 24) (31 e 25) (31 f 26) (31 g 27) (31 h 28) (31 i 29) (31 j 30) (31 k 31) (31 l 32) (31 m 33) (31 n 34) (31 o 35) (31 p 36) (31 q 37) (31 r 38) (31 s 39) (31 t 40) (31 u 41) (31 v 42) (31 w 43) (32 b 22) (32 c 23) (32 d 24) (32 e 25) (32 f 26) (32 g 27) (32 h 28) (32 i 29) (32 j 30) (32 k 31) (32 l 32) (32 m 33) (32 n 34) (32 o 35) (32 p 36) (32 q 37) (32 r 38) (32 s 39) (32 t 40) (32 u 41) (32 v 42) (32 w 43) (33 b 22) (33 c 23) (33 d 24) (33 e 25) (33 f 26) (33 g 27) (33 h 28) (33 i 29) (33 j 30) (33 k 31) (33 l 32) (33 m 33) (33 n 34) (33 o 35) (33 p 36) (33 q 37) (33 r 38) (33 s 39) (33 t 40) (33 u 41) (33 v 42) (33 w 43) (34 b 22) (34 c 23) (34 d 24) (34 e 25) (34 f 26) (34 g 27) (34 h 28) (34 i 29) (34 j 30) (34 k 31) (34 l 32) (34 m 33) (34 n 34) (34 o 35) (34 p 36) (34 q 37) (34 r 38) (34 s 39) (34 t 40) (34 u 41) (34 v 42) (34 w 43) (35 b 22) (35 c 23) (35 d 24) (35 e 25) (35 f 26) (35 g 27) (35 h 28) (35 i 29) (35 j 30) (35 k 31) (35 l 32) (35 m 33) (35 n 34) (35 o 35) (35 p 36) (35 q 37) (35 r 38) (35 s 39) (35 t 40) (35 u 41) (35 v 42) (35 w 43) (36 b 22) (36 c 23) (36 d 24) (36 e 25) (36 f 26) (36 g 27) (36 h 28) (36 i 29) (36 j 30) (36 k 31) (36 l 32) (36 m 33) (36 n 34) (36 o 35) (36 p 36) (36 q 37) (36 r 38) (36 s 39) (36 t 40) (36 u 41) (36 v 42) (36 w 43) (37 b 22) (37 c 23) (37 d 24) (37 e 25) (37 f 26) (37 g 27) (37 h 28) (37 i 29) (37 j 30) (37 k 31) (37 l 32) (37 m 33) (37 n 34) (37 o 35) (37 p 36) (37 q 37) (37 r 38) (37 s 39) (37 t 40) (37 u 41) (37 v 42) (37 w 43) (38 b 22) (38 c 23) (38 d 24) (38 e 25) (38 f 26) (38 g 27) (38 h 28) (38 i 29) (38 j 30) (38 k 31) (38 l 32) (38 m 33) (38 n 34) (38 o 35) (38 p 36) (38 q 37) (38 r 38) (38 s 39) (38 t 40) (38 u 41) (38 v 42) (38 w 43) (39 b 22) (39 c 23) (39 d 24) (39 e 25) (39 f 26) (39 g 27) (39 h 28) (39 i 29) (39 j 30) (39 k 31) (39 l 32) (39 m 33) (39 n 34) (39 o 35) (39 p 36) (39 q 37) (39 r 38) (39 s 39) (39 t 40) (39 u 41) (39 v 42) (39 w 43) (40 b 22) (40 c 23) (40 d 24) (40 e 25) (40 f 26) (40 g 27) (40 h 28) (40 i 29) (40 j 30) (40 k 31) (40 l 32) (40 m 33) (40 n 34) (40 o 35) (40 p 36) (40 q 37) (40 r 38) (40 s 39) (40 t 40) (40 u 41) (40 v 42) (40 w 43) (41 b 22) (41 c 23) (41 d 24) (41 e 25) (41 f 26) (41 g 27) (41 h 28) (41 i 29) (41 j 30) (41 k 31) (41 l 32) (41 m 33) (41 n 34) (41 o 35) (41 p 36) (41 q 37) (41 r 38) (41 s 39) (41 t 40) (41 u 41) (41 v 42) (41 w 43) (42 b 22) (42 c 23) (42 d 24) (42 e 25) (42 f 26) (42 g 27) (42 h 28) (42 i 29) (42 j 30) (42 k 31) (42 l 32) (42 m 33) (42 n 34) (42 o 35) (42 p 36) (42 q 37) (42 r 38) (42 s 39) (42 t 40) (42 u 41) (42 v 42) (42 w 43)) #((address  . o) (blockquote  . n) (del  . s) (div  . l) (dl  . j) (fieldset  . v) (h1  . b) (h2  . c) (h3  . d) (h4  . e) (h5  . f) (h6  . g) (hr  . p) (ins  . r) (noscript  . u) (ol  . i) (p  . k) (pre  . m) (script  . t) (table  . q) (terminator$$  . w) (ul  . h)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "form"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "form")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "form"))))

(define (label-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("for" "IDREF" "#IMPLIED") ("accesskey" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "label"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "label")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (input select textarea button br span em strong dfn code samp kbd var cite abbr acronym q bdo tt i b big small sub sup a img map object ins del script noscript)) "label"))))

(define (input-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("usemap" "IDREF" "#IMPLIED") ("ismap" ("ismap") "#IMPLIED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("type" ("text" "password" "checkbox" "radio" "submit" "reset" "file" "hidden" "image" "button") "text") ("name" "CDATA" "#IMPLIED") ("value" "CDATA" "#IMPLIED") ("checked" ("checked") "#IMPLIED") ("disabled" ("disabled") "#IMPLIED") ("readonly" ("readonly") "#IMPLIED") ("size" "CDATA" "#IMPLIED") ("maxlength" "CDATA" "#IMPLIED") ("src" "CDATA" "#IMPLIED") ("alt" "CDATA" "#IMPLIED") ("tabindex" "CDATA" "#IMPLIED") ("accesskey" "CDATA" "#IMPLIED") ("accept" "CDATA" "#IMPLIED")))) (req-n 0)) (xml-check-for-empty-contents! contents "input") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "input"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "input"))))

(define (select-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("name" "CDATA" "#IMPLIED") ("size" "CDATA" "#IMPLIED") ("multiple" ("multiple") "#IMPLIED") ("disabled" ("disabled") "#IMPLIED") ("tabindex" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (5) #((0 b 1) (0 c 2) (1 b 3) (1 c 4) (1 d 5) (2 b 3) (2 c 4) (2 d 5) (3 b 3) (3 c 4) (3 d 5) (4 b 3) (4 c 4) (4 d 5)) #((optgroup  . b) (option  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "select"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "select")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "select"))))

(define (optgroup-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("label" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("disabled" ("disabled") "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((option  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "optgroup"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "optgroup")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "optgroup"))))

(define (option-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("selected" ("selected") "#IMPLIED") ("disabled" ("disabled") "#IMPLIED") ("label" "CDATA" "#IMPLIED") ("value" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "option"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "option")) (if xml-validate-contents? (validate-as-pcdata! contents "option"))))

(define (textarea-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("rows" "CDATA" "#REQUIRED") ("cols" "CDATA" "#REQUIRED") ("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("name" "CDATA" "#IMPLIED") ("disabled" ("disabled") "#IMPLIED") ("readonly" ("readonly") "#IMPLIED") ("tabindex" "CDATA" "#IMPLIED") ("accesskey" "CDATA" "#IMPLIED")))) (req-n 2)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "textarea"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "textarea")) (if xml-validate-contents? (validate-as-pcdata! contents "textarea"))))

(define (fieldset-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "fieldset"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "fieldset")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (legend h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "fieldset"))))

(define (legend-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("accesskey" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "legend"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "legend")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript)) "legend"))))

(define (button-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("name" "CDATA" "#IMPLIED") ("value" "CDATA" "#IMPLIED") ("type" ("button" "submit" "reset") "submit") ("disabled" ("disabled") "#IMPLIED") ("tabindex" "CDATA" "#IMPLIED") ("accesskey" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "button"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "button")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table ins del script noscript br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo img map object)) "button"))))

(define (title-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "title"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "title")) (if xml-validate-contents? (validate-as-pcdata! contents "title"))))

(define (head-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("profile" "CDATA" "")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (19) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (4 b 1) (4 c 2) (4 d 3) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (5 b 1) (5 c 2) (5 d 3) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (6 b 20) (6 c 21) (6 d 22) (6 e 23) (6 f 24) (6 h 25) (6 i 19) (7 b 8) (7 c 9) (7 d 10) (7 e 11) (7 f 12) (7 g 13) (8 b 8) (8 c 9) (8 d 10) (8 e 11) (8 f 12) (8 g 13) (9 b 8) (9 c 9) (9 d 10) (9 e 11) (9 f 12) (9 g 13) (10 b 8) (10 c 9) (10 d 10) (10 e 11) (10 f 12) (10 g 13) (11 b 8) (11 c 9) (11 d 10) (11 e 11) (11 f 12) (11 g 13) (12 b 8) (12 c 9) (12 d 10) (12 e 11) (12 f 12) (12 g 13) (13 b 14) (13 c 15) (13 d 16) (13 e 17) (13 f 18) (13 i 19) (14 b 14) (14 c 15) (14 d 16) (14 e 17) (14 f 18) (14 i 19) (15 b 14) (15 c 15) (15 d 16) (15 e 17) (15 f 18) (15 i 19) (16 b 14) (16 c 15) (16 d 16) (16 e 17) (16 f 18) (16 i 19) (17 b 14) (17 c 15) (17 d 16) (17 e 17) (17 f 18) (17 i 19) (18 b 14) (18 c 15) (18 d 16) (18 e 17) (18 f 18) (18 i 19) (20 b 20) (20 c 21) (20 d 22) (20 e 23) (20 f 24) (20 h 25) (20 i 19) (21 b 20) (21 c 21) (21 d 22) (21 e 23) (21 f 24) (21 h 25) (21 i 19) (22 b 20) (22 c 21) (22 d 22) (22 e 23) (22 f 24) (22 h 25) (22 i 19) (23 b 20) (23 c 21) (23 d 22) (23 e 23) (23 f 24) (23 h 25) (23 i 19) (24 b 20) (24 c 21) (24 d 22) (24 e 23) (24 f 24) (24 h 25) (24 i 19) (25 b 26) (25 c 27) (25 d 28) (25 e 29) (25 f 30) (25 i 19) (26 b 26) (26 c 27) (26 d 28) (26 e 29) (26 f 30) (26 i 19) (27 b 26) (27 c 27) (27 d 28) (27 e 29) (27 f 30) (27 i 19) (28 b 26) (28 c 27) (28 d 28) (28 e 29) (28 f 30) (28 i 19) (29 b 26) (29 c 27) (29 d 28) (29 e 29) (29 f 30) (29 i 19) (30 b 26) (30 c 27) (30 d 28) (30 e 29) (30 f 30) (30 i 19)) #((base  . h) (link  . e) (meta  . d) (object  . f) (script  . b) (style  . c) (terminator$$  . i) (title  . g)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "head"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "head")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "head"))))

(define (body-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("id" "ID" "#IMPLIED") ("class" "NMTOKENS" "#IMPLIED") ("title" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (45) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (0 k 10) (0 l 11) (0 m 12) (0 n 13) (0 o 14) (0 p 15) (0 q 16) (0 r 17) (0 s 18) (0 t 19) (0 u 20) (0 v 21) (0 w 22) (1 b 23) (1 c 24) (1 d 25) (1 e 26) (1 f 27) (1 g 28) (1 h 29) (1 i 30) (1 j 31) (1 k 32) (1 l 33) (1 m 34) (1 n 35) (1 o 36) (1 p 37) (1 q 38) (1 r 39) (1 s 40) (1 t 41) (1 u 42) (1 v 43) (1 w 44) (1 x 45) (2 b 23) (2 c 24) (2 d 25) (2 e 26) (2 f 27) (2 g 28) (2 h 29) (2 i 30) (2 j 31) (2 k 32) (2 l 33) (2 m 34) (2 n 35) (2 o 36) (2 p 37) (2 q 38) (2 r 39) (2 s 40) (2 t 41) (2 u 42) (2 v 43) (2 w 44) (2 x 45) (3 b 23) (3 c 24) (3 d 25) (3 e 26) (3 f 27) (3 g 28) (3 h 29) (3 i 30) (3 j 31) (3 k 32) (3 l 33) (3 m 34) (3 n 35) (3 o 36) (3 p 37) (3 q 38) (3 r 39) (3 s 40) (3 t 41) (3 u 42) (3 v 43) (3 w 44) (3 x 45) (4 b 23) (4 c 24) (4 d 25) (4 e 26) (4 f 27) (4 g 28) (4 h 29) (4 i 30) (4 j 31) (4 k 32) (4 l 33) (4 m 34) (4 n 35) (4 o 36) (4 p 37) (4 q 38) (4 r 39) (4 s 40) (4 t 41) (4 u 42) (4 v 43) (4 w 44) (4 x 45) (5 b 23) (5 c 24) (5 d 25) (5 e 26) (5 f 27) (5 g 28) (5 h 29) (5 i 30) (5 j 31) (5 k 32) (5 l 33) (5 m 34) (5 n 35) (5 o 36) (5 p 37) (5 q 38) (5 r 39) (5 s 40) (5 t 41) (5 u 42) (5 v 43) (5 w 44) (5 x 45) (6 b 23) (6 c 24) (6 d 25) (6 e 26) (6 f 27) (6 g 28) (6 h 29) (6 i 30) (6 j 31) (6 k 32) (6 l 33) (6 m 34) (6 n 35) (6 o 36) (6 p 37) (6 q 38) (6 r 39) (6 s 40) (6 t 41) (6 u 42) (6 v 43) (6 w 44) (6 x 45) (7 b 23) (7 c 24) (7 d 25) (7 e 26) (7 f 27) (7 g 28) (7 h 29) (7 i 30) (7 j 31) (7 k 32) (7 l 33) (7 m 34) (7 n 35) (7 o 36) (7 p 37) (7 q 38) (7 r 39) (7 s 40) (7 t 41) (7 u 42) (7 v 43) (7 w 44) (7 x 45) (8 b 23) (8 c 24) (8 d 25) (8 e 26) (8 f 27) (8 g 28) (8 h 29) (8 i 30) (8 j 31) (8 k 32) (8 l 33) (8 m 34) (8 n 35) (8 o 36) (8 p 37) (8 q 38) (8 r 39) (8 s 40) (8 t 41) (8 u 42) (8 v 43) (8 w 44) (8 x 45) (9 b 23) (9 c 24) (9 d 25) (9 e 26) (9 f 27) (9 g 28) (9 h 29) (9 i 30) (9 j 31) (9 k 32) (9 l 33) (9 m 34) (9 n 35) (9 o 36) (9 p 37) (9 q 38) (9 r 39) (9 s 40) (9 t 41) (9 u 42) (9 v 43) (9 w 44) (9 x 45) (10 b 23) (10 c 24) (10 d 25) (10 e 26) (10 f 27) (10 g 28) (10 h 29) (10 i 30) (10 j 31) (10 k 32) (10 l 33) (10 m 34) (10 n 35) (10 o 36) (10 p 37) (10 q 38) (10 r 39) (10 s 40) (10 t 41) (10 u 42) (10 v 43) (10 w 44) (10 x 45) (11 b 23) (11 c 24) (11 d 25) (11 e 26) (11 f 27) (11 g 28) (11 h 29) (11 i 30) (11 j 31) (11 k 32) (11 l 33) (11 m 34) (11 n 35) (11 o 36) (11 p 37) (11 q 38) (11 r 39) (11 s 40) (11 t 41) (11 u 42) (11 v 43) (11 w 44) (11 x 45) (12 b 23) (12 c 24) (12 d 25) (12 e 26) (12 f 27) (12 g 28) (12 h 29) (12 i 30) (12 j 31) (12 k 32) (12 l 33) (12 m 34) (12 n 35) (12 o 36) (12 p 37) (12 q 38) (12 r 39) (12 s 40) (12 t 41) (12 u 42) (12 v 43) (12 w 44) (12 x 45) (13 b 23) (13 c 24) (13 d 25) (13 e 26) (13 f 27) (13 g 28) (13 h 29) (13 i 30) (13 j 31) (13 k 32) (13 l 33) (13 m 34) (13 n 35) (13 o 36) (13 p 37) (13 q 38) (13 r 39) (13 s 40) (13 t 41) (13 u 42) (13 v 43) (13 w 44) (13 x 45) (14 b 23) (14 c 24) (14 d 25) (14 e 26) (14 f 27) (14 g 28) (14 h 29) (14 i 30) (14 j 31) (14 k 32) (14 l 33) (14 m 34) (14 n 35) (14 o 36) (14 p 37) (14 q 38) (14 r 39) (14 s 40) (14 t 41) (14 u 42) (14 v 43) (14 w 44) (14 x 45) (15 b 23) (15 c 24) (15 d 25) (15 e 26) (15 f 27) (15 g 28) (15 h 29) (15 i 30) (15 j 31) (15 k 32) (15 l 33) (15 m 34) (15 n 35) (15 o 36) (15 p 37) (15 q 38) (15 r 39) (15 s 40) (15 t 41) (15 u 42) (15 v 43) (15 w 44) (15 x 45) (16 b 23) (16 c 24) (16 d 25) (16 e 26) (16 f 27) (16 g 28) (16 h 29) (16 i 30) (16 j 31) (16 k 32) (16 l 33) (16 m 34) (16 n 35) (16 o 36) (16 p 37) (16 q 38) (16 r 39) (16 s 40) (16 t 41) (16 u 42) (16 v 43) (16 w 44) (16 x 45) (17 b 23) (17 c 24) (17 d 25) (17 e 26) (17 f 27) (17 g 28) (17 h 29) (17 i 30) (17 j 31) (17 k 32) (17 l 33) (17 m 34) (17 n 35) (17 o 36) (17 p 37) (17 q 38) (17 r 39) (17 s 40) (17 t 41) (17 u 42) (17 v 43) (17 w 44) (17 x 45) (18 b 23) (18 c 24) (18 d 25) (18 e 26) (18 f 27) (18 g 28) (18 h 29) (18 i 30) (18 j 31) (18 k 32) (18 l 33) (18 m 34) (18 n 35) (18 o 36) (18 p 37) (18 q 38) (18 r 39) (18 s 40) (18 t 41) (18 u 42) (18 v 43) (18 w 44) (18 x 45) (19 b 23) (19 c 24) (19 d 25) (19 e 26) (19 f 27) (19 g 28) (19 h 29) (19 i 30) (19 j 31) (19 k 32) (19 l 33) (19 m 34) (19 n 35) (19 o 36) (19 p 37) (19 q 38) (19 r 39) (19 s 40) (19 t 41) (19 u 42) (19 v 43) (19 w 44) (19 x 45) (20 b 23) (20 c 24) (20 d 25) (20 e 26) (20 f 27) (20 g 28) (20 h 29) (20 i 30) (20 j 31) (20 k 32) (20 l 33) (20 m 34) (20 n 35) (20 o 36) (20 p 37) (20 q 38) (20 r 39) (20 s 40) (20 t 41) (20 u 42) (20 v 43) (20 w 44) (20 x 45) (21 b 23) (21 c 24) (21 d 25) (21 e 26) (21 f 27) (21 g 28) (21 h 29) (21 i 30) (21 j 31) (21 k 32) (21 l 33) (21 m 34) (21 n 35) (21 o 36) (21 p 37) (21 q 38) (21 r 39) (21 s 40) (21 t 41) (21 u 42) (21 v 43) (21 w 44) (21 x 45) (22 b 23) (22 c 24) (22 d 25) (22 e 26) (22 f 27) (22 g 28) (22 h 29) (22 i 30) (22 j 31) (22 k 32) (22 l 33) (22 m 34) (22 n 35) (22 o 36) (22 p 37) (22 q 38) (22 r 39) (22 s 40) (22 t 41) (22 u 42) (22 v 43) (22 w 44) (22 x 45) (23 b 23) (23 c 24) (23 d 25) (23 e 26) (23 f 27) (23 g 28) (23 h 29) (23 i 30) (23 j 31) (23 k 32) (23 l 33) (23 m 34) (23 n 35) (23 o 36) (23 p 37) (23 q 38) (23 r 39) (23 s 40) (23 t 41) (23 u 42) (23 v 43) (23 w 44) (23 x 45) (24 b 23) (24 c 24) (24 d 25) (24 e 26) (24 f 27) (24 g 28) (24 h 29) (24 i 30) (24 j 31) (24 k 32) (24 l 33) (24 m 34) (24 n 35) (24 o 36) (24 p 37) (24 q 38) (24 r 39) (24 s 40) (24 t 41) (24 u 42) (24 v 43) (24 w 44) (24 x 45) (25 b 23) (25 c 24) (25 d 25) (25 e 26) (25 f 27) (25 g 28) (25 h 29) (25 i 30) (25 j 31) (25 k 32) (25 l 33) (25 m 34) (25 n 35) (25 o 36) (25 p 37) (25 q 38) (25 r 39) (25 s 40) (25 t 41) (25 u 42) (25 v 43) (25 w 44) (25 x 45) (26 b 23) (26 c 24) (26 d 25) (26 e 26) (26 f 27) (26 g 28) (26 h 29) (26 i 30) (26 j 31) (26 k 32) (26 l 33) (26 m 34) (26 n 35) (26 o 36) (26 p 37) (26 q 38) (26 r 39) (26 s 40) (26 t 41) (26 u 42) (26 v 43) (26 w 44) (26 x 45) (27 b 23) (27 c 24) (27 d 25) (27 e 26) (27 f 27) (27 g 28) (27 h 29) (27 i 30) (27 j 31) (27 k 32) (27 l 33) (27 m 34) (27 n 35) (27 o 36) (27 p 37) (27 q 38) (27 r 39) (27 s 40) (27 t 41) (27 u 42) (27 v 43) (27 w 44) (27 x 45) (28 b 23) (28 c 24) (28 d 25) (28 e 26) (28 f 27) (28 g 28) (28 h 29) (28 i 30) (28 j 31) (28 k 32) (28 l 33) (28 m 34) (28 n 35) (28 o 36) (28 p 37) (28 q 38) (28 r 39) (28 s 40) (28 t 41) (28 u 42) (28 v 43) (28 w 44) (28 x 45) (29 b 23) (29 c 24) (29 d 25) (29 e 26) (29 f 27) (29 g 28) (29 h 29) (29 i 30) (29 j 31) (29 k 32) (29 l 33) (29 m 34) (29 n 35) (29 o 36) (29 p 37) (29 q 38) (29 r 39) (29 s 40) (29 t 41) (29 u 42) (29 v 43) (29 w 44) (29 x 45) (30 b 23) (30 c 24) (30 d 25) (30 e 26) (30 f 27) (30 g 28) (30 h 29) (30 i 30) (30 j 31) (30 k 32) (30 l 33) (30 m 34) (30 n 35) (30 o 36) (30 p 37) (30 q 38) (30 r 39) (30 s 40) (30 t 41) (30 u 42) (30 v 43) (30 w 44) (30 x 45) (31 b 23) (31 c 24) (31 d 25) (31 e 26) (31 f 27) (31 g 28) (31 h 29) (31 i 30) (31 j 31) (31 k 32) (31 l 33) (31 m 34) (31 n 35) (31 o 36) (31 p 37) (31 q 38) (31 r 39) (31 s 40) (31 t 41) (31 u 42) (31 v 43) (31 w 44) (31 x 45) (32 b 23) (32 c 24) (32 d 25) (32 e 26) (32 f 27) (32 g 28) (32 h 29) (32 i 30) (32 j 31) (32 k 32) (32 l 33) (32 m 34) (32 n 35) (32 o 36) (32 p 37) (32 q 38) (32 r 39) (32 s 40) (32 t 41) (32 u 42) (32 v 43) (32 w 44) (32 x 45) (33 b 23) (33 c 24) (33 d 25) (33 e 26) (33 f 27) (33 g 28) (33 h 29) (33 i 30) (33 j 31) (33 k 32) (33 l 33) (33 m 34) (33 n 35) (33 o 36) (33 p 37) (33 q 38) (33 r 39) (33 s 40) (33 t 41) (33 u 42) (33 v 43) (33 w 44) (33 x 45) (34 b 23) (34 c 24) (34 d 25) (34 e 26) (34 f 27) (34 g 28) (34 h 29) (34 i 30) (34 j 31) (34 k 32) (34 l 33) (34 m 34) (34 n 35) (34 o 36) (34 p 37) (34 q 38) (34 r 39) (34 s 40) (34 t 41) (34 u 42) (34 v 43) (34 w 44) (34 x 45) (35 b 23) (35 c 24) (35 d 25) (35 e 26) (35 f 27) (35 g 28) (35 h 29) (35 i 30) (35 j 31) (35 k 32) (35 l 33) (35 m 34) (35 n 35) (35 o 36) (35 p 37) (35 q 38) (35 r 39) (35 s 40) (35 t 41) (35 u 42) (35 v 43) (35 w 44) (35 x 45) (36 b 23) (36 c 24) (36 d 25) (36 e 26) (36 f 27) (36 g 28) (36 h 29) (36 i 30) (36 j 31) (36 k 32) (36 l 33) (36 m 34) (36 n 35) (36 o 36) (36 p 37) (36 q 38) (36 r 39) (36 s 40) (36 t 41) (36 u 42) (36 v 43) (36 w 44) (36 x 45) (37 b 23) (37 c 24) (37 d 25) (37 e 26) (37 f 27) (37 g 28) (37 h 29) (37 i 30) (37 j 31) (37 k 32) (37 l 33) (37 m 34) (37 n 35) (37 o 36) (37 p 37) (37 q 38) (37 r 39) (37 s 40) (37 t 41) (37 u 42) (37 v 43) (37 w 44) (37 x 45) (38 b 23) (38 c 24) (38 d 25) (38 e 26) (38 f 27) (38 g 28) (38 h 29) (38 i 30) (38 j 31) (38 k 32) (38 l 33) (38 m 34) (38 n 35) (38 o 36) (38 p 37) (38 q 38) (38 r 39) (38 s 40) (38 t 41) (38 u 42) (38 v 43) (38 w 44) (38 x 45) (39 b 23) (39 c 24) (39 d 25) (39 e 26) (39 f 27) (39 g 28) (39 h 29) (39 i 30) (39 j 31) (39 k 32) (39 l 33) (39 m 34) (39 n 35) (39 o 36) (39 p 37) (39 q 38) (39 r 39) (39 s 40) (39 t 41) (39 u 42) (39 v 43) (39 w 44) (39 x 45) (40 b 23) (40 c 24) (40 d 25) (40 e 26) (40 f 27) (40 g 28) (40 h 29) (40 i 30) (40 j 31) (40 k 32) (40 l 33) (40 m 34) (40 n 35) (40 o 36) (40 p 37) (40 q 38) (40 r 39) (40 s 40) (40 t 41) (40 u 42) (40 v 43) (40 w 44) (40 x 45) (41 b 23) (41 c 24) (41 d 25) (41 e 26) (41 f 27) (41 g 28) (41 h 29) (41 i 30) (41 j 31) (41 k 32) (41 l 33) (41 m 34) (41 n 35) (41 o 36) (41 p 37) (41 q 38) (41 r 39) (41 s 40) (41 t 41) (41 u 42) (41 v 43) (41 w 44) (41 x 45) (42 b 23) (42 c 24) (42 d 25) (42 e 26) (42 f 27) (42 g 28) (42 h 29) (42 i 30) (42 j 31) (42 k 32) (42 l 33) (42 m 34) (42 n 35) (42 o 36) (42 p 37) (42 q 38) (42 r 39) (42 s 40) (42 t 41) (42 u 42) (42 v 43) (42 w 44) (42 x 45) (43 b 23) (43 c 24) (43 d 25) (43 e 26) (43 f 27) (43 g 28) (43 h 29) (43 i 30) (43 j 31) (43 k 32) (43 l 33) (43 m 34) (43 n 35) (43 o 36) (43 p 37) (43 q 38) (43 r 39) (43 s 40) (43 t 41) (43 u 42) (43 v 43) (43 w 44) (43 x 45) (44 b 23) (44 c 24) (44 d 25) (44 e 26) (44 f 27) (44 g 28) (44 h 29) (44 i 30) (44 j 31) (44 k 32) (44 l 33) (44 m 34) (44 n 35) (44 o 36) (44 p 37) (44 q 38) (44 r 39) (44 s 40) (44 t 41) (44 u 42) (44 v 43) (44 w 44) (44 x 45)) #((address  . o) (blockquote  . n) (del  . u) (div  . l) (dl  . j) (fieldset  . s) (form  . r) (h1  . b) (h2  . c) (h3  . d) (h4  . e) (h5  . f) (h6  . g) (hr  . p) (ins  . t) (noscript  . w) (ol  . i) (p  . k) (pre  . m) (script  . v) (table  . q) (terminator$$  . x) (ul  . h)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "body"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "body")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "body"))))

(define (html-xhtml11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/1999/xhtml" "#FIXED") ("version" "CDATA" "-//W3C//DTD XHTML 1.1//EN" "#FIXED") ("dir" ("ltr" "rtl") "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 c 2) (2 d 3)) #((body  . c) (head  . b) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "html"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "html")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "html"))))

;;; Make and put XML mirror functions in the temporary language map:
(set! temp-mirror-function (generate-xml-mirror-function br-xhtml11-laml-validate! "br" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "br" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function br-xhtml11-laml-validate! "br" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #t #f))
(define br temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function span-xhtml11-laml-validate! "span" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "span" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function span-xhtml11-laml-validate! "span" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define span temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function abbr-xhtml11-laml-validate! "abbr" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "abbr" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function abbr-xhtml11-laml-validate! "abbr" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define abbr temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function acronym-xhtml11-laml-validate! "acronym" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "acronym" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function acronym-xhtml11-laml-validate! "acronym" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define acronym temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function cite-xhtml11-laml-validate! "cite" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "cite" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function cite-xhtml11-laml-validate! "cite" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define cite temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function code-xhtml11-laml-validate! "code" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "code" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function code-xhtml11-laml-validate! "code" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define code temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function dfn-xhtml11-laml-validate! "dfn" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "dfn" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function dfn-xhtml11-laml-validate! "dfn" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define dfn temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function em-xhtml11-laml-validate! "em" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "em" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function em-xhtml11-laml-validate! "em" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define em temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function kbd-xhtml11-laml-validate! "kbd" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "kbd" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function kbd-xhtml11-laml-validate! "kbd" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define kbd temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function q-xhtml11-laml-validate! "q" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "q" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function q-xhtml11-laml-validate! "q" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define q temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function samp-xhtml11-laml-validate! "samp" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "samp" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function samp-xhtml11-laml-validate! "samp" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define samp temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function strong-xhtml11-laml-validate! "strong" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "strong" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function strong-xhtml11-laml-validate! "strong" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define strong temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function var-xhtml11-laml-validate! "var" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "var" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function var-xhtml11-laml-validate! "var" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define var temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function div-xhtml11-laml-validate! "div" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "div" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function div-xhtml11-laml-validate! "div" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define div temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function p-xhtml11-laml-validate! "p" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "p" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function p-xhtml11-laml-validate! "p" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define p temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function address-xhtml11-laml-validate! "address" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "address" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function address-xhtml11-laml-validate! "address" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define address temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function blockquote-xhtml11-laml-validate! "blockquote" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "blockquote" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function blockquote-xhtml11-laml-validate! "blockquote" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define blockquote temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function pre-xhtml11-laml-validate! "pre" (quote (xmlns "http://www.w3.org/1999/xhtml" xml:space "preserve")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "pre" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function pre-xhtml11-laml-validate! "pre" (quote (xmlns "http://www.w3.org/1999/xhtml" xml:space "preserve")) (quote double) (quote xhtml11) #t #f))
(define pre temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function h1-xhtml11-laml-validate! "h1" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "h1" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function h1-xhtml11-laml-validate! "h1" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define h1 temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function h2-xhtml11-laml-validate! "h2" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "h2" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function h2-xhtml11-laml-validate! "h2" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define h2 temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function h3-xhtml11-laml-validate! "h3" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "h3" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function h3-xhtml11-laml-validate! "h3" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define h3 temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function h4-xhtml11-laml-validate! "h4" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "h4" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function h4-xhtml11-laml-validate! "h4" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define h4 temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function h5-xhtml11-laml-validate! "h5" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "h5" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function h5-xhtml11-laml-validate! "h5" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define h5 temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function h6-xhtml11-laml-validate! "h6" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "h6" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function h6-xhtml11-laml-validate! "h6" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define h6 temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function a-xhtml11-laml-validate! "a" (quote (shape "rect" xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "a" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function a-xhtml11-laml-validate! "a" (quote (shape "rect" xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define a temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function dl-xhtml11-laml-validate! "dl" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "dl" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function dl-xhtml11-laml-validate! "dl" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define dl temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function dt-xhtml11-laml-validate! "dt" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "dt" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function dt-xhtml11-laml-validate! "dt" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define dt temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function dd-xhtml11-laml-validate! "dd" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "dd" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function dd-xhtml11-laml-validate! "dd" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define dd temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function ol-xhtml11-laml-validate! "ol" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "ol" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function ol-xhtml11-laml-validate! "ol" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define ol temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function ul-xhtml11-laml-validate! "ul" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "ul" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function ul-xhtml11-laml-validate! "ul" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define ul temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function li-xhtml11-laml-validate! "li" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "li" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function li-xhtml11-laml-validate! "li" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define li temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function ins-xhtml11-laml-validate! "ins" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "ins" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function ins-xhtml11-laml-validate! "ins" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define ins temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function del-xhtml11-laml-validate! "del" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "del" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function del-xhtml11-laml-validate! "del" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define del temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function bdo-xhtml11-laml-validate! "bdo" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "bdo" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function bdo-xhtml11-laml-validate! "bdo" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define bdo temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function ruby-xhtml11-laml-validate! "ruby" (quote ()) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "ruby" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function ruby-xhtml11-laml-validate! "ruby" (quote ()) (quote double) (quote xhtml11) #t #f))
(define ruby temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function rbc-xhtml11-laml-validate! "rbc" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "rbc" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function rbc-xhtml11-laml-validate! "rbc" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define rbc temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function rtc-xhtml11-laml-validate! "rtc" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "rtc" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function rtc-xhtml11-laml-validate! "rtc" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define rtc temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function rb-xhtml11-laml-validate! "rb" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "rb" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function rb-xhtml11-laml-validate! "rb" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define rb temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function rt-xhtml11-laml-validate! "rt" (quote (xmlns "http://www.w3.org/1999/xhtml" rbspan "1")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "rt" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function rt-xhtml11-laml-validate! "rt" (quote (xmlns "http://www.w3.org/1999/xhtml" rbspan "1")) (quote double) (quote xhtml11) #t #f))
(define rt temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function rp-xhtml11-laml-validate! "rp" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "rp" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function rp-xhtml11-laml-validate! "rp" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define rp temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function b-xhtml11-laml-validate! "b" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "b" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function b-xhtml11-laml-validate! "b" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define b temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function big-xhtml11-laml-validate! "big" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "big" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function big-xhtml11-laml-validate! "big" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define big temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function i-xhtml11-laml-validate! "i" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "i" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function i-xhtml11-laml-validate! "i" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define i temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function small-xhtml11-laml-validate! "small" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "small" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function small-xhtml11-laml-validate! "small" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define small temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function sub-xhtml11-laml-validate! "sub" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "sub" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function sub-xhtml11-laml-validate! "sub" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define sub temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function sup-xhtml11-laml-validate! "sup" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "sup" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function sup-xhtml11-laml-validate! "sup" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define sup temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function tt-xhtml11-laml-validate! "tt" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "tt" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function tt-xhtml11-laml-validate! "tt" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define tt temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function hr-xhtml11-laml-validate! "hr" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "hr" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function hr-xhtml11-laml-validate! "hr" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #t #f))
(define hr temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function link-xhtml11-laml-validate! "link" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "link" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function link-xhtml11-laml-validate! "link" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #t #f))
(define link temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function meta-xhtml11-laml-validate! "meta" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "meta" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function meta-xhtml11-laml-validate! "meta" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #t #f))
(define meta temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function base-xhtml11-laml-validate! "base" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "base" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function base-xhtml11-laml-validate! "base" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #t #f))
(define base temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function script-xhtml11-laml-validate! "script" (quote (xmlns "http://www.w3.org/1999/xhtml" xml:space "preserve")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "script" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function script-xhtml11-laml-validate! "script" (quote (xmlns "http://www.w3.org/1999/xhtml" xml:space "preserve")) (quote double) (quote xhtml11) #t #f))
(define script temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function noscript-xhtml11-laml-validate! "noscript" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "noscript" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function noscript-xhtml11-laml-validate! "noscript" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define noscript temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function style-xhtml11-laml-validate! "style" (quote (xmlns "http://www.w3.org/1999/xhtml" xml:space "preserve")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "style" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function style-xhtml11-laml-validate! "style" (quote (xmlns "http://www.w3.org/1999/xhtml" xml:space "preserve")) (quote double) (quote xhtml11) #t #f))
(define style temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function img-xhtml11-laml-validate! "img" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "img" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function img-xhtml11-laml-validate! "img" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote single) (quote xhtml11) #t #f))
(define img temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function area-xhtml11-laml-validate! "area" (quote (xmlns "http://www.w3.org/1999/xhtml" shape "rect")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "area" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function area-xhtml11-laml-validate! "area" (quote (xmlns "http://www.w3.org/1999/xhtml" shape "rect")) (quote single) (quote xhtml11) #t #f))
(define area temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function map-xhtml11-laml-validate! "map" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "map" temp-mirror-function))
; No mirror of map defined due to name clash with reversed Scheme name.

(set! temp-mirror-function (generate-xml-mirror-function param-xhtml11-laml-validate! "param" (quote (xmlns "http://www.w3.org/1999/xhtml" valuetype "data")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "param" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function param-xhtml11-laml-validate! "param" (quote (xmlns "http://www.w3.org/1999/xhtml" valuetype "data")) (quote single) (quote xhtml11) #t #f))
(define param temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function object-xhtml11-laml-validate! "object" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "object" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function object-xhtml11-laml-validate! "object" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define object temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function table-xhtml11-laml-validate! "table" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "table" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function table-xhtml11-laml-validate! "table" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define table temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function caption-xhtml11-laml-validate! "caption" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "caption" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function caption-xhtml11-laml-validate! "caption" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define caption temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function thead-xhtml11-laml-validate! "thead" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "thead" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function thead-xhtml11-laml-validate! "thead" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define thead temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function tfoot-xhtml11-laml-validate! "tfoot" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "tfoot" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function tfoot-xhtml11-laml-validate! "tfoot" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define tfoot temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function tbody-xhtml11-laml-validate! "tbody" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "tbody" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function tbody-xhtml11-laml-validate! "tbody" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define tbody temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function colgroup-xhtml11-laml-validate! "colgroup" (quote (xmlns "http://www.w3.org/1999/xhtml" span "1")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "colgroup" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function colgroup-xhtml11-laml-validate! "colgroup" (quote (xmlns "http://www.w3.org/1999/xhtml" span "1")) (quote double) (quote xhtml11) #t #f))
(define colgroup temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function col-xhtml11-laml-validate! "col" (quote (xmlns "http://www.w3.org/1999/xhtml" span "1")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "col" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function col-xhtml11-laml-validate! "col" (quote (xmlns "http://www.w3.org/1999/xhtml" span "1")) (quote single) (quote xhtml11) #t #f))
(define col temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function tr-xhtml11-laml-validate! "tr" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "tr" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function tr-xhtml11-laml-validate! "tr" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define tr temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function th-xhtml11-laml-validate! "th" (quote (xmlns "http://www.w3.org/1999/xhtml" rowspan "1" colspan "1")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "th" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function th-xhtml11-laml-validate! "th" (quote (xmlns "http://www.w3.org/1999/xhtml" rowspan "1" colspan "1")) (quote double) (quote xhtml11) #t #f))
(define th temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function td-xhtml11-laml-validate! "td" (quote (xmlns "http://www.w3.org/1999/xhtml" rowspan "1" colspan "1")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "td" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function td-xhtml11-laml-validate! "td" (quote (xmlns "http://www.w3.org/1999/xhtml" rowspan "1" colspan "1")) (quote double) (quote xhtml11) #t #f))
(define td temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function form-xhtml11-laml-validate! "form" (quote (xmlns "http://www.w3.org/1999/xhtml" method "get" enctype "application/x-www-form-urlencoded")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "form" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function form-xhtml11-laml-validate! "form" (quote (xmlns "http://www.w3.org/1999/xhtml" method "get" enctype "application/x-www-form-urlencoded")) (quote double) (quote xhtml11) #t #f))
(define form temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function label-xhtml11-laml-validate! "label" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "label" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function label-xhtml11-laml-validate! "label" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define label temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function input-xhtml11-laml-validate! "input" (quote (xmlns "http://www.w3.org/1999/xhtml" type "text")) (quote single) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "input" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function input-xhtml11-laml-validate! "input" (quote (xmlns "http://www.w3.org/1999/xhtml" type "text")) (quote single) (quote xhtml11) #t #f))
(define input temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function select-xhtml11-laml-validate! "select" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "select" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function select-xhtml11-laml-validate! "select" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define select temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function optgroup-xhtml11-laml-validate! "optgroup" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "optgroup" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function optgroup-xhtml11-laml-validate! "optgroup" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define optgroup temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function option-xhtml11-laml-validate! "option" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "option" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function option-xhtml11-laml-validate! "option" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define option temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function textarea-xhtml11-laml-validate! "textarea" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "textarea" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function textarea-xhtml11-laml-validate! "textarea" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define textarea temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function fieldset-xhtml11-laml-validate! "fieldset" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "fieldset" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function fieldset-xhtml11-laml-validate! "fieldset" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define fieldset temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function legend-xhtml11-laml-validate! "legend" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "legend" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function legend-xhtml11-laml-validate! "legend" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define legend temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function button-xhtml11-laml-validate! "button" (quote (xmlns "http://www.w3.org/1999/xhtml" type "submit")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "button" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function button-xhtml11-laml-validate! "button" (quote (xmlns "http://www.w3.org/1999/xhtml" type "submit")) (quote double) (quote xhtml11) #t #f))
(define button temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function title-xhtml11-laml-validate! "title" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "title" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function title-xhtml11-laml-validate! "title" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define title temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function head-xhtml11-laml-validate! "head" (quote (xmlns "http://www.w3.org/1999/xhtml" profile "")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "head" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function head-xhtml11-laml-validate! "head" (quote (xmlns "http://www.w3.org/1999/xhtml" profile "")) (quote double) (quote xhtml11) #t #f))
(define head temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function body-xhtml11-laml-validate! "body" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "body" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function body-xhtml11-laml-validate! "body" (quote (xmlns "http://www.w3.org/1999/xhtml")) (quote double) (quote xhtml11) #t #f))
(define body temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function html-xhtml11-laml-validate! "html" (quote (xmlns "http://www.w3.org/1999/xhtml" version "-//W3C//DTD XHTML 1.1//EN")) (quote double) (quote xhtml11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "html" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function html-xhtml11-laml-validate! "html" (quote (xmlns "http://www.w3.org/1999/xhtml" version "-//W3C//DTD XHTML 1.1//EN")) (quote double) (quote xhtml11) #t #f))
(define html temp-mirror-function)

; Register the name of the language:
(register-xml-in-laml-language (quote xhtml11) temp-language-map)

; Define the language variable
(define xhtml11 (activator-via-language-map (quote xhtml11)))

; Register the XML navigator of the language:
(register-xml-in-laml-navigator (quote xhtml11) (quote (xml-navigator #((a #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (abbr #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (acronym #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (address #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (area #(area) #(accesskey alt class coords dir href id nohref shape style tabindex title xml:lang xmlns)) (b #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (base #(base) #(href xmlns)) (bdo #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (big #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (blockquote #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (body #(a abbr acronym address area b bdo big blockquote body br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (br #(br) #(class id style title xmlns)) (button #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (caption #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (cite #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (code #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (col #(col) #(align char charoff class dir id span style title valign width xml:lang xmlns)) (colgroup #(col colgroup) #(align char charoff class dir id span style title valign width xml:lang xmlns)) (dd #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (del #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (dfn #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (div #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (dl #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (dt #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (em #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (fieldset #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (form #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (h1 #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (h2 #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (h3 #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (h4 #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (h5 #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (h6 #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (head #(a abbr acronym address area b base bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 head hr i img input ins kbd label legend li link map meta noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong style sub sup table tbody td textarea tfoot th thead title tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan content coords datetime defer dir disabled enctype for frame headers height href hreflang http-equiv id label longdesc media method multiple name nohref profile rbspan readonly rel rev rows rowspan rules scheme scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (hr #(hr) #(class dir id style title xml:lang xmlns)) (html #(a abbr acronym address area b base bdo big blockquote body br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 head hr html i img input ins kbd label legend li link map meta noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong style sub sup table tbody td textarea tfoot th thead title tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan content coords datetime defer dir disabled enctype for frame headers height href hreflang http-equiv id label longdesc media method multiple name nohref profile rbspan readonly rel rev rows rowspan rules scheme scope selected shape size span src style summary tabindex title type usemap valign value valuetype version width xml:lang xml:space xmlns)) (i #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (img #(img) #(alt class dir height id longdesc src style title width xml:lang xmlns)) (input #(input) #(usemap)) (ins #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (kbd #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (label #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (legend #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (li #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (link #(link) #(charset class dir href hreflang id media rel rev style title type xml:lang xmlns)) (map #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (meta #(meta) #(content dir http-equiv name scheme xml:lang xmlns)) (noscript #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (object #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (ol #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (optgroup #(optgroup option) #(class dir disabled id label selected style title value xml:lang xmlns)) (option #(option) #(class dir disabled id label selected style title value xml:lang xmlns)) (p #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (param #(param) #(id name type value valuetype xmlns)) (pre #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (q #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (rb #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (rbc #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (rp #(rp) #(class dir id style title xml:lang xmlns)) (rt #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (rtc #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (ruby #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (samp #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (script #(script) #(charset defer src type xml:space xmlns)) (select #(optgroup option select) #(class dir disabled id label multiple name selected size style tabindex title value xml:lang xmlns)) (small #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (span #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (strong #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (style #(style) #(dir media title type xml:lang xml:space xmlns)) (sub #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (sup #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (table #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (tbody #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (td #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (textarea #(textarea) #(accesskey class cols dir disabled id name readonly rows style tabindex title xml:lang xmlns)) (tfoot #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (th #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (thead #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (title #(title) #(dir xml:lang xmlns)) (tr #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (tt #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (ul #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns)) (var #(a abbr acronym address area b bdo big blockquote br button caption cite code col colgroup dd del dfn div dl dt em fieldset form h1 h2 h3 h4 h5 h6 hr i img input ins kbd label legend li map noscript object ol optgroup option p param pre q rb rbc rp rt rtc ruby samp script select small span strong sub sup table tbody td textarea tfoot th thead tr tt ul var) #(abbr accept accept-charset accesskey action align alt axis border cellpadding cellspacing char charoff charset cite class cols colspan coords datetime defer dir disabled enctype for frame headers height href hreflang id label longdesc method multiple name nohref rbspan readonly rel rev rows rowspan rules scope selected shape size span src style summary tabindex title type usemap valign value valuetype width xml:lang xml:space xmlns))))))

; Register the validation procedures of the language
(register-xml-in-laml-validators (quote xhtml11) (vector (list "a" a-xhtml11-laml-validate!) (list "abbr" abbr-xhtml11-laml-validate!) (list "acronym" acronym-xhtml11-laml-validate!) (list "address" address-xhtml11-laml-validate!) (list "area" area-xhtml11-laml-validate!) (list "b" b-xhtml11-laml-validate!) (list "base" base-xhtml11-laml-validate!) (list "bdo" bdo-xhtml11-laml-validate!) (list "big" big-xhtml11-laml-validate!) (list "blockquote" blockquote-xhtml11-laml-validate!) (list "body" body-xhtml11-laml-validate!) (list "br" br-xhtml11-laml-validate!) (list "button" button-xhtml11-laml-validate!) (list "caption" caption-xhtml11-laml-validate!) (list "cite" cite-xhtml11-laml-validate!) (list "code" code-xhtml11-laml-validate!) (list "col" col-xhtml11-laml-validate!) (list "colgroup" colgroup-xhtml11-laml-validate!) (list "dd" dd-xhtml11-laml-validate!) (list "del" del-xhtml11-laml-validate!) (list "dfn" dfn-xhtml11-laml-validate!) (list "div" div-xhtml11-laml-validate!) (list "dl" dl-xhtml11-laml-validate!) (list "dt" dt-xhtml11-laml-validate!) (list "em" em-xhtml11-laml-validate!) (list "fieldset" fieldset-xhtml11-laml-validate!) (list "form" form-xhtml11-laml-validate!) (list "h1" h1-xhtml11-laml-validate!) (list "h2" h2-xhtml11-laml-validate!) (list "h3" h3-xhtml11-laml-validate!) (list "h4" h4-xhtml11-laml-validate!) (list "h5" h5-xhtml11-laml-validate!) (list "h6" h6-xhtml11-laml-validate!) (list "head" head-xhtml11-laml-validate!) (list "hr" hr-xhtml11-laml-validate!) (list "html" html-xhtml11-laml-validate!) (list "i" i-xhtml11-laml-validate!) (list "img" img-xhtml11-laml-validate!) (list "input" input-xhtml11-laml-validate!) (list "ins" ins-xhtml11-laml-validate!) (list "kbd" kbd-xhtml11-laml-validate!) (list "label" label-xhtml11-laml-validate!) (list "legend" legend-xhtml11-laml-validate!) (list "li" li-xhtml11-laml-validate!) (list "link" link-xhtml11-laml-validate!) (list "map" map-xhtml11-laml-validate!) (list "meta" meta-xhtml11-laml-validate!) (list "noscript" noscript-xhtml11-laml-validate!) (list "object" object-xhtml11-laml-validate!) (list "ol" ol-xhtml11-laml-validate!) (list "optgroup" optgroup-xhtml11-laml-validate!) (list "option" option-xhtml11-laml-validate!) (list "p" p-xhtml11-laml-validate!) (list "param" param-xhtml11-laml-validate!) (list "pre" pre-xhtml11-laml-validate!) (list "q" q-xhtml11-laml-validate!) (list "rb" rb-xhtml11-laml-validate!) (list "rbc" rbc-xhtml11-laml-validate!) (list "rp" rp-xhtml11-laml-validate!) (list "rt" rt-xhtml11-laml-validate!) (list "rtc" rtc-xhtml11-laml-validate!) (list "ruby" ruby-xhtml11-laml-validate!) (list "samp" samp-xhtml11-laml-validate!) (list "script" script-xhtml11-laml-validate!) (list "select" select-xhtml11-laml-validate!) (list "small" small-xhtml11-laml-validate!) (list "span" span-xhtml11-laml-validate!) (list "strong" strong-xhtml11-laml-validate!) (list "style" style-xhtml11-laml-validate!) (list "sub" sub-xhtml11-laml-validate!) (list "sup" sup-xhtml11-laml-validate!) (list "table" table-xhtml11-laml-validate!) (list "tbody" tbody-xhtml11-laml-validate!) (list "td" td-xhtml11-laml-validate!) (list "textarea" textarea-xhtml11-laml-validate!) (list "tfoot" tfoot-xhtml11-laml-validate!) (list "th" th-xhtml11-laml-validate!) (list "thead" thead-xhtml11-laml-validate!) (list "title" title-xhtml11-laml-validate!) (list "tr" tr-xhtml11-laml-validate!) (list "tt" tt-xhtml11-laml-validate!) (list "ul" ul-xhtml11-laml-validate!) (list "var" var-xhtml11-laml-validate!)))

; Register the content model map of the language.
; This makes the content model available for LAML at runtime.
(register-xml-in-laml-content-models (quote xhtml11) (quote #(("a" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo img map object input select textarea label button ruby ins del script noscript))) ("abbr" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("acronym" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("address" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("area" empty) ("b" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("base" empty) ("bdo" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("big" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("blockquote" (element-content (choice one-or-more (name one h1) (name one h2) (name one h3) (name one h4) (name one h5) (name one h6) (name one ul) (name one ol) (name one dl) (name one p) (name one div) (name one pre) (name one blockquote) (name one address) (name one hr) (name one table) (name one form) (name one fieldset) (name one ins) (name one del) (name one script) (name one noscript)))) ("body" (element-content (choice one-or-more (name one h1) (name one h2) (name one h3) (name one h4) (name one h5) (name one h6) (name one ul) (name one ol) (name one dl) (name one p) (name one div) (name one pre) (name one blockquote) (name one address) (name one hr) (name one table) (name one form) (name one fieldset) (name one ins) (name one del) (name one script) (name one noscript)))) ("br" empty) ("button" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table ins del script noscript br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo img map object))) ("caption" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("cite" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("code" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("col" empty) ("colgroup" (element-content (seq zero-or-more (name one col)))) ("dd" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("del" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("dfn" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("div" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("dl" (element-content (choice one-or-more (name one dt) (name one dd)))) ("dt" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("em" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("fieldset" (mixed-content (choice pcdata legend h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("form" (element-content (choice one-or-more (name one h1) (name one h2) (name one h3) (name one h4) (name one h5) (name one h6) (name one ul) (name one ol) (name one dl) (name one p) (name one div) (name one pre) (name one blockquote) (name one address) (name one hr) (name one table) (name one ins) (name one del) (name one script) (name one noscript) (name one fieldset)))) ("h1" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("h2" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("h3" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("h4" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("h5" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("h6" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("head" (element-content (seq one (choice zero-or-more (name one script) (name one style) (name one meta) (name one link) (name one object)) (choice one (seq one (name one title) (choice zero-or-more (name one script) (name one style) (name one meta) (name one link) (name one object)) (seq optional (name one base) (choice zero-or-more (name one script) (name one style) (name one meta) (name one link) (name one object)))) (seq one (name one base) (choice zero-or-more (name one script) (name one style) (name one meta) (name one link) (name one object)) (seq one (name one title) (choice zero-or-more (name one script) (name one style) (name one meta) (name one link) (name one object)))))))) ("hr" empty) ("html" (element-content (seq one (name one head) (name one body)))) ("i" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("img" empty) ("input" empty) ("ins" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("kbd" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("label" (mixed-content (choice pcdata input select textarea button br span em strong dfn code samp kbd var cite abbr acronym q bdo tt i b big small sub sup a img map object ins del script noscript))) ("legend" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("li" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("link" empty) ("map" (element-content (choice one-or-more (choice one (name one h1) (name one h2) (name one h3) (name one h4) (name one h5) (name one h6) (name one ul) (name one ol) (name one dl) (name one p) (name one div) (name one pre) (name one blockquote) (name one address) (name one hr) (name one table) (name one form) (name one fieldset) (name one ins) (name one del) (name one script) (name one noscript)) (name one area)))) ("meta" empty) ("noscript" (element-content (choice one-or-more (name one h1) (name one h2) (name one h3) (name one h4) (name one h5) (name one h6) (name one ul) (name one ol) (name one dl) (name one p) (name one div) (name one pre) (name one blockquote) (name one address) (name one hr) (name one table) (name one form) (name one fieldset) (name one ins) (name one del) (name one script) (name one noscript)))) ("object" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript param))) ("ol" (element-content (seq one-or-more (name one li)))) ("optgroup" (element-content (seq one-or-more (name one option)))) ("option" (mixed-content pcdata)) ("p" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("param" empty) ("pre" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b bdo a script map))) ("q" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("rb" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ins del script noscript))) ("rbc" (element-content (seq one-or-more (name one rb)))) ("rp" (mixed-content pcdata)) ("rt" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ins del script noscript))) ("rtc" (element-content (seq one-or-more (name one rt)))) ("ruby" (element-content (choice one (seq one (name one rb) (choice one (name one rt) (seq one (name one rp) (name one rt) (name one rp)))) (seq one (name one rbc) (name one rtc) (name optional rtc))))) ("samp" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("script" (mixed-content pcdata)) ("select" (element-content (choice one-or-more (name one optgroup) (name one option)))) ("small" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("span" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("strong" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("style" (mixed-content pcdata)) ("sub" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("sup" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("table" (element-content (seq one (name optional caption) (choice one (name zero-or-more col) (name zero-or-more colgroup)) (choice one (seq one (name optional thead) (name optional tfoot) (name one-or-more tbody)) (seq one (name one-or-more tr)))))) ("tbody" (element-content (seq one-or-more (name one tr)))) ("td" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("textarea" (mixed-content pcdata)) ("tfoot" (element-content (seq one-or-more (name one tr)))) ("th" (mixed-content (choice pcdata h1 h2 h3 h4 h5 h6 ul ol dl p div pre blockquote address hr table form fieldset br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("thead" (element-content (seq one-or-more (name one tr)))) ("title" (mixed-content pcdata)) ("tr" (element-content (choice one-or-more (name one th) (name one td)))) ("tt" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))) ("ul" (element-content (seq one-or-more (name one li)))) ("var" (mixed-content (choice pcdata br span em strong dfn code samp kbd var cite abbr acronym q tt i b big small sub sup bdo a img map object input select textarea label button ruby ins del script noscript))))))

; Register the action procedure map of the language.
(register-xml-in-laml-action-procedures (quote xhtml11) (vector))

; Stuff included via the the following file-inclusion path:  /user/normark/scheme/tools/xml-in-laml/xhtml11/runtime-stuff/xhtml-inclusions.scm

; The XHTML URL extractor function
; Returns a list of URLs, among which there may be boolean values (#f).
(define (xhtml-url-extractor ast) 
 (traverse-and-collect-all-from-ast
   ast

  (lambda (ast-node)
    (member (ast-element-name ast-node) (list "a" "img" "link" "area" "frame" "iframe")))

  (lambda (node-with-linking)
    (cond ((member (ast-element-name node-with-linking) (list "a" "link" "area"))
             (ast-attribute node-with-linking 'href #f))
          ((member (ast-element-name node-with-linking) (list "img" "input" "script" "frame" "iframe"))
             (ast-attribute node-with-linking 'src #f))
          (else #f)))))

; The XHTML base URL extract function.
; Extracts the href attribute from base element in the head, of #f.
; Finds base fast, because it is guided by XML navigation information.
; Returns #f if no base href is there.
(define (xhtml-base-url-extractor ast)
 (let ((base-ast (find-first-ast ast "base")))
   (if base-ast
       (let ((candidate-url (ast-attribute base-ast 'href #f)))
         (if candidate-url 
             candidate-url
             #f))
       #f)))  

; Setting the URL extractor functions of the XHTML language.
(set-xml-link-checking-functions 'xhtml11 xhtml-url-extractor xhtml-base-url-extractor)
