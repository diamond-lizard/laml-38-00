; This file is generated by an LAML script based on the LAML tool tools/xml-in-laml/xml-in-laml.scm. DO NOT EDIT!

; lib/xml-in-laml/xml-in-laml.scm is not loaded here. 
; You must load it yourself prior to the loading of this file.

(define svg11-xml-transliterate-character-data? #t)
(define svg11-xml-char-transformation-table html-char-transformation-table)
(define svg11-xml-non-transliteration-elements '())
(define svg11-xml-preformatted-text-elements '())
(define svg11-xml-pass-default-dtd-attributes? #f)
(define svg11-xml-accept-only-string-valued-attributes? #f)
(define svg11-xml-accept-extended-contents? #t)
(define svg11-xml-document-type-declaration "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">")
(define svg11-xml-represent-white-space? #t)
(define svg11-xml-duplicated-attribute-handling 'keep-first)


; Empty temporary language map
(set! temp-language-map (quote ()))



;;; The validation procedures

(define (svg-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xmlns" "CDATA" "http://www.w3.org/2000/svg" "#FIXED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("onunload" "CDATA" "#IMPLIED") ("onabort" "CDATA" "#IMPLIED") ("onerror" "CDATA" "#IMPLIED") ("onresize" "CDATA" "#IMPLIED") ("onscroll" "CDATA" "#IMPLIED") ("onzoom" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("viewBox" "CDATA" "#IMPLIED") ("preserveAspectRatio" "CDATA" "xMidYMid meet") ("zoomAndPan" ("disable" "magnify") "magnify") ("version" "CDATA" "1.1" "#FIXED") ("baseProfile" "CDATA" "#IMPLIED") ("contentScriptType" "CDATA" "text/ecmascript") ("contentStyleType" "CDATA" "text/css")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "svg"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "svg")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "svg"))))

(define (g-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "g"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "g")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "g"))))

(define (defs-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "defs"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "defs")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "defs"))))

(define (desc-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "desc"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "desc")) (if xml-validate-contents? (validate-as-pcdata! contents "desc"))))

(define (title-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "title"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "title")) (if xml-validate-contents? (validate-as-pcdata! contents "title"))))

(define (metadata-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "metadata"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "metadata")) (if xml-validate-contents? (validate-as-pcdata! contents "metadata"))))

(define (symbol-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("viewBox" "CDATA" "#IMPLIED") ("preserveAspectRatio" "CDATA" "xMidYMid meet")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "symbol"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "symbol")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "symbol"))))

(define (use-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("embed") "embed") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "use"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "use")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "use"))))

(define (switch-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (24) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (0 k 10) (0 l 11) (0 m 12) (0 n 13) (0 o 14) (0 p 15) (0 q 16) (0 r 17) (0 s 18) (0 t 19) (0 u 20) (0 v 21) (0 w 22) (0 x 23) (0 y 24) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (1 k 10) (1 l 11) (1 m 12) (1 n 13) (1 o 14) (1 p 15) (1 q 16) (1 r 17) (1 s 18) (1 t 19) (1 u 20) (1 v 21) (1 w 22) (1 x 23) (1 y 24) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (2 k 10) (2 l 11) (2 m 12) (2 n 13) (2 o 14) (2 p 15) (2 q 16) (2 r 17) (2 s 18) (2 t 19) (2 u 20) (2 v 21) (2 w 22) (2 x 23) (2 y 24) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (3 k 10) (3 l 11) (3 m 12) (3 n 13) (3 o 14) (3 p 15) (3 q 16) (3 r 17) (3 s 18) (3 t 19) (3 u 20) (3 v 21) (3 w 22) (3 x 23) (3 y 24) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (4 k 10) (4 l 11) (4 m 12) (4 n 13) (4 o 14) (4 p 15) (4 q 16) (4 r 17) (4 s 18) (4 t 19) (4 u 20) (4 v 21) (4 w 22) (4 x 23) (4 y 24) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (5 k 10) (5 l 11) (5 m 12) (5 n 13) (5 o 14) (5 p 15) (5 q 16) (5 r 17) (5 s 18) (5 t 19) (5 u 20) (5 v 21) (5 w 22) (5 x 23) (5 y 24) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (6 k 10) (6 l 11) (6 m 12) (6 n 13) (6 o 14) (6 p 15) (6 q 16) (6 r 17) (6 s 18) (6 t 19) (6 u 20) (6 v 21) (6 w 22) (6 x 23) (6 y 24) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (7 k 10) (7 l 11) (7 m 12) (7 n 13) (7 o 14) (7 p 15) (7 q 16) (7 r 17) (7 s 18) (7 t 19) (7 u 20) (7 v 21) (7 w 22) (7 x 23) (7 y 24) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9) (8 k 10) (8 l 11) (8 m 12) (8 n 13) (8 o 14) (8 p 15) (8 q 16) (8 r 17) (8 s 18) (8 t 19) (8 u 20) (8 v 21) (8 w 22) (8 x 23) (8 y 24) (9 e 4) (9 f 5) (9 g 6) (9 h 7) (9 i 8) (9 j 9) (9 k 10) (9 l 11) (9 m 12) (9 n 13) (9 o 14) (9 p 15) (9 q 16) (9 r 17) (9 s 18) (9 t 19) (9 u 20) (9 v 21) (9 w 22) (9 x 23) (9 y 24) (10 e 4) (10 f 5) (10 g 6) (10 h 7) (10 i 8) (10 j 9) (10 k 10) (10 l 11) (10 m 12) (10 n 13) (10 o 14) (10 p 15) (10 q 16) (10 r 17) (10 s 18) (10 t 19) (10 u 20) (10 v 21) (10 w 22) (10 x 23) (10 y 24) (11 e 4) (11 f 5) (11 g 6) (11 h 7) (11 i 8) (11 j 9) (11 k 10) (11 l 11) (11 m 12) (11 n 13) (11 o 14) (11 p 15) (11 q 16) (11 r 17) (11 s 18) (11 t 19) (11 u 20) (11 v 21) (11 w 22) (11 x 23) (11 y 24) (12 e 4) (12 f 5) (12 g 6) (12 h 7) (12 i 8) (12 j 9) (12 k 10) (12 l 11) (12 m 12) (12 n 13) (12 o 14) (12 p 15) (12 q 16) (12 r 17) (12 s 18) (12 t 19) (12 u 20) (12 v 21) (12 w 22) (12 x 23) (12 y 24) (13 e 4) (13 f 5) (13 g 6) (13 h 7) (13 i 8) (13 j 9) (13 k 10) (13 l 11) (13 m 12) (13 n 13) (13 o 14) (13 p 15) (13 q 16) (13 r 17) (13 s 18) (13 t 19) (13 u 20) (13 v 21) (13 w 22) (13 x 23) (13 y 24) (14 e 4) (14 f 5) (14 g 6) (14 h 7) (14 i 8) (14 j 9) (14 k 10) (14 l 11) (14 m 12) (14 n 13) (14 o 14) (14 p 15) (14 q 16) (14 r 17) (14 s 18) (14 t 19) (14 u 20) (14 v 21) (14 w 22) (14 x 23) (14 y 24) (15 e 4) (15 f 5) (15 g 6) (15 h 7) (15 i 8) (15 j 9) (15 k 10) (15 l 11) (15 m 12) (15 n 13) (15 o 14) (15 p 15) (15 q 16) (15 r 17) (15 s 18) (15 t 19) (15 u 20) (15 v 21) (15 w 22) (15 x 23) (15 y 24) (16 e 4) (16 f 5) (16 g 6) (16 h 7) (16 i 8) (16 j 9) (16 k 10) (16 l 11) (16 m 12) (16 n 13) (16 o 14) (16 p 15) (16 q 16) (16 r 17) (16 s 18) (16 t 19) (16 u 20) (16 v 21) (16 w 22) (16 x 23) (16 y 24) (17 e 4) (17 f 5) (17 g 6) (17 h 7) (17 i 8) (17 j 9) (17 k 10) (17 l 11) (17 m 12) (17 n 13) (17 o 14) (17 p 15) (17 q 16) (17 r 17) (17 s 18) (17 t 19) (17 u 20) (17 v 21) (17 w 22) (17 x 23) (17 y 24) (18 e 4) (18 f 5) (18 g 6) (18 h 7) (18 i 8) (18 j 9) (18 k 10) (18 l 11) (18 m 12) (18 n 13) (18 o 14) (18 p 15) (18 q 16) (18 r 17) (18 s 18) (18 t 19) (18 u 20) (18 v 21) (18 w 22) (18 x 23) (18 y 24) (19 e 4) (19 f 5) (19 g 6) (19 h 7) (19 i 8) (19 j 9) (19 k 10) (19 l 11) (19 m 12) (19 n 13) (19 o 14) (19 p 15) (19 q 16) (19 r 17) (19 s 18) (19 t 19) (19 u 20) (19 v 21) (19 w 22) (19 x 23) (19 y 24) (20 e 4) (20 f 5) (20 g 6) (20 h 7) (20 i 8) (20 j 9) (20 k 10) (20 l 11) (20 m 12) (20 n 13) (20 o 14) (20 p 15) (20 q 16) (20 r 17) (20 s 18) (20 t 19) (20 u 20) (20 v 21) (20 w 22) (20 x 23) (20 y 24) (21 e 4) (21 f 5) (21 g 6) (21 h 7) (21 i 8) (21 j 9) (21 k 10) (21 l 11) (21 m 12) (21 n 13) (21 o 14) (21 p 15) (21 q 16) (21 r 17) (21 s 18) (21 t 19) (21 u 20) (21 v 21) (21 w 22) (21 x 23) (21 y 24) (22 e 4) (22 f 5) (22 g 6) (22 h 7) (22 i 8) (22 j 9) (22 k 10) (22 l 11) (22 m 12) (22 n 13) (22 o 14) (22 p 15) (22 q 16) (22 r 17) (22 s 18) (22 t 19) (22 u 20) (22 v 21) (22 w 22) (22 x 23) (22 y 24) (23 e 4) (23 f 5) (23 g 6) (23 h 7) (23 i 8) (23 j 9) (23 k 10) (23 l 11) (23 m 12) (23 n 13) (23 o 14) (23 p 15) (23 q 16) (23 r 17) (23 s 18) (23 t 19) (23 u 20) (23 v 21) (23 w 22) (23 x 23) (23 y 24)) #((a  . w) (animate  . i) (animateColor  . l) (animateMotion  . k) (animateTransform  . m) (circle  . r) (desc  . b) (ellipse  . t) (foreignObject  . x) (g  . f) (image  . o) (line  . s) (metadata  . d) (path  . p) (polygon  . v) (polyline  . u) (rect  . q) (set  . j) (svg  . e) (switch  . n) (terminator$$  . y) (text  . h) (title  . c) (use  . g)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "switch"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "switch")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "switch"))))

(define (image-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("width" "CDATA" "#REQUIRED") ("height" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("embed") "embed") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("preserveAspectRatio" "CDATA" "xMidYMid meet") ("transform" "CDATA" "#IMPLIED")))) (req-n 3) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "image"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "image")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "image"))))

(define (style-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("type" "CDATA" "#REQUIRED") ("xml:space" ("preserve") "preserve" "#FIXED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("media" "CDATA" "#IMPLIED") ("title" "CDATA" "#IMPLIED")))) (req-n 1)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "style"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "style")) (if xml-validate-contents? (validate-as-pcdata! contents "style"))))

(define (path-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("d" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("pathLength" "CDATA" "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "path"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "path")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "path"))))

(define (rect-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("width" "CDATA" "#REQUIRED") ("height" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("rx" "CDATA" "#IMPLIED") ("ry" "CDATA" "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 2) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "rect"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "rect")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "rect"))))

(define (circle-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("r" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("cx" "CDATA" "#IMPLIED") ("cy" "CDATA" "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "circle"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "circle")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "circle"))))

(define (line-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x1" "CDATA" "#IMPLIED") ("y1" "CDATA" "#IMPLIED") ("x2" "CDATA" "#IMPLIED") ("y2" "CDATA" "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "line"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "line")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "line"))))

(define (ellipse-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("rx" "CDATA" "#REQUIRED") ("ry" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("cx" "CDATA" "#IMPLIED") ("cy" "CDATA" "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 2) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "ellipse"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "ellipse")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "ellipse"))))

(define (polyline-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("points" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "polyline"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "polyline")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "polyline"))))

(define (polygon-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("points" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (desc  . b) (metadata  . d) (set  . f) (terminator$$  . j) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "polygon"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "polygon")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "polygon"))))

(define (text-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("dx" "CDATA" "#IMPLIED") ("dy" "CDATA" "#IMPLIED") ("rotate" "CDATA" "#IMPLIED") ("textLength" "CDATA" "#IMPLIED") ("lengthAdjust" ("spacing" "spacingAndGlyphs") "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "text"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "text")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (desc title metadata animate set animateMotion animateColor animateTransform tspan tref textPath altGlyph a)) "text"))))

(define (tspan-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("dx" "CDATA" "#IMPLIED") ("dy" "CDATA" "#IMPLIED") ("rotate" "CDATA" "#IMPLIED") ("textLength" "CDATA" "#IMPLIED") ("lengthAdjust" ("spacing" "spacingAndGlyphs") "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "tspan"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "tspan")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (tspan tref altGlyph animate set animateColor desc title metadata a)) "tspan"))))

(define (tref-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("dx" "CDATA" "#IMPLIED") ("dy" "CDATA" "#IMPLIED") ("rotate" "CDATA" "#IMPLIED") ("textLength" "CDATA" "#IMPLIED") ("lengthAdjust" ("spacing" "spacingAndGlyphs") "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (7) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (4 b 1) (4 c 2) (4 d 3) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (5 b 1) (5 c 2) (5 d 3) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (6 b 1) (6 c 2) (6 d 3) (6 e 4) (6 f 5) (6 g 6) (6 h 7)) #((animate  . b) (animateColor  . d) (desc  . e) (metadata  . g) (set  . c) (terminator$$  . h) (title  . f)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "tref"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "tref")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "tref"))))

(define (textPath-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("startOffset" "CDATA" "#IMPLIED") ("textLength" "CDATA" "#IMPLIED") ("lengthAdjust" ("spacing" "spacingAndGlyphs") "#IMPLIED") ("method" ("align" "stretch") "#IMPLIED") ("spacing" ("auto" "exact") "#IMPLIED")))) (req-n 1)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "textPath"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "textPath")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (tspan tref altGlyph animate set animateColor desc title metadata a)) "textPath"))))

(define (altGlyph-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("dx" "CDATA" "#IMPLIED") ("dy" "CDATA" "#IMPLIED") ("glyphRef" "CDATA" "#IMPLIED") ("format" "CDATA" "#IMPLIED") ("rotate" "CDATA" "#IMPLIED")))) (req-n 0)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "altGlyph"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "altGlyph")) (if xml-validate-contents? (validate-as-pcdata! contents "altGlyph"))))

(define (altGlyphDef-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (1 b 5) (1 d 4) (2 c 3) (2 d 4) (3 c 3) (3 d 4) (5 b 5) (5 d 4)) #((altGlyphItem  . c) (glyphRef  . b) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "altGlyphDef"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "altGlyphDef")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "altGlyphDef"))))

(define (altGlyphItem-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (1 b 2) (1 c 3) (2 b 2) (2 c 3)) #((glyphRef  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "altGlyphItem"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "altGlyphItem")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "altGlyphItem"))))

(define (glyphRef-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("dx" "CDATA" "#IMPLIED") ("dy" "CDATA" "#IMPLIED") ("glyphRef" "CDATA" "#IMPLIED") ("format" "CDATA" "#IMPLIED")))) (req-n 0)) (xml-check-for-empty-contents! contents "glyphRef") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "glyphRef"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "glyphRef"))))

(define (marker-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("refX" "CDATA" "#IMPLIED") ("refY" "CDATA" "#IMPLIED") ("markerUnits" ("strokeWidth" "userSpaceOnUse") "#IMPLIED") ("markerWidth" "CDATA" "#IMPLIED") ("markerHeight" "CDATA" "#IMPLIED") ("orient" "CDATA" "#IMPLIED") ("viewBox" "CDATA" "#IMPLIED") ("preserveAspectRatio" "CDATA" "xMidYMid meet")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "marker"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "marker")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "marker"))))

(define (color-profile-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("name" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("local" "CDATA" "#IMPLIED") ("rendering-intent" ("auto" "perceptual" "relative-colorimetric" "saturation" "absolute-colorimetric") "auto")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((desc  . b) (metadata  . d) (terminator$$  . e) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "color-profile"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "color-profile")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "color-profile"))))

(define (linearGradient-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x1" "CDATA" "#IMPLIED") ("y1" "CDATA" "#IMPLIED") ("x2" "CDATA" "#IMPLIED") ("y2" "CDATA" "#IMPLIED") ("gradientUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED") ("gradientTransform" "CDATA" "#IMPLIED") ("spreadMethod" ("pad" "reflect" "repeat") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (8) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8)) #((animate  . f) (animateTransform  . h) (desc  . b) (metadata  . d) (set  . g) (stop  . e) (terminator$$  . i) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "linearGradient"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "linearGradient")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "linearGradient"))))

(define (radialGradient-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("cx" "CDATA" "#IMPLIED") ("cy" "CDATA" "#IMPLIED") ("r" "CDATA" "#IMPLIED") ("fx" "CDATA" "#IMPLIED") ("fy" "CDATA" "#IMPLIED") ("gradientUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED") ("gradientTransform" "CDATA" "#IMPLIED") ("spreadMethod" ("pad" "reflect" "repeat") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (8) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8)) #((animate  . f) (animateTransform  . h) (desc  . b) (metadata  . d) (set  . g) (stop  . e) (terminator$$  . i) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "radialGradient"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "radialGradient")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "radialGradient"))))

(define (stop-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("offset" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((animate  . b) (animateColor  . d) (set  . c) (terminator$$  . e)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "stop"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "stop")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "stop"))))

(define (pattern-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("patternUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED") ("patternContentUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED") ("patternTransform" "CDATA" "#IMPLIED") ("viewBox" "CDATA" "#IMPLIED") ("preserveAspectRatio" "CDATA" "xMidYMid meet")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "pattern"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "pattern")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "pattern"))))

(define (clipPath-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("transform" "CDATA" "#IMPLIED") ("clipPathUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (19) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (0 k 10) (0 l 11) (0 m 12) (0 n 13) (0 o 14) (0 p 15) (0 q 16) (0 r 17) (0 s 18) (0 t 19) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (1 k 10) (1 l 11) (1 m 12) (1 n 13) (1 o 14) (1 p 15) (1 q 16) (1 r 17) (1 s 18) (1 t 19) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (2 k 10) (2 l 11) (2 m 12) (2 n 13) (2 o 14) (2 p 15) (2 q 16) (2 r 17) (2 s 18) (2 t 19) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (3 k 10) (3 l 11) (3 m 12) (3 n 13) (3 o 14) (3 p 15) (3 q 16) (3 r 17) (3 s 18) (3 t 19) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (4 k 10) (4 l 11) (4 m 12) (4 n 13) (4 o 14) (4 p 15) (4 q 16) (4 r 17) (4 s 18) (4 t 19) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (5 k 10) (5 l 11) (5 m 12) (5 n 13) (5 o 14) (5 p 15) (5 q 16) (5 r 17) (5 s 18) (5 t 19) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (6 k 10) (6 l 11) (6 m 12) (6 n 13) (6 o 14) (6 p 15) (6 q 16) (6 r 17) (6 s 18) (6 t 19) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (7 k 10) (7 l 11) (7 m 12) (7 n 13) (7 o 14) (7 p 15) (7 q 16) (7 r 17) (7 s 18) (7 t 19) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9) (8 k 10) (8 l 11) (8 m 12) (8 n 13) (8 o 14) (8 p 15) (8 q 16) (8 r 17) (8 s 18) (8 t 19) (9 e 4) (9 f 5) (9 g 6) (9 h 7) (9 i 8) (9 j 9) (9 k 10) (9 l 11) (9 m 12) (9 n 13) (9 o 14) (9 p 15) (9 q 16) (9 r 17) (9 s 18) (9 t 19) (10 e 4) (10 f 5) (10 g 6) (10 h 7) (10 i 8) (10 j 9) (10 k 10) (10 l 11) (10 m 12) (10 n 13) (10 o 14) (10 p 15) (10 q 16) (10 r 17) (10 s 18) (10 t 19) (11 e 4) (11 f 5) (11 g 6) (11 h 7) (11 i 8) (11 j 9) (11 k 10) (11 l 11) (11 m 12) (11 n 13) (11 o 14) (11 p 15) (11 q 16) (11 r 17) (11 s 18) (11 t 19) (12 e 4) (12 f 5) (12 g 6) (12 h 7) (12 i 8) (12 j 9) (12 k 10) (12 l 11) (12 m 12) (12 n 13) (12 o 14) (12 p 15) (12 q 16) (12 r 17) (12 s 18) (12 t 19) (13 e 4) (13 f 5) (13 g 6) (13 h 7) (13 i 8) (13 j 9) (13 k 10) (13 l 11) (13 m 12) (13 n 13) (13 o 14) (13 p 15) (13 q 16) (13 r 17) (13 s 18) (13 t 19) (14 e 4) (14 f 5) (14 g 6) (14 h 7) (14 i 8) (14 j 9) (14 k 10) (14 l 11) (14 m 12) (14 n 13) (14 o 14) (14 p 15) (14 q 16) (14 r 17) (14 s 18) (14 t 19) (15 e 4) (15 f 5) (15 g 6) (15 h 7) (15 i 8) (15 j 9) (15 k 10) (15 l 11) (15 m 12) (15 n 13) (15 o 14) (15 p 15) (15 q 16) (15 r 17) (15 s 18) (15 t 19) (16 e 4) (16 f 5) (16 g 6) (16 h 7) (16 i 8) (16 j 9) (16 k 10) (16 l 11) (16 m 12) (16 n 13) (16 o 14) (16 p 15) (16 q 16) (16 r 17) (16 s 18) (16 t 19) (17 e 4) (17 f 5) (17 g 6) (17 h 7) (17 i 8) (17 j 9) (17 k 10) (17 l 11) (17 m 12) (17 n 13) (17 o 14) (17 p 15) (17 q 16) (17 r 17) (17 s 18) (17 t 19) (18 e 4) (18 f 5) (18 g 6) (18 h 7) (18 i 8) (18 j 9) (18 k 10) (18 l 11) (18 m 12) (18 n 13) (18 o 14) (18 p 15) (18 q 16) (18 r 17) (18 s 18) (18 t 19)) #((altGlyphDef  . s) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . m) (desc  . b) (ellipse  . o) (line  . n) (metadata  . d) (path  . k) (polygon  . q) (polyline  . p) (rect  . l) (set  . f) (terminator$$  . t) (text  . r) (title  . c) (use  . j)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "clipPath"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "clipPath")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "clipPath"))))

(define (mask-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("maskUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED") ("maskContentUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "mask"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "mask")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "mask"))))

(define (filter-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("filterRes" "CDATA" "#IMPLIED") ("filterUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED") ("primitiveUnits" ("userSpaceOnUse" "objectBoundingBox") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (22) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (0 h 7) (0 i 8) (0 j 9) (0 k 10) (0 l 11) (0 m 12) (0 n 13) (0 o 14) (0 p 15) (0 q 16) (0 r 17) (0 s 18) (0 t 19) (0 u 20) (0 v 21) (0 w 22) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (1 i 8) (1 j 9) (1 k 10) (1 l 11) (1 m 12) (1 n 13) (1 o 14) (1 p 15) (1 q 16) (1 r 17) (1 s 18) (1 t 19) (1 u 20) (1 v 21) (1 w 22) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (2 i 8) (2 j 9) (2 k 10) (2 l 11) (2 m 12) (2 n 13) (2 o 14) (2 p 15) (2 q 16) (2 r 17) (2 s 18) (2 t 19) (2 u 20) (2 v 21) (2 w 22) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (3 i 8) (3 j 9) (3 k 10) (3 l 11) (3 m 12) (3 n 13) (3 o 14) (3 p 15) (3 q 16) (3 r 17) (3 s 18) (3 t 19) (3 u 20) (3 v 21) (3 w 22) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (4 i 8) (4 j 9) (4 k 10) (4 l 11) (4 m 12) (4 n 13) (4 o 14) (4 p 15) (4 q 16) (4 r 17) (4 s 18) (4 t 19) (4 u 20) (4 v 21) (4 w 22) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (5 k 10) (5 l 11) (5 m 12) (5 n 13) (5 o 14) (5 p 15) (5 q 16) (5 r 17) (5 s 18) (5 t 19) (5 u 20) (5 v 21) (5 w 22) (6 e 4) (6 f 5) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (6 k 10) (6 l 11) (6 m 12) (6 n 13) (6 o 14) (6 p 15) (6 q 16) (6 r 17) (6 s 18) (6 t 19) (6 u 20) (6 v 21) (6 w 22) (7 e 4) (7 f 5) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (7 k 10) (7 l 11) (7 m 12) (7 n 13) (7 o 14) (7 p 15) (7 q 16) (7 r 17) (7 s 18) (7 t 19) (7 u 20) (7 v 21) (7 w 22) (8 e 4) (8 f 5) (8 g 6) (8 h 7) (8 i 8) (8 j 9) (8 k 10) (8 l 11) (8 m 12) (8 n 13) (8 o 14) (8 p 15) (8 q 16) (8 r 17) (8 s 18) (8 t 19) (8 u 20) (8 v 21) (8 w 22) (9 e 4) (9 f 5) (9 g 6) (9 h 7) (9 i 8) (9 j 9) (9 k 10) (9 l 11) (9 m 12) (9 n 13) (9 o 14) (9 p 15) (9 q 16) (9 r 17) (9 s 18) (9 t 19) (9 u 20) (9 v 21) (9 w 22) (10 e 4) (10 f 5) (10 g 6) (10 h 7) (10 i 8) (10 j 9) (10 k 10) (10 l 11) (10 m 12) (10 n 13) (10 o 14) (10 p 15) (10 q 16) (10 r 17) (10 s 18) (10 t 19) (10 u 20) (10 v 21) (10 w 22) (11 e 4) (11 f 5) (11 g 6) (11 h 7) (11 i 8) (11 j 9) (11 k 10) (11 l 11) (11 m 12) (11 n 13) (11 o 14) (11 p 15) (11 q 16) (11 r 17) (11 s 18) (11 t 19) (11 u 20) (11 v 21) (11 w 22) (12 e 4) (12 f 5) (12 g 6) (12 h 7) (12 i 8) (12 j 9) (12 k 10) (12 l 11) (12 m 12) (12 n 13) (12 o 14) (12 p 15) (12 q 16) (12 r 17) (12 s 18) (12 t 19) (12 u 20) (12 v 21) (12 w 22) (13 e 4) (13 f 5) (13 g 6) (13 h 7) (13 i 8) (13 j 9) (13 k 10) (13 l 11) (13 m 12) (13 n 13) (13 o 14) (13 p 15) (13 q 16) (13 r 17) (13 s 18) (13 t 19) (13 u 20) (13 v 21) (13 w 22) (14 e 4) (14 f 5) (14 g 6) (14 h 7) (14 i 8) (14 j 9) (14 k 10) (14 l 11) (14 m 12) (14 n 13) (14 o 14) (14 p 15) (14 q 16) (14 r 17) (14 s 18) (14 t 19) (14 u 20) (14 v 21) (14 w 22) (15 e 4) (15 f 5) (15 g 6) (15 h 7) (15 i 8) (15 j 9) (15 k 10) (15 l 11) (15 m 12) (15 n 13) (15 o 14) (15 p 15) (15 q 16) (15 r 17) (15 s 18) (15 t 19) (15 u 20) (15 v 21) (15 w 22) (16 e 4) (16 f 5) (16 g 6) (16 h 7) (16 i 8) (16 j 9) (16 k 10) (16 l 11) (16 m 12) (16 n 13) (16 o 14) (16 p 15) (16 q 16) (16 r 17) (16 s 18) (16 t 19) (16 u 20) (16 v 21) (16 w 22) (17 e 4) (17 f 5) (17 g 6) (17 h 7) (17 i 8) (17 j 9) (17 k 10) (17 l 11) (17 m 12) (17 n 13) (17 o 14) (17 p 15) (17 q 16) (17 r 17) (17 s 18) (17 t 19) (17 u 20) (17 v 21) (17 w 22) (18 e 4) (18 f 5) (18 g 6) (18 h 7) (18 i 8) (18 j 9) (18 k 10) (18 l 11) (18 m 12) (18 n 13) (18 o 14) (18 p 15) (18 q 16) (18 r 17) (18 s 18) (18 t 19) (18 u 20) (18 v 21) (18 w 22) (19 e 4) (19 f 5) (19 g 6) (19 h 7) (19 i 8) (19 j 9) (19 k 10) (19 l 11) (19 m 12) (19 n 13) (19 o 14) (19 p 15) (19 q 16) (19 r 17) (19 s 18) (19 t 19) (19 u 20) (19 v 21) (19 w 22) (20 e 4) (20 f 5) (20 g 6) (20 h 7) (20 i 8) (20 j 9) (20 k 10) (20 l 11) (20 m 12) (20 n 13) (20 o 14) (20 p 15) (20 q 16) (20 r 17) (20 s 18) (20 t 19) (20 u 20) (20 v 21) (20 w 22) (21 e 4) (21 f 5) (21 g 6) (21 h 7) (21 i 8) (21 j 9) (21 k 10) (21 l 11) (21 m 12) (21 n 13) (21 o 14) (21 p 15) (21 q 16) (21 r 17) (21 s 18) (21 t 19) (21 u 20) (21 v 21) (21 w 22)) #((animate  . e) (desc  . b) (feBlend  . g) (feColorMatrix  . h) (feComponentTransfer  . i) (feComposite  . j) (feConvolveMatrix  . k) (feDiffuseLighting  . l) (feDisplacementMap  . m) (feFlood  . n) (feGaussianBlur  . o) (feImage  . p) (feMerge  . q) (feMorphology  . r) (feOffset  . s) (feSpecularLighting  . t) (feTile  . u) (feTurbulence  . v) (metadata  . d) (set  . f) (terminator$$  . w) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "filter"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "filter")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "filter"))))

(define (feBlend-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("in2" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("mode" ("normal" "multiply" "screen" "darken" "lighten") "normal")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feBlend"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feBlend")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feBlend"))))

(define (feColorMatrix-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("type" ("matrix" "saturate" "hueRotate" "luminanceToAlpha") "matrix") ("values" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feColorMatrix"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feColorMatrix")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feColorMatrix"))))

(define (feComponentTransfer-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (5) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (2 d 3) (2 e 4) (2 f 5) (3 e 4) (3 f 5) (4 f 5)) #((feFuncA  . e) (feFuncB  . d) (feFuncG  . c) (feFuncR  . b) (terminator$$  . f)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feComponentTransfer"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feComponentTransfer")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feComponentTransfer"))))

(define (feComposite-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("in2" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("operator" ("over" "in" "out" "atop" "xor" "arithmetic") "over") ("k1" "CDATA" "#IMPLIED") ("k2" "CDATA" "#IMPLIED") ("k3" "CDATA" "#IMPLIED") ("k4" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feComposite"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feComposite")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feComposite"))))

(define (feConvolveMatrix-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("order" "CDATA" "#REQUIRED") ("kernelMatrix" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("divisor" "CDATA" "#IMPLIED") ("bias" "CDATA" "#IMPLIED") ("targetX" "CDATA" "#IMPLIED") ("targetY" "CDATA" "#IMPLIED") ("edgeMode" ("duplicate" "wrap" "none") "duplicate") ("kernelUnitLength" "CDATA" "#IMPLIED") ("preserveAlpha" ("false" "true") "#IMPLIED")))) (req-n 2) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feConvolveMatrix"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feConvolveMatrix")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feConvolveMatrix"))))

(define (feDiffuseLighting-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("surfaceScale" "CDATA" "#IMPLIED") ("diffuseConstant" "CDATA" "#IMPLIED") ("kernelUnitLength" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (7) #((0 b 1) (0 c 2) (0 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (6 e 4) (6 f 5) (6 g 6) (6 h 7)) #((animate  . e) (animateColor  . g) (feDistantLight  . b) (fePointLight  . c) (feSpotLight  . d) (set  . f) (terminator$$  . h)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feDiffuseLighting"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feDiffuseLighting")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feDiffuseLighting"))))

(define (feDisplacementMap-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("in2" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("scale" "CDATA" "#IMPLIED") ("xChannelSelector" ("R" "G" "B" "A") "A") ("yChannelSelector" ("R" "G" "B" "A") "A")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feDisplacementMap"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feDisplacementMap")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feDisplacementMap"))))

(define (feFlood-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((animate  . b) (animateColor  . d) (set  . c) (terminator$$  . e)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feFlood"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feFlood")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feFlood"))))

(define (feGaussianBlur-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("stdDeviation" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feGaussianBlur"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feGaussianBlur")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feGaussianBlur"))))

(define (feImage-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("embed") "embed") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("preserveAspectRatio" "CDATA" "xMidYMid meet")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((animate  . b) (animateTransform  . d) (set  . c) (terminator$$  . e)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feImage"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feImage")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feImage"))))

(define (feMerge-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (2) #((0 b 1) (0 c 2) (1 b 1) (1 c 2)) #((feMergeNode  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feMerge"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feMerge")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feMerge"))))

(define (feMergeNode-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("in" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feMergeNode"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feMergeNode")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feMergeNode"))))

(define (feMorphology-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("operator" ("erode" "dilate") "erode") ("radius" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feMorphology"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feMorphology")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feMorphology"))))

(define (feOffset-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("dx" "CDATA" "#IMPLIED") ("dy" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feOffset"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feOffset")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feOffset"))))

(define (feSpecularLighting-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("surfaceScale" "CDATA" "#IMPLIED") ("specularConstant" "CDATA" "#IMPLIED") ("specularExponent" "CDATA" "#IMPLIED") ("kernelUnitLength" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (7) #((0 b 1) (0 c 2) (0 d 3) (1 e 4) (1 f 5) (1 g 6) (1 h 7) (2 e 4) (2 f 5) (2 g 6) (2 h 7) (3 e 4) (3 f 5) (3 g 6) (3 h 7) (4 e 4) (4 f 5) (4 g 6) (4 h 7) (5 e 4) (5 f 5) (5 g 6) (5 h 7) (6 e 4) (6 f 5) (6 g 6) (6 h 7)) #((animate  . e) (animateColor  . g) (feDistantLight  . b) (fePointLight  . c) (feSpotLight  . d) (set  . f) (terminator$$  . h)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feSpecularLighting"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feSpecularLighting")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feSpecularLighting"))))

(define (feTile-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("in" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feTile"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feTile")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feTile"))))

(define (feTurbulence-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("width" "CDATA" "#IMPLIED") ("height" "CDATA" "#IMPLIED") ("result" "CDATA" "#IMPLIED") ("baseFrequency" "CDATA" "#IMPLIED") ("numOctaves" "CDATA" "#IMPLIED") ("seed" "CDATA" "#IMPLIED") ("stitchTiles" ("stitch" "noStitch") "noStitch") ("type" ("fractalNoise" "turbulence") "turbulence")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feTurbulence"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feTurbulence")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feTurbulence"))))

(define (feDistantLight-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("azimuth" "CDATA" "#IMPLIED") ("elevation" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feDistantLight"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feDistantLight")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feDistantLight"))))

(define (fePointLight-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("z" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "fePointLight"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "fePointLight")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "fePointLight"))))

(define (feSpotLight-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("z" "CDATA" "#IMPLIED") ("pointsAtX" "CDATA" "#IMPLIED") ("pointsAtY" "CDATA" "#IMPLIED") ("pointsAtZ" "CDATA" "#IMPLIED") ("specularExponent" "CDATA" "#IMPLIED") ("limitingConeAngle" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feSpotLight"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feSpotLight")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feSpotLight"))))

(define (feFuncR-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("type" ("identity" "table" "discrete" "linear" "gamma") "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("tableValues" "CDATA" "#IMPLIED") ("slope" "CDATA" "#IMPLIED") ("intercept" "CDATA" "#IMPLIED") ("amplitude" "CDATA" "#IMPLIED") ("exponent" "CDATA" "#IMPLIED") ("offset" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feFuncR"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feFuncR")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feFuncR"))))

(define (feFuncG-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("type" ("identity" "table" "discrete" "linear" "gamma") "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("tableValues" "CDATA" "#IMPLIED") ("slope" "CDATA" "#IMPLIED") ("intercept" "CDATA" "#IMPLIED") ("amplitude" "CDATA" "#IMPLIED") ("exponent" "CDATA" "#IMPLIED") ("offset" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feFuncG"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feFuncG")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feFuncG"))))

(define (feFuncB-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("type" ("identity" "table" "discrete" "linear" "gamma") "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("tableValues" "CDATA" "#IMPLIED") ("slope" "CDATA" "#IMPLIED") ("intercept" "CDATA" "#IMPLIED") ("amplitude" "CDATA" "#IMPLIED") ("exponent" "CDATA" "#IMPLIED") ("offset" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feFuncB"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feFuncB")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feFuncB"))))

(define (feFuncA-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("type" ("identity" "table" "discrete" "linear" "gamma") "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("tableValues" "CDATA" "#IMPLIED") ("slope" "CDATA" "#IMPLIED") ("intercept" "CDATA" "#IMPLIED") ("amplitude" "CDATA" "#IMPLIED") ("exponent" "CDATA" "#IMPLIED") ("offset" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (3) #((0 b 1) (0 c 2) (0 d 3) (1 b 1) (1 c 2) (1 d 3) (2 b 1) (2 c 2) (2 d 3)) #((animate  . b) (set  . c) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "feFuncA"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "feFuncA")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "feFuncA"))))

(define (cursor-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((desc  . b) (metadata  . d) (terminator$$  . e) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "cursor"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "cursor")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "cursor"))))

(define (a-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("new" "replace") "replace") ("xlink:actuate" ("onRequest") "onRequest" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("transform" "CDATA" "#IMPLIED") ("target" "NMTOKEN" "#IMPLIED")))) (req-n 1)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "a"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "a")) (if xml-validate-contents? (validate-mixed-contents-by-simple-means! contents (quote (desc title metadata animate set animateMotion animateColor animateTransform svg g defs symbol use switch image style path rect circle line ellipse polyline polygon text altGlyphDef marker color-profile linearGradient radialGradient pattern clipPath mask filter cursor a view script font font-face)) "a"))))

(define (view-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("viewBox" "CDATA" "#IMPLIED") ("preserveAspectRatio" "CDATA" "xMidYMid meet") ("zoomAndPan" ("disable" "magnify") "magnify") ("viewTarget" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((desc  . b) (metadata  . d) (terminator$$  . e) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "view"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "view")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "view"))))

(define (script-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("type" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED")))) (req-n 1)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "script"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "script")) (if xml-validate-contents? (validate-as-pcdata! contents "script"))))

(define (animate-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("attributeName" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("onbegin" "CDATA" "#IMPLIED") ("onend" "CDATA" "#IMPLIED") ("onrepeat" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("attributeType" "CDATA" "#IMPLIED") ("begin" "CDATA" "#IMPLIED") ("dur" "CDATA" "#IMPLIED") ("end" "CDATA" "#IMPLIED") ("min" "CDATA" "#IMPLIED") ("max" "CDATA" "#IMPLIED") ("restart" ("always" "never" "whenNotActive") "always") ("repeatCount" "CDATA" "#IMPLIED") ("repeatDur" "CDATA" "#IMPLIED") ("fill" ("remove" "freeze") "remove") ("calcMode" ("discrete" "linear" "paced" "spline") "linear") ("values" "CDATA" "#IMPLIED") ("keyTimes" "CDATA" "#IMPLIED") ("keySplines" "CDATA" "#IMPLIED") ("from" "CDATA" "#IMPLIED") ("to" "CDATA" "#IMPLIED") ("by" "CDATA" "#IMPLIED") ("additive" ("replace" "sum") "replace") ("accumulate" ("none" "sum") "none")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((desc  . b) (metadata  . d) (terminator$$  . e) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "animate"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "animate")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "animate"))))

(define (set-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("attributeName" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("onbegin" "CDATA" "#IMPLIED") ("onend" "CDATA" "#IMPLIED") ("onrepeat" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("attributeType" "CDATA" "#IMPLIED") ("begin" "CDATA" "#IMPLIED") ("dur" "CDATA" "#IMPLIED") ("end" "CDATA" "#IMPLIED") ("min" "CDATA" "#IMPLIED") ("max" "CDATA" "#IMPLIED") ("restart" ("always" "never" "whenNotActive") "always") ("repeatCount" "CDATA" "#IMPLIED") ("repeatDur" "CDATA" "#IMPLIED") ("fill" ("remove" "freeze") "remove") ("to" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((desc  . b) (metadata  . d) (terminator$$  . e) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "set"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "set")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "set"))))

(define (animateMotion-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("onbegin" "CDATA" "#IMPLIED") ("onend" "CDATA" "#IMPLIED") ("onrepeat" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("begin" "CDATA" "#IMPLIED") ("dur" "CDATA" "#IMPLIED") ("end" "CDATA" "#IMPLIED") ("min" "CDATA" "#IMPLIED") ("max" "CDATA" "#IMPLIED") ("restart" ("always" "never" "whenNotActive") "always") ("repeatCount" "CDATA" "#IMPLIED") ("repeatDur" "CDATA" "#IMPLIED") ("fill" ("remove" "freeze") "remove") ("additive" ("replace" "sum") "replace") ("accumulate" ("none" "sum") "none") ("calcMode" ("discrete" "linear" "paced" "spline") "paced") ("values" "CDATA" "#IMPLIED") ("keyTimes" "CDATA" "#IMPLIED") ("keySplines" "CDATA" "#IMPLIED") ("from" "CDATA" "#IMPLIED") ("to" "CDATA" "#IMPLIED") ("by" "CDATA" "#IMPLIED") ("path" "CDATA" "#IMPLIED") ("keyPoints" "CDATA" "#IMPLIED") ("rotate" "CDATA" "#IMPLIED") ("origin" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (5) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (4 f 5)) #((desc  . b) (metadata  . d) (mpath  . e) (terminator$$  . f) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "animateMotion"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "animateMotion")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "animateMotion"))))

(define (animateColor-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("attributeName" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("onbegin" "CDATA" "#IMPLIED") ("onend" "CDATA" "#IMPLIED") ("onrepeat" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("attributeType" "CDATA" "#IMPLIED") ("begin" "CDATA" "#IMPLIED") ("dur" "CDATA" "#IMPLIED") ("end" "CDATA" "#IMPLIED") ("min" "CDATA" "#IMPLIED") ("max" "CDATA" "#IMPLIED") ("restart" ("always" "never" "whenNotActive") "always") ("repeatCount" "CDATA" "#IMPLIED") ("repeatDur" "CDATA" "#IMPLIED") ("fill" ("remove" "freeze") "remove") ("calcMode" ("discrete" "linear" "paced" "spline") "linear") ("values" "CDATA" "#IMPLIED") ("keyTimes" "CDATA" "#IMPLIED") ("keySplines" "CDATA" "#IMPLIED") ("from" "CDATA" "#IMPLIED") ("to" "CDATA" "#IMPLIED") ("by" "CDATA" "#IMPLIED") ("additive" ("replace" "sum") "replace") ("accumulate" ("none" "sum") "none")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((desc  . b) (metadata  . d) (terminator$$  . e) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "animateColor"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "animateColor")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "animateColor"))))

(define (animateTransform-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("attributeName" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("onbegin" "CDATA" "#IMPLIED") ("onend" "CDATA" "#IMPLIED") ("onrepeat" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:href" "CDATA" "#IMPLIED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("attributeType" "CDATA" "#IMPLIED") ("begin" "CDATA" "#IMPLIED") ("dur" "CDATA" "#IMPLIED") ("end" "CDATA" "#IMPLIED") ("min" "CDATA" "#IMPLIED") ("max" "CDATA" "#IMPLIED") ("restart" ("always" "never" "whenNotActive") "always") ("repeatCount" "CDATA" "#IMPLIED") ("repeatDur" "CDATA" "#IMPLIED") ("fill" ("remove" "freeze") "remove") ("calcMode" ("discrete" "linear" "paced" "spline") "linear") ("values" "CDATA" "#IMPLIED") ("keyTimes" "CDATA" "#IMPLIED") ("keySplines" "CDATA" "#IMPLIED") ("from" "CDATA" "#IMPLIED") ("to" "CDATA" "#IMPLIED") ("by" "CDATA" "#IMPLIED") ("additive" ("replace" "sum") "replace") ("accumulate" ("none" "sum") "none") ("type" ("translate" "scale" "rotate" "skewX" "skewY") "translate")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((desc  . b) (metadata  . d) (terminator$$  . e) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "animateTransform"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "animateTransform")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "animateTransform"))))

(define (mpath-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED") ("externalResourcesRequired" ("false" "true") "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (4) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4)) #((desc  . b) (metadata  . d) (terminator$$  . e) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "mpath"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "mpath")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "mpath"))))

(define (font-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("horiz-adv-x" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("horiz-origin-x" "CDATA" "#IMPLIED") ("horiz-origin-y" "CDATA" "#IMPLIED") ("vert-origin-x" "CDATA" "#IMPLIED") ("vert-origin-y" "CDATA" "#IMPLIED") ("vert-adv-y" "CDATA" "#IMPLIED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (9) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (4 f 5) (5 g 6) (5 h 7) (5 i 8) (5 j 9) (6 g 6) (6 h 7) (6 i 8) (6 j 9) (7 g 6) (7 h 7) (7 i 8) (7 j 9) (8 g 6) (8 h 7) (8 i 8) (8 j 9)) #((desc  . b) (font-face  . e) (glyph  . g) (hkern  . h) (metadata  . d) (missing-glyph  . f) (terminator$$  . j) (title  . c) (vkern  . i)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "font"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "font")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "font"))))

(define (font-face-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-style" "CDATA" "#IMPLIED") ("font-variant" "CDATA" "#IMPLIED") ("font-weight" "CDATA" "#IMPLIED") ("font-stretch" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("unicode-range" "CDATA" "#IMPLIED") ("units-per-em" "CDATA" "#IMPLIED") ("panose-1" "CDATA" "#IMPLIED") ("stemv" "CDATA" "#IMPLIED") ("stemh" "CDATA" "#IMPLIED") ("slope" "CDATA" "#IMPLIED") ("cap-height" "CDATA" "#IMPLIED") ("x-height" "CDATA" "#IMPLIED") ("accent-height" "CDATA" "#IMPLIED") ("ascent" "CDATA" "#IMPLIED") ("descent" "CDATA" "#IMPLIED") ("widths" "CDATA" "#IMPLIED") ("bbox" "CDATA" "#IMPLIED") ("ideographic" "CDATA" "#IMPLIED") ("alphabetic" "CDATA" "#IMPLIED") ("mathematical" "CDATA" "#IMPLIED") ("hanging" "CDATA" "#IMPLIED") ("v-ideographic" "CDATA" "#IMPLIED") ("v-alphabetic" "CDATA" "#IMPLIED") ("v-mathematical" "CDATA" "#IMPLIED") ("v-hanging" "CDATA" "#IMPLIED") ("underline-position" "CDATA" "#IMPLIED") ("underline-thickness" "CDATA" "#IMPLIED") ("strikethrough-position" "CDATA" "#IMPLIED") ("strikethrough-thickness" "CDATA" "#IMPLIED") ("overline-position" "CDATA" "#IMPLIED") ("overline-thickness" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (6) #((0 b 1) (0 c 2) (0 d 3) (0 e 4) (0 f 5) (0 g 6) (1 b 1) (1 c 2) (1 d 3) (1 e 4) (1 f 5) (1 g 6) (2 b 1) (2 c 2) (2 d 3) (2 e 4) (2 f 5) (2 g 6) (3 b 1) (3 c 2) (3 d 3) (3 e 4) (3 f 5) (3 g 6) (4 f 5) (4 g 6) (5 g 6)) #((definition-src  . f) (desc  . b) (font-face-src  . e) (metadata  . d) (terminator$$  . g) (title  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "font-face"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "font-face")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "font-face"))))

(define (glyph-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("unicode" "CDATA" "#IMPLIED") ("glyph-name" "CDATA" "#IMPLIED") ("d" "CDATA" "#IMPLIED") ("orientation" "CDATA" "#IMPLIED") ("arabic-form" "CDATA" "#IMPLIED") ("lang" "CDATA" "#IMPLIED") ("horiz-adv-x" "CDATA" "#IMPLIED") ("vert-origin-x" "CDATA" "#IMPLIED") ("vert-origin-y" "CDATA" "#IMPLIED") ("vert-adv-y" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "glyph"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "glyph")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "glyph"))))

(define (missing-glyph-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("d" "CDATA" "#IMPLIED") ("horiz-adv-x" "CDATA" "#IMPLIED") ("vert-origin-x" "CDATA" "#IMPLIED") ("vert-origin-y" "CDATA" "#IMPLIED") ("vert-adv-y" "CDATA" "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (16) #((0 b 1) (0 ba 2) (0 bb 3) (0 bc 4) (0 bd 5) (0 be 6) (0 bf 7) (0 bg 8) (0 bh 9) (0 bi 10) (0 bj 11) (0 bk 12) (0 bl 13) (0 bm 14) (0 bn 15) (0 bo 16) (0 c 17) (0 d 18) (0 e 19) (0 f 20) (0 g 21) (0 h 22) (0 i 23) (0 j 24) (0 k 25) (0 l 26) (0 m 27) (0 n 28) (0 o 29) (0 p 30) (0 q 31) (0 r 32) (0 s 33) (0 t 34) (0 u 35) (0 v 36) (0 w 37) (0 x 38) (0 y 39) (0 z 40) (1 b 1) (1 ba 2) (1 bb 3) (1 bc 4) (1 bd 5) (1 be 6) (1 bf 7) (1 bg 8) (1 bh 9) (1 bi 10) (1 bj 11) (1 bk 12) (1 bl 13) (1 bm 14) (1 bn 15) (1 bo 16) (1 c 17) (1 d 18) (1 e 19) (1 f 20) (1 g 21) (1 h 22) (1 i 23) (1 j 24) (1 k 25) (1 l 26) (1 m 27) (1 n 28) (1 o 29) (1 p 30) (1 q 31) (1 r 32) (1 s 33) (1 t 34) (1 u 35) (1 v 36) (1 w 37) (1 x 38) (1 y 39) (1 z 40) (2 b 1) (2 ba 2) (2 bb 3) (2 bc 4) (2 bd 5) (2 be 6) (2 bf 7) (2 bg 8) (2 bh 9) (2 bi 10) (2 bj 11) (2 bk 12) (2 bl 13) (2 bm 14) (2 bn 15) (2 bo 16) (2 c 17) (2 d 18) (2 e 19) (2 f 20) (2 g 21) (2 h 22) (2 i 23) (2 j 24) (2 k 25) (2 l 26) (2 m 27) (2 n 28) (2 o 29) (2 p 30) (2 q 31) (2 r 32) (2 s 33) (2 t 34) (2 u 35) (2 v 36) (2 w 37) (2 x 38) (2 y 39) (2 z 40) (3 b 1) (3 ba 2) (3 bb 3) (3 bc 4) (3 bd 5) (3 be 6) (3 bf 7) (3 bg 8) (3 bh 9) (3 bi 10) (3 bj 11) (3 bk 12) (3 bl 13) (3 bm 14) (3 bn 15) (3 bo 16) (3 c 17) (3 d 18) (3 e 19) (3 f 20) (3 g 21) (3 h 22) (3 i 23) (3 j 24) (3 k 25) (3 l 26) (3 m 27) (3 n 28) (3 o 29) (3 p 30) (3 q 31) (3 r 32) (3 s 33) (3 t 34) (3 u 35) (3 v 36) (3 w 37) (3 x 38) (3 y 39) (3 z 40) (4 b 1) (4 ba 2) (4 bb 3) (4 bc 4) (4 bd 5) (4 be 6) (4 bf 7) (4 bg 8) (4 bh 9) (4 bi 10) (4 bj 11) (4 bk 12) (4 bl 13) (4 bm 14) (4 bn 15) (4 bo 16) (4 c 17) (4 d 18) (4 e 19) (4 f 20) (4 g 21) (4 h 22) (4 i 23) (4 j 24) (4 k 25) (4 l 26) (4 m 27) (4 n 28) (4 o 29) (4 p 30) (4 q 31) (4 r 32) (4 s 33) (4 t 34) (4 u 35) (4 v 36) (4 w 37) (4 x 38) (4 y 39) (4 z 40) (5 b 1) (5 ba 2) (5 bb 3) (5 bc 4) (5 bd 5) (5 be 6) (5 bf 7) (5 bg 8) (5 bh 9) (5 bi 10) (5 bj 11) (5 bk 12) (5 bl 13) (5 bm 14) (5 bn 15) (5 bo 16) (5 c 17) (5 d 18) (5 e 19) (5 f 20) (5 g 21) (5 h 22) (5 i 23) (5 j 24) (5 k 25) (5 l 26) (5 m 27) (5 n 28) (5 o 29) (5 p 30) (5 q 31) (5 r 32) (5 s 33) (5 t 34) (5 u 35) (5 v 36) (5 w 37) (5 x 38) (5 y 39) (5 z 40) (6 b 1) (6 ba 2) (6 bb 3) (6 bc 4) (6 bd 5) (6 be 6) (6 bf 7) (6 bg 8) (6 bh 9) (6 bi 10) (6 bj 11) (6 bk 12) (6 bl 13) (6 bm 14) (6 bn 15) (6 bo 16) (6 c 17) (6 d 18) (6 e 19) (6 f 20) (6 g 21) (6 h 22) (6 i 23) (6 j 24) (6 k 25) (6 l 26) (6 m 27) (6 n 28) (6 o 29) (6 p 30) (6 q 31) (6 r 32) (6 s 33) (6 t 34) (6 u 35) (6 v 36) (6 w 37) (6 x 38) (6 y 39) (6 z 40) (7 b 1) (7 ba 2) (7 bb 3) (7 bc 4) (7 bd 5) (7 be 6) (7 bf 7) (7 bg 8) (7 bh 9) (7 bi 10) (7 bj 11) (7 bk 12) (7 bl 13) (7 bm 14) (7 bn 15) (7 bo 16) (7 c 17) (7 d 18) (7 e 19) (7 f 20) (7 g 21) (7 h 22) (7 i 23) (7 j 24) (7 k 25) (7 l 26) (7 m 27) (7 n 28) (7 o 29) (7 p 30) (7 q 31) (7 r 32) (7 s 33) (7 t 34) (7 u 35) (7 v 36) (7 w 37) (7 x 38) (7 y 39) (7 z 40) (8 b 1) (8 ba 2) (8 bb 3) (8 bc 4) (8 bd 5) (8 be 6) (8 bf 7) (8 bg 8) (8 bh 9) (8 bi 10) (8 bj 11) (8 bk 12) (8 bl 13) (8 bm 14) (8 bn 15) (8 bo 16) (8 c 17) (8 d 18) (8 e 19) (8 f 20) (8 g 21) (8 h 22) (8 i 23) (8 j 24) (8 k 25) (8 l 26) (8 m 27) (8 n 28) (8 o 29) (8 p 30) (8 q 31) (8 r 32) (8 s 33) (8 t 34) (8 u 35) (8 v 36) (8 w 37) (8 x 38) (8 y 39) (8 z 40) (9 b 1) (9 ba 2) (9 bb 3) (9 bc 4) (9 bd 5) (9 be 6) (9 bf 7) (9 bg 8) (9 bh 9) (9 bi 10) (9 bj 11) (9 bk 12) (9 bl 13) (9 bm 14) (9 bn 15) (9 bo 16) (9 c 17) (9 d 18) (9 e 19) (9 f 20) (9 g 21) (9 h 22) (9 i 23) (9 j 24) (9 k 25) (9 l 26) (9 m 27) (9 n 28) (9 o 29) (9 p 30) (9 q 31) (9 r 32) (9 s 33) (9 t 34) (9 u 35) (9 v 36) (9 w 37) (9 x 38) (9 y 39) (9 z 40) (10 b 1) (10 ba 2) (10 bb 3) (10 bc 4) (10 bd 5) (10 be 6) (10 bf 7) (10 bg 8) (10 bh 9) (10 bi 10) (10 bj 11) (10 bk 12) (10 bl 13) (10 bm 14) (10 bn 15) (10 bo 16) (10 c 17) (10 d 18) (10 e 19) (10 f 20) (10 g 21) (10 h 22) (10 i 23) (10 j 24) (10 k 25) (10 l 26) (10 m 27) (10 n 28) (10 o 29) (10 p 30) (10 q 31) (10 r 32) (10 s 33) (10 t 34) (10 u 35) (10 v 36) (10 w 37) (10 x 38) (10 y 39) (10 z 40) (11 b 1) (11 ba 2) (11 bb 3) (11 bc 4) (11 bd 5) (11 be 6) (11 bf 7) (11 bg 8) (11 bh 9) (11 bi 10) (11 bj 11) (11 bk 12) (11 bl 13) (11 bm 14) (11 bn 15) (11 bo 16) (11 c 17) (11 d 18) (11 e 19) (11 f 20) (11 g 21) (11 h 22) (11 i 23) (11 j 24) (11 k 25) (11 l 26) (11 m 27) (11 n 28) (11 o 29) (11 p 30) (11 q 31) (11 r 32) (11 s 33) (11 t 34) (11 u 35) (11 v 36) (11 w 37) (11 x 38) (11 y 39) (11 z 40) (12 b 1) (12 ba 2) (12 bb 3) (12 bc 4) (12 bd 5) (12 be 6) (12 bf 7) (12 bg 8) (12 bh 9) (12 bi 10) (12 bj 11) (12 bk 12) (12 bl 13) (12 bm 14) (12 bn 15) (12 bo 16) (12 c 17) (12 d 18) (12 e 19) (12 f 20) (12 g 21) (12 h 22) (12 i 23) (12 j 24) (12 k 25) (12 l 26) (12 m 27) (12 n 28) (12 o 29) (12 p 30) (12 q 31) (12 r 32) (12 s 33) (12 t 34) (12 u 35) (12 v 36) (12 w 37) (12 x 38) (12 y 39) (12 z 40) (13 b 1) (13 ba 2) (13 bb 3) (13 bc 4) (13 bd 5) (13 be 6) (13 bf 7) (13 bg 8) (13 bh 9) (13 bi 10) (13 bj 11) (13 bk 12) (13 bl 13) (13 bm 14) (13 bn 15) (13 bo 16) (13 c 17) (13 d 18) (13 e 19) (13 f 20) (13 g 21) (13 h 22) (13 i 23) (13 j 24) (13 k 25) (13 l 26) (13 m 27) (13 n 28) (13 o 29) (13 p 30) (13 q 31) (13 r 32) (13 s 33) (13 t 34) (13 u 35) (13 v 36) (13 w 37) (13 x 38) (13 y 39) (13 z 40) (14 b 1) (14 ba 2) (14 bb 3) (14 bc 4) (14 bd 5) (14 be 6) (14 bf 7) (14 bg 8) (14 bh 9) (14 bi 10) (14 bj 11) (14 bk 12) (14 bl 13) (14 bm 14) (14 bn 15) (14 bo 16) (14 c 17) (14 d 18) (14 e 19) (14 f 20) (14 g 21) (14 h 22) (14 i 23) (14 j 24) (14 k 25) (14 l 26) (14 m 27) (14 n 28) (14 o 29) (14 p 30) (14 q 31) (14 r 32) (14 s 33) (14 t 34) (14 u 35) (14 v 36) (14 w 37) (14 x 38) (14 y 39) (14 z 40) (15 b 1) (15 ba 2) (15 bb 3) (15 bc 4) (15 bd 5) (15 be 6) (15 bf 7) (15 bg 8) (15 bh 9) (15 bi 10) (15 bj 11) (15 bk 12) (15 bl 13) (15 bm 14) (15 bn 15) (15 bo 16) (15 c 17) (15 d 18) (15 e 19) (15 f 20) (15 g 21) (15 h 22) (15 i 23) (15 j 24) (15 k 25) (15 l 26) (15 m 27) (15 n 28) (15 o 29) (15 p 30) (15 q 31) (15 r 32) (15 s 33) (15 t 34) (15 u 35) (15 v 36) (15 w 37) (15 x 38) (15 y 39) (15 z 40) (17 b 1) (17 ba 2) (17 bb 3) (17 bc 4) (17 bd 5) (17 be 6) (17 bf 7) (17 bg 8) (17 bh 9) (17 bi 10) (17 bj 11) (17 bk 12) (17 bl 13) (17 bm 14) (17 bn 15) (17 bo 16) (17 c 17) (17 d 18) (17 e 19) (17 f 20) (17 g 21) (17 h 22) (17 i 23) (17 j 24) (17 k 25) (17 l 26) (17 m 27) (17 n 28) (17 o 29) (17 p 30) (17 q 31) (17 r 32) (17 s 33) (17 t 34) (17 u 35) (17 v 36) (17 w 37) (17 x 38) (17 y 39) (17 z 40) (18 b 1) (18 ba 2) (18 bb 3) (18 bc 4) (18 bd 5) (18 be 6) (18 bf 7) (18 bg 8) (18 bh 9) (18 bi 10) (18 bj 11) (18 bk 12) (18 bl 13) (18 bm 14) (18 bn 15) (18 bo 16) (18 c 17) (18 d 18) (18 e 19) (18 f 20) (18 g 21) (18 h 22) (18 i 23) (18 j 24) (18 k 25) (18 l 26) (18 m 27) (18 n 28) (18 o 29) (18 p 30) (18 q 31) (18 r 32) (18 s 33) (18 t 34) (18 u 35) (18 v 36) (18 w 37) (18 x 38) (18 y 39) (18 z 40) (19 b 1) (19 ba 2) (19 bb 3) (19 bc 4) (19 bd 5) (19 be 6) (19 bf 7) (19 bg 8) (19 bh 9) (19 bi 10) (19 bj 11) (19 bk 12) (19 bl 13) (19 bm 14) (19 bn 15) (19 bo 16) (19 c 17) (19 d 18) (19 e 19) (19 f 20) (19 g 21) (19 h 22) (19 i 23) (19 j 24) (19 k 25) (19 l 26) (19 m 27) (19 n 28) (19 o 29) (19 p 30) (19 q 31) (19 r 32) (19 s 33) (19 t 34) (19 u 35) (19 v 36) (19 w 37) (19 x 38) (19 y 39) (19 z 40) (20 b 1) (20 ba 2) (20 bb 3) (20 bc 4) (20 bd 5) (20 be 6) (20 bf 7) (20 bg 8) (20 bh 9) (20 bi 10) (20 bj 11) (20 bk 12) (20 bl 13) (20 bm 14) (20 bn 15) (20 bo 16) (20 c 17) (20 d 18) (20 e 19) (20 f 20) (20 g 21) (20 h 22) (20 i 23) (20 j 24) (20 k 25) (20 l 26) (20 m 27) (20 n 28) (20 o 29) (20 p 30) (20 q 31) (20 r 32) (20 s 33) (20 t 34) (20 u 35) (20 v 36) (20 w 37) (20 x 38) (20 y 39) (20 z 40) (21 b 1) (21 ba 2) (21 bb 3) (21 bc 4) (21 bd 5) (21 be 6) (21 bf 7) (21 bg 8) (21 bh 9) (21 bi 10) (21 bj 11) (21 bk 12) (21 bl 13) (21 bm 14) (21 bn 15) (21 bo 16) (21 c 17) (21 d 18) (21 e 19) (21 f 20) (21 g 21) (21 h 22) (21 i 23) (21 j 24) (21 k 25) (21 l 26) (21 m 27) (21 n 28) (21 o 29) (21 p 30) (21 q 31) (21 r 32) (21 s 33) (21 t 34) (21 u 35) (21 v 36) (21 w 37) (21 x 38) (21 y 39) (21 z 40) (22 b 1) (22 ba 2) (22 bb 3) (22 bc 4) (22 bd 5) (22 be 6) (22 bf 7) (22 bg 8) (22 bh 9) (22 bi 10) (22 bj 11) (22 bk 12) (22 bl 13) (22 bm 14) (22 bn 15) (22 bo 16) (22 c 17) (22 d 18) (22 e 19) (22 f 20) (22 g 21) (22 h 22) (22 i 23) (22 j 24) (22 k 25) (22 l 26) (22 m 27) (22 n 28) (22 o 29) (22 p 30) (22 q 31) (22 r 32) (22 s 33) (22 t 34) (22 u 35) (22 v 36) (22 w 37) (22 x 38) (22 y 39) (22 z 40) (23 b 1) (23 ba 2) (23 bb 3) (23 bc 4) (23 bd 5) (23 be 6) (23 bf 7) (23 bg 8) (23 bh 9) (23 bi 10) (23 bj 11) (23 bk 12) (23 bl 13) (23 bm 14) (23 bn 15) (23 bo 16) (23 c 17) (23 d 18) (23 e 19) (23 f 20) (23 g 21) (23 h 22) (23 i 23) (23 j 24) (23 k 25) (23 l 26) (23 m 27) (23 n 28) (23 o 29) (23 p 30) (23 q 31) (23 r 32) (23 s 33) (23 t 34) (23 u 35) (23 v 36) (23 w 37) (23 x 38) (23 y 39) (23 z 40) (24 b 1) (24 ba 2) (24 bb 3) (24 bc 4) (24 bd 5) (24 be 6) (24 bf 7) (24 bg 8) (24 bh 9) (24 bi 10) (24 bj 11) (24 bk 12) (24 bl 13) (24 bm 14) (24 bn 15) (24 bo 16) (24 c 17) (24 d 18) (24 e 19) (24 f 20) (24 g 21) (24 h 22) (24 i 23) (24 j 24) (24 k 25) (24 l 26) (24 m 27) (24 n 28) (24 o 29) (24 p 30) (24 q 31) (24 r 32) (24 s 33) (24 t 34) (24 u 35) (24 v 36) (24 w 37) (24 x 38) (24 y 39) (24 z 40) (25 b 1) (25 ba 2) (25 bb 3) (25 bc 4) (25 bd 5) (25 be 6) (25 bf 7) (25 bg 8) (25 bh 9) (25 bi 10) (25 bj 11) (25 bk 12) (25 bl 13) (25 bm 14) (25 bn 15) (25 bo 16) (25 c 17) (25 d 18) (25 e 19) (25 f 20) (25 g 21) (25 h 22) (25 i 23) (25 j 24) (25 k 25) (25 l 26) (25 m 27) (25 n 28) (25 o 29) (25 p 30) (25 q 31) (25 r 32) (25 s 33) (25 t 34) (25 u 35) (25 v 36) (25 w 37) (25 x 38) (25 y 39) (25 z 40) (26 b 1) (26 ba 2) (26 bb 3) (26 bc 4) (26 bd 5) (26 be 6) (26 bf 7) (26 bg 8) (26 bh 9) (26 bi 10) (26 bj 11) (26 bk 12) (26 bl 13) (26 bm 14) (26 bn 15) (26 bo 16) (26 c 17) (26 d 18) (26 e 19) (26 f 20) (26 g 21) (26 h 22) (26 i 23) (26 j 24) (26 k 25) (26 l 26) (26 m 27) (26 n 28) (26 o 29) (26 p 30) (26 q 31) (26 r 32) (26 s 33) (26 t 34) (26 u 35) (26 v 36) (26 w 37) (26 x 38) (26 y 39) (26 z 40) (27 b 1) (27 ba 2) (27 bb 3) (27 bc 4) (27 bd 5) (27 be 6) (27 bf 7) (27 bg 8) (27 bh 9) (27 bi 10) (27 bj 11) (27 bk 12) (27 bl 13) (27 bm 14) (27 bn 15) (27 bo 16) (27 c 17) (27 d 18) (27 e 19) (27 f 20) (27 g 21) (27 h 22) (27 i 23) (27 j 24) (27 k 25) (27 l 26) (27 m 27) (27 n 28) (27 o 29) (27 p 30) (27 q 31) (27 r 32) (27 s 33) (27 t 34) (27 u 35) (27 v 36) (27 w 37) (27 x 38) (27 y 39) (27 z 40) (28 b 1) (28 ba 2) (28 bb 3) (28 bc 4) (28 bd 5) (28 be 6) (28 bf 7) (28 bg 8) (28 bh 9) (28 bi 10) (28 bj 11) (28 bk 12) (28 bl 13) (28 bm 14) (28 bn 15) (28 bo 16) (28 c 17) (28 d 18) (28 e 19) (28 f 20) (28 g 21) (28 h 22) (28 i 23) (28 j 24) (28 k 25) (28 l 26) (28 m 27) (28 n 28) (28 o 29) (28 p 30) (28 q 31) (28 r 32) (28 s 33) (28 t 34) (28 u 35) (28 v 36) (28 w 37) (28 x 38) (28 y 39) (28 z 40) (29 b 1) (29 ba 2) (29 bb 3) (29 bc 4) (29 bd 5) (29 be 6) (29 bf 7) (29 bg 8) (29 bh 9) (29 bi 10) (29 bj 11) (29 bk 12) (29 bl 13) (29 bm 14) (29 bn 15) (29 bo 16) (29 c 17) (29 d 18) (29 e 19) (29 f 20) (29 g 21) (29 h 22) (29 i 23) (29 j 24) (29 k 25) (29 l 26) (29 m 27) (29 n 28) (29 o 29) (29 p 30) (29 q 31) (29 r 32) (29 s 33) (29 t 34) (29 u 35) (29 v 36) (29 w 37) (29 x 38) (29 y 39) (29 z 40) (30 b 1) (30 ba 2) (30 bb 3) (30 bc 4) (30 bd 5) (30 be 6) (30 bf 7) (30 bg 8) (30 bh 9) (30 bi 10) (30 bj 11) (30 bk 12) (30 bl 13) (30 bm 14) (30 bn 15) (30 bo 16) (30 c 17) (30 d 18) (30 e 19) (30 f 20) (30 g 21) (30 h 22) (30 i 23) (30 j 24) (30 k 25) (30 l 26) (30 m 27) (30 n 28) (30 o 29) (30 p 30) (30 q 31) (30 r 32) (30 s 33) (30 t 34) (30 u 35) (30 v 36) (30 w 37) (30 x 38) (30 y 39) (30 z 40) (31 b 1) (31 ba 2) (31 bb 3) (31 bc 4) (31 bd 5) (31 be 6) (31 bf 7) (31 bg 8) (31 bh 9) (31 bi 10) (31 bj 11) (31 bk 12) (31 bl 13) (31 bm 14) (31 bn 15) (31 bo 16) (31 c 17) (31 d 18) (31 e 19) (31 f 20) (31 g 21) (31 h 22) (31 i 23) (31 j 24) (31 k 25) (31 l 26) (31 m 27) (31 n 28) (31 o 29) (31 p 30) (31 q 31) (31 r 32) (31 s 33) (31 t 34) (31 u 35) (31 v 36) (31 w 37) (31 x 38) (31 y 39) (31 z 40) (32 b 1) (32 ba 2) (32 bb 3) (32 bc 4) (32 bd 5) (32 be 6) (32 bf 7) (32 bg 8) (32 bh 9) (32 bi 10) (32 bj 11) (32 bk 12) (32 bl 13) (32 bm 14) (32 bn 15) (32 bo 16) (32 c 17) (32 d 18) (32 e 19) (32 f 20) (32 g 21) (32 h 22) (32 i 23) (32 j 24) (32 k 25) (32 l 26) (32 m 27) (32 n 28) (32 o 29) (32 p 30) (32 q 31) (32 r 32) (32 s 33) (32 t 34) (32 u 35) (32 v 36) (32 w 37) (32 x 38) (32 y 39) (32 z 40) (33 b 1) (33 ba 2) (33 bb 3) (33 bc 4) (33 bd 5) (33 be 6) (33 bf 7) (33 bg 8) (33 bh 9) (33 bi 10) (33 bj 11) (33 bk 12) (33 bl 13) (33 bm 14) (33 bn 15) (33 bo 16) (33 c 17) (33 d 18) (33 e 19) (33 f 20) (33 g 21) (33 h 22) (33 i 23) (33 j 24) (33 k 25) (33 l 26) (33 m 27) (33 n 28) (33 o 29) (33 p 30) (33 q 31) (33 r 32) (33 s 33) (33 t 34) (33 u 35) (33 v 36) (33 w 37) (33 x 38) (33 y 39) (33 z 40) (34 b 1) (34 ba 2) (34 bb 3) (34 bc 4) (34 bd 5) (34 be 6) (34 bf 7) (34 bg 8) (34 bh 9) (34 bi 10) (34 bj 11) (34 bk 12) (34 bl 13) (34 bm 14) (34 bn 15) (34 bo 16) (34 c 17) (34 d 18) (34 e 19) (34 f 20) (34 g 21) (34 h 22) (34 i 23) (34 j 24) (34 k 25) (34 l 26) (34 m 27) (34 n 28) (34 o 29) (34 p 30) (34 q 31) (34 r 32) (34 s 33) (34 t 34) (34 u 35) (34 v 36) (34 w 37) (34 x 38) (34 y 39) (34 z 40) (35 b 1) (35 ba 2) (35 bb 3) (35 bc 4) (35 bd 5) (35 be 6) (35 bf 7) (35 bg 8) (35 bh 9) (35 bi 10) (35 bj 11) (35 bk 12) (35 bl 13) (35 bm 14) (35 bn 15) (35 bo 16) (35 c 17) (35 d 18) (35 e 19) (35 f 20) (35 g 21) (35 h 22) (35 i 23) (35 j 24) (35 k 25) (35 l 26) (35 m 27) (35 n 28) (35 o 29) (35 p 30) (35 q 31) (35 r 32) (35 s 33) (35 t 34) (35 u 35) (35 v 36) (35 w 37) (35 x 38) (35 y 39) (35 z 40) (36 b 1) (36 ba 2) (36 bb 3) (36 bc 4) (36 bd 5) (36 be 6) (36 bf 7) (36 bg 8) (36 bh 9) (36 bi 10) (36 bj 11) (36 bk 12) (36 bl 13) (36 bm 14) (36 bn 15) (36 bo 16) (36 c 17) (36 d 18) (36 e 19) (36 f 20) (36 g 21) (36 h 22) (36 i 23) (36 j 24) (36 k 25) (36 l 26) (36 m 27) (36 n 28) (36 o 29) (36 p 30) (36 q 31) (36 r 32) (36 s 33) (36 t 34) (36 u 35) (36 v 36) (36 w 37) (36 x 38) (36 y 39) (36 z 40) (37 b 1) (37 ba 2) (37 bb 3) (37 bc 4) (37 bd 5) (37 be 6) (37 bf 7) (37 bg 8) (37 bh 9) (37 bi 10) (37 bj 11) (37 bk 12) (37 bl 13) (37 bm 14) (37 bn 15) (37 bo 16) (37 c 17) (37 d 18) (37 e 19) (37 f 20) (37 g 21) (37 h 22) (37 i 23) (37 j 24) (37 k 25) (37 l 26) (37 m 27) (37 n 28) (37 o 29) (37 p 30) (37 q 31) (37 r 32) (37 s 33) (37 t 34) (37 u 35) (37 v 36) (37 w 37) (37 x 38) (37 y 39) (37 z 40) (38 b 1) (38 ba 2) (38 bb 3) (38 bc 4) (38 bd 5) (38 be 6) (38 bf 7) (38 bg 8) (38 bh 9) (38 bi 10) (38 bj 11) (38 bk 12) (38 bl 13) (38 bm 14) (38 bn 15) (38 bo 16) (38 c 17) (38 d 18) (38 e 19) (38 f 20) (38 g 21) (38 h 22) (38 i 23) (38 j 24) (38 k 25) (38 l 26) (38 m 27) (38 n 28) (38 o 29) (38 p 30) (38 q 31) (38 r 32) (38 s 33) (38 t 34) (38 u 35) (38 v 36) (38 w 37) (38 x 38) (38 y 39) (38 z 40) (39 b 1) (39 ba 2) (39 bb 3) (39 bc 4) (39 bd 5) (39 be 6) (39 bf 7) (39 bg 8) (39 bh 9) (39 bi 10) (39 bj 11) (39 bk 12) (39 bl 13) (39 bm 14) (39 bn 15) (39 bo 16) (39 c 17) (39 d 18) (39 e 19) (39 f 20) (39 g 21) (39 h 22) (39 i 23) (39 j 24) (39 k 25) (39 l 26) (39 m 27) (39 n 28) (39 o 29) (39 p 30) (39 q 31) (39 r 32) (39 s 33) (39 t 34) (39 u 35) (39 v 36) (39 w 37) (39 x 38) (39 y 39) (39 z 40) (40 b 1) (40 ba 2) (40 bb 3) (40 bc 4) (40 bd 5) (40 be 6) (40 bf 7) (40 bg 8) (40 bh 9) (40 bi 10) (40 bj 11) (40 bk 12) (40 bl 13) (40 bm 14) (40 bn 15) (40 bo 16) (40 c 17) (40 d 18) (40 e 19) (40 f 20) (40 g 21) (40 h 22) (40 i 23) (40 j 24) (40 k 25) (40 l 26) (40 m 27) (40 n 28) (40 o 29) (40 p 30) (40 q 31) (40 r 32) (40 s 33) (40 t 34) (40 u 35) (40 v 36) (40 w 37) (40 x 38) (40 y 39) (40 z 40)) #((a  . bj) (altGlyphDef  . z) (animate  . e) (animateColor  . h) (animateMotion  . g) (animateTransform  . i) (circle  . t) (clipPath  . bf) (color-profile  . bb) (cursor  . bi) (defs  . l) (desc  . b) (ellipse  . v) (filter  . bh) (font  . bm) (font-face  . bn) (g  . k) (image  . p) (line  . u) (linearGradient  . bc) (marker  . ba) (mask  . bg) (metadata  . d) (path  . r) (pattern  . be) (polygon  . x) (polyline  . w) (radialGradient  . bd) (rect  . s) (script  . bl) (set  . f) (style  . q) (svg  . j) (switch  . o) (symbol  . m) (terminator$$  . bo) (text  . y) (title  . c) (use  . n) (view  . bk)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "missing-glyph"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "missing-glyph")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "missing-glyph"))))

(define (hkern-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("k" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("u1" "CDATA" "#IMPLIED") ("g1" "CDATA" "#IMPLIED") ("u2" "CDATA" "#IMPLIED") ("g2" "CDATA" "#IMPLIED")))) (req-n 1)) (xml-check-for-empty-contents! contents "hkern") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "hkern"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "hkern"))))

(define (vkern-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("k" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("u1" "CDATA" "#IMPLIED") ("g1" "CDATA" "#IMPLIED") ("u2" "CDATA" "#IMPLIED") ("g2" "CDATA" "#IMPLIED")))) (req-n 1)) (xml-check-for-empty-contents! contents "vkern") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "vkern"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "vkern"))))

(define (font-face-src-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED")))) (req-n 0) (dfa (quote (finite-state-automaton 0 (5) #((0 b 1) (0 c 2) (1 b 3) (1 c 4) (1 d 5) (2 b 3) (2 c 4) (2 d 5) (3 b 3) (3 c 4) (3 d 5) (4 b 3) (4 c 4) (4 d 5)) #((font-face-name  . c) (font-face-uri  . b) (terminator$$  . d)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "font-face-src"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "font-face-src")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "font-face-src"))))

(define (font-face-uri-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED")))) (req-n 1) (dfa (quote (finite-state-automaton 0 (2) #((0 b 1) (0 c 2) (1 b 1) (1 c 2)) #((font-face-format  . b) (terminator$$  . c)))))) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "font-face-uri"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "font-face-uri")) (if xml-validate-contents? (validate-contents-by-dfa! contents dfa "font-face-uri"))))

(define (font-face-format-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("string" "CDATA" "#IMPLIED")))) (req-n 0)) (xml-check-for-empty-contents! contents "font-face-format") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "font-face-format"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "font-face-format"))))

(define (font-face-name-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("name" "CDATA" "#IMPLIED")))) (req-n 0)) (xml-check-for-empty-contents! contents "font-face-name") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "font-face-name"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "font-face-name"))))

(define (definition-src-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("xlink:href" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("xmlns:xlink" "CDATA" "http://www.w3.org/1999/xlink" "#FIXED") ("xlink:type" ("simple") "simple" "#FIXED") ("xlink:role" "CDATA" "#IMPLIED") ("xlink:arcrole" "CDATA" "#IMPLIED") ("xlink:title" "CDATA" "#IMPLIED") ("xlink:show" ("other") "other") ("xlink:actuate" ("onLoad") "onLoad" "#FIXED")))) (req-n 1)) (xml-check-for-empty-contents! contents "definition-src") (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "definition-src"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "definition-src"))))

(define (foreignObject-svg11-laml-validate! el-name attributes contents overlap-check?) (let ((attributes-of-elements (quote (("width" "CDATA" "#REQUIRED") ("height" "CDATA" "#REQUIRED") ("id" "ID" "#IMPLIED") ("xml:base" "CDATA" "#IMPLIED") ("xml:lang" "NMTOKEN" "#IMPLIED") ("xml:space" ("default" "preserve") "#IMPLIED") ("requiredFeatures" "CDATA" "#IMPLIED") ("requiredExtensions" "CDATA" "#IMPLIED") ("systemLanguage" "CDATA" "#IMPLIED") ("style" "CDATA" "#IMPLIED") ("class" "CDATA" "#IMPLIED") ("enable-background" "CDATA" "#IMPLIED") ("clip" "CDATA" "#IMPLIED") ("overflow" ("visible" "hidden" "scroll" "auto" "inherit") "#IMPLIED") ("writing-mode" ("lr-tb" "rl-tb" "tb-rl" "lr" "rl" "tb" "inherit") "#IMPLIED") ("alignment-baseline" ("auto" "baseline" "before-edge" "text-before-edge" "middle" "central" "after-edge" "text-after-edge" "ideographic" "alphabetic" "hanging" "mathematical" "inherit") "#IMPLIED") ("baseline-shift" "CDATA" "#IMPLIED") ("direction" ("ltr" "rtl" "inherit") "#IMPLIED") ("dominant-baseline" ("auto" "use-script" "no-change" "reset-size" "ideographic" "alphabetic" "hanging" "mathematical" "central" "middle" "text-after-edge" "text-before-edge" "inherit") "#IMPLIED") ("glyph-orientation-horizontal" "CDATA" "#IMPLIED") ("glyph-orientation-vertical" "CDATA" "#IMPLIED") ("kerning" "CDATA" "#IMPLIED") ("letter-spacing" "CDATA" "#IMPLIED") ("text-anchor" ("start" "middle" "end" "inherit") "#IMPLIED") ("text-decoration" "CDATA" "#IMPLIED") ("unicode-bidi" ("normal" "embed" "bidi-override" "inherit") "#IMPLIED") ("word-spacing" "CDATA" "#IMPLIED") ("font-family" "CDATA" "#IMPLIED") ("font-size" "CDATA" "#IMPLIED") ("font-size-adjust" "CDATA" "#IMPLIED") ("font-stretch" ("normal" "wider" "narrower" "ultra-condensed" "extra-condensed" "condensed" "semi-condensed" "semi-expanded" "expanded" "extra-expanded" "ultra-expanded" "inherit") "#IMPLIED") ("font-style" ("normal" "italic" "oblique" "inherit") "#IMPLIED") ("font-variant" ("normal" "small-caps" "inherit") "#IMPLIED") ("font-weight" ("normal" "bold" "bolder" "lighter" "100" "200" "300" "400" "500" "600" "700" "800" "900" "inherit") "#IMPLIED") ("fill" "CDATA" "#IMPLIED") ("fill-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("stroke" "CDATA" "#IMPLIED") ("stroke-dasharray" "CDATA" "#IMPLIED") ("stroke-dashoffset" "CDATA" "#IMPLIED") ("stroke-linecap" ("butt" "round" "square" "inherit") "#IMPLIED") ("stroke-linejoin" ("miter" "round" "bevel" "inherit") "#IMPLIED") ("stroke-miterlimit" "CDATA" "#IMPLIED") ("stroke-width" "CDATA" "#IMPLIED") ("color" "CDATA" "#IMPLIED") ("color-interpolation" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("color-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("opacity" "CDATA" "#IMPLIED") ("fill-opacity" "CDATA" "#IMPLIED") ("stroke-opacity" "CDATA" "#IMPLIED") ("display" ("inline" "block" "list-item" "run-in" "compact" "marker" "table" "inline-table" "table-row-group" "table-header-group" "table-footer-group" "table-row" "table-column-group" "table-column" "table-cell" "table-caption" "none" "inherit") "#IMPLIED") ("image-rendering" ("auto" "optimizeSpeed" "optimizeQuality" "inherit") "#IMPLIED") ("pointer-events" ("visiblePainted" "visibleFill" "visibleStroke" "visible" "painted" "fill" "stroke" "all" "none" "inherit") "#IMPLIED") ("shape-rendering" ("auto" "optimizeSpeed" "crispEdges" "geometricPrecision" "inherit") "#IMPLIED") ("text-rendering" ("auto" "optimizeSpeed" "optimizeLegibility" "geometricPrecision" "inherit") "#IMPLIED") ("visibility" ("visible" "hidden" "inherit") "#IMPLIED") ("marker-start" "CDATA" "#IMPLIED") ("marker-mid" "CDATA" "#IMPLIED") ("marker-end" "CDATA" "#IMPLIED") ("color-profile" "CDATA" "#IMPLIED") ("stop-color" "CDATA" "#IMPLIED") ("stop-opacity" "CDATA" "#IMPLIED") ("clip-path" "CDATA" "#IMPLIED") ("clip-rule" ("nonzero" "evenodd" "inherit") "#IMPLIED") ("mask" "CDATA" "#IMPLIED") ("filter" "CDATA" "#IMPLIED") ("color-interpolation-filters" ("auto" "sRGB" "linearRGB" "inherit") "#IMPLIED") ("cursor" "CDATA" "#IMPLIED") ("flood-color" "CDATA" "#IMPLIED") ("flood-opacity" "CDATA" "#IMPLIED") ("lighting-color" "CDATA" "#IMPLIED") ("onfocusin" "CDATA" "#IMPLIED") ("onfocusout" "CDATA" "#IMPLIED") ("onactivate" "CDATA" "#IMPLIED") ("onclick" "CDATA" "#IMPLIED") ("onmousedown" "CDATA" "#IMPLIED") ("onmouseup" "CDATA" "#IMPLIED") ("onmouseover" "CDATA" "#IMPLIED") ("onmousemove" "CDATA" "#IMPLIED") ("onmouseout" "CDATA" "#IMPLIED") ("onload" "CDATA" "#IMPLIED") ("externalResourcesRequired" ("false" "true") "#IMPLIED") ("x" "CDATA" "#IMPLIED") ("y" "CDATA" "#IMPLIED") ("transform" "CDATA" "#IMPLIED")))) (req-n 2)) (if (and overlap-check? xml-check-language-overlap?) (check-language-overlap! (as-symbol "foreignObject"))) (if xml-check-attributes? (xml-check-attributes! attributes attributes-of-elements req-n "foreignObject")) (if xml-validate-contents? (validate-as-pcdata! contents "foreignObject"))))

;;; Make and put XML mirror functions in the temporary language map:
(set! temp-mirror-function (generate-xml-mirror-function svg-svg11-laml-validate! "svg" (quote (xmlns "http://www.w3.org/2000/svg" xmlns:xlink "http://www.w3.org/1999/xlink" preserveAspectRatio "xMidYMid meet" zoomAndPan "magnify" version "1.1" contentScriptType "text/ecmascript" contentStyleType "text/css")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "svg" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function svg-svg11-laml-validate! "svg" (quote (xmlns "http://www.w3.org/2000/svg" xmlns:xlink "http://www.w3.org/1999/xlink" preserveAspectRatio "xMidYMid meet" zoomAndPan "magnify" version "1.1" contentScriptType "text/ecmascript" contentStyleType "text/css")) (quote double) (quote svg11) #t #f))
(define svg temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function g-svg11-laml-validate! "g" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "g" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function g-svg11-laml-validate! "g" (quote ()) (quote double) (quote svg11) #t #f))
(define g temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function defs-svg11-laml-validate! "defs" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "defs" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function defs-svg11-laml-validate! "defs" (quote ()) (quote double) (quote svg11) #t #f))
(define defs temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function desc-svg11-laml-validate! "desc" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "desc" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function desc-svg11-laml-validate! "desc" (quote ()) (quote double) (quote svg11) #t #f))
(define desc temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function title-svg11-laml-validate! "title" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "title" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function title-svg11-laml-validate! "title" (quote ()) (quote double) (quote svg11) #t #f))
(define title temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function metadata-svg11-laml-validate! "metadata" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "metadata" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function metadata-svg11-laml-validate! "metadata" (quote ()) (quote double) (quote svg11) #t #f))
(define metadata temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function symbol-svg11-laml-validate! "symbol" (quote (preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "symbol" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function symbol-svg11-laml-validate! "symbol" (quote (preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #t #f))
(define symbol temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function use-svg11-laml-validate! "use" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "embed" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "use" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function use-svg11-laml-validate! "use" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "embed" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define use temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function switch-svg11-laml-validate! "switch" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "switch" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function switch-svg11-laml-validate! "switch" (quote ()) (quote double) (quote svg11) #t #f))
(define switch temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function image-svg11-laml-validate! "image" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "embed" xlink:actuate "onLoad" preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "image" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function image-svg11-laml-validate! "image" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "embed" xlink:actuate "onLoad" preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #t #f))
(define image temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function style-svg11-laml-validate! "style" (quote (xml:space "preserve")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "style" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function style-svg11-laml-validate! "style" (quote (xml:space "preserve")) (quote double) (quote svg11) #t #f))
(define style temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function path-svg11-laml-validate! "path" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "path" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function path-svg11-laml-validate! "path" (quote ()) (quote double) (quote svg11) #t #f))
(define path temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function rect-svg11-laml-validate! "rect" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "rect" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function rect-svg11-laml-validate! "rect" (quote ()) (quote double) (quote svg11) #t #f))
(define rect temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function circle-svg11-laml-validate! "circle" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "circle" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function circle-svg11-laml-validate! "circle" (quote ()) (quote double) (quote svg11) #t #f))
(define circle temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function line-svg11-laml-validate! "line" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "line" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function line-svg11-laml-validate! "line" (quote ()) (quote double) (quote svg11) #t #f))
(define line temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function ellipse-svg11-laml-validate! "ellipse" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "ellipse" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function ellipse-svg11-laml-validate! "ellipse" (quote ()) (quote double) (quote svg11) #t #f))
(define ellipse temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function polyline-svg11-laml-validate! "polyline" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "polyline" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function polyline-svg11-laml-validate! "polyline" (quote ()) (quote double) (quote svg11) #t #f))
(define polyline temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function polygon-svg11-laml-validate! "polygon" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "polygon" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function polygon-svg11-laml-validate! "polygon" (quote ()) (quote double) (quote svg11) #t #f))
(define polygon temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function text-svg11-laml-validate! "text" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "text" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function text-svg11-laml-validate! "text" (quote ()) (quote double) (quote svg11) #t #f))
(define text temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function tspan-svg11-laml-validate! "tspan" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "tspan" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function tspan-svg11-laml-validate! "tspan" (quote ()) (quote double) (quote svg11) #t #f))
(define tspan temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function tref-svg11-laml-validate! "tref" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "tref" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function tref-svg11-laml-validate! "tref" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define tref temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function textPath-svg11-laml-validate! "textPath" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "textPath" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function textPath-svg11-laml-validate! "textPath" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define textPath temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function altGlyph-svg11-laml-validate! "altGlyph" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "altGlyph" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function altGlyph-svg11-laml-validate! "altGlyph" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define altGlyph temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function altGlyphDef-svg11-laml-validate! "altGlyphDef" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "altGlyphDef" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function altGlyphDef-svg11-laml-validate! "altGlyphDef" (quote ()) (quote double) (quote svg11) #t #f))
(define altGlyphDef temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function altGlyphItem-svg11-laml-validate! "altGlyphItem" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "altGlyphItem" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function altGlyphItem-svg11-laml-validate! "altGlyphItem" (quote ()) (quote double) (quote svg11) #t #f))
(define altGlyphItem temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function glyphRef-svg11-laml-validate! "glyphRef" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote single) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "glyphRef" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function glyphRef-svg11-laml-validate! "glyphRef" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote single) (quote svg11) #t #f))
(define glyphRef temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function marker-svg11-laml-validate! "marker" (quote (preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "marker" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function marker-svg11-laml-validate! "marker" (quote (preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #t #f))
(define marker temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function color-profile-svg11-laml-validate! "color-profile" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" rendering-intent "auto")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "color-profile" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function color-profile-svg11-laml-validate! "color-profile" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" rendering-intent "auto")) (quote double) (quote svg11) #t #f))
(define color-profile temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function linearGradient-svg11-laml-validate! "linearGradient" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "linearGradient" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function linearGradient-svg11-laml-validate! "linearGradient" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define linearGradient temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function radialGradient-svg11-laml-validate! "radialGradient" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "radialGradient" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function radialGradient-svg11-laml-validate! "radialGradient" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define radialGradient temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function stop-svg11-laml-validate! "stop" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "stop" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function stop-svg11-laml-validate! "stop" (quote ()) (quote double) (quote svg11) #t #f))
(define stop temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function pattern-svg11-laml-validate! "pattern" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "pattern" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function pattern-svg11-laml-validate! "pattern" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #t #f))
(define pattern temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function clipPath-svg11-laml-validate! "clipPath" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "clipPath" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function clipPath-svg11-laml-validate! "clipPath" (quote ()) (quote double) (quote svg11) #t #f))
(define clipPath temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function mask-svg11-laml-validate! "mask" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "mask" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function mask-svg11-laml-validate! "mask" (quote ()) (quote double) (quote svg11) #t #f))
(define mask temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function filter-svg11-laml-validate! "filter" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "filter" temp-mirror-function))
; No mirror of filter defined due to name clash with reversed Scheme name.

(set! temp-mirror-function (generate-xml-mirror-function feBlend-svg11-laml-validate! "feBlend" (quote (mode "normal")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feBlend" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feBlend-svg11-laml-validate! "feBlend" (quote (mode "normal")) (quote double) (quote svg11) #t #f))
(define feBlend temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feColorMatrix-svg11-laml-validate! "feColorMatrix" (quote (type "matrix")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feColorMatrix" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feColorMatrix-svg11-laml-validate! "feColorMatrix" (quote (type "matrix")) (quote double) (quote svg11) #t #f))
(define feColorMatrix temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feComponentTransfer-svg11-laml-validate! "feComponentTransfer" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feComponentTransfer" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feComponentTransfer-svg11-laml-validate! "feComponentTransfer" (quote ()) (quote double) (quote svg11) #t #f))
(define feComponentTransfer temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feComposite-svg11-laml-validate! "feComposite" (quote (operator "over")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feComposite" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feComposite-svg11-laml-validate! "feComposite" (quote (operator "over")) (quote double) (quote svg11) #t #f))
(define feComposite temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feConvolveMatrix-svg11-laml-validate! "feConvolveMatrix" (quote (edgeMode "duplicate")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feConvolveMatrix" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feConvolveMatrix-svg11-laml-validate! "feConvolveMatrix" (quote (edgeMode "duplicate")) (quote double) (quote svg11) #t #f))
(define feConvolveMatrix temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feDiffuseLighting-svg11-laml-validate! "feDiffuseLighting" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feDiffuseLighting" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feDiffuseLighting-svg11-laml-validate! "feDiffuseLighting" (quote ()) (quote double) (quote svg11) #t #f))
(define feDiffuseLighting temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feDisplacementMap-svg11-laml-validate! "feDisplacementMap" (quote (xChannelSelector "A" yChannelSelector "A")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feDisplacementMap" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feDisplacementMap-svg11-laml-validate! "feDisplacementMap" (quote (xChannelSelector "A" yChannelSelector "A")) (quote double) (quote svg11) #t #f))
(define feDisplacementMap temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feFlood-svg11-laml-validate! "feFlood" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feFlood" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feFlood-svg11-laml-validate! "feFlood" (quote ()) (quote double) (quote svg11) #t #f))
(define feFlood temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feGaussianBlur-svg11-laml-validate! "feGaussianBlur" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feGaussianBlur" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feGaussianBlur-svg11-laml-validate! "feGaussianBlur" (quote ()) (quote double) (quote svg11) #t #f))
(define feGaussianBlur temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feImage-svg11-laml-validate! "feImage" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "embed" xlink:actuate "onLoad" preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feImage" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feImage-svg11-laml-validate! "feImage" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "embed" xlink:actuate "onLoad" preserveAspectRatio "xMidYMid meet")) (quote double) (quote svg11) #t #f))
(define feImage temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feMerge-svg11-laml-validate! "feMerge" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feMerge" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feMerge-svg11-laml-validate! "feMerge" (quote ()) (quote double) (quote svg11) #t #f))
(define feMerge temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feMergeNode-svg11-laml-validate! "feMergeNode" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feMergeNode" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feMergeNode-svg11-laml-validate! "feMergeNode" (quote ()) (quote double) (quote svg11) #t #f))
(define feMergeNode temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feMorphology-svg11-laml-validate! "feMorphology" (quote (operator "erode")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feMorphology" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feMorphology-svg11-laml-validate! "feMorphology" (quote (operator "erode")) (quote double) (quote svg11) #t #f))
(define feMorphology temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feOffset-svg11-laml-validate! "feOffset" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feOffset" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feOffset-svg11-laml-validate! "feOffset" (quote ()) (quote double) (quote svg11) #t #f))
(define feOffset temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feSpecularLighting-svg11-laml-validate! "feSpecularLighting" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feSpecularLighting" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feSpecularLighting-svg11-laml-validate! "feSpecularLighting" (quote ()) (quote double) (quote svg11) #t #f))
(define feSpecularLighting temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feTile-svg11-laml-validate! "feTile" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feTile" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feTile-svg11-laml-validate! "feTile" (quote ()) (quote double) (quote svg11) #t #f))
(define feTile temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feTurbulence-svg11-laml-validate! "feTurbulence" (quote (stitchTiles "noStitch" type "turbulence")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feTurbulence" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feTurbulence-svg11-laml-validate! "feTurbulence" (quote (stitchTiles "noStitch" type "turbulence")) (quote double) (quote svg11) #t #f))
(define feTurbulence temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feDistantLight-svg11-laml-validate! "feDistantLight" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feDistantLight" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feDistantLight-svg11-laml-validate! "feDistantLight" (quote ()) (quote double) (quote svg11) #t #f))
(define feDistantLight temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function fePointLight-svg11-laml-validate! "fePointLight" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "fePointLight" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function fePointLight-svg11-laml-validate! "fePointLight" (quote ()) (quote double) (quote svg11) #t #f))
(define fePointLight temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feSpotLight-svg11-laml-validate! "feSpotLight" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feSpotLight" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feSpotLight-svg11-laml-validate! "feSpotLight" (quote ()) (quote double) (quote svg11) #t #f))
(define feSpotLight temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feFuncR-svg11-laml-validate! "feFuncR" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feFuncR" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feFuncR-svg11-laml-validate! "feFuncR" (quote ()) (quote double) (quote svg11) #t #f))
(define feFuncR temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feFuncG-svg11-laml-validate! "feFuncG" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feFuncG" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feFuncG-svg11-laml-validate! "feFuncG" (quote ()) (quote double) (quote svg11) #t #f))
(define feFuncG temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feFuncB-svg11-laml-validate! "feFuncB" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feFuncB" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feFuncB-svg11-laml-validate! "feFuncB" (quote ()) (quote double) (quote svg11) #t #f))
(define feFuncB temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function feFuncA-svg11-laml-validate! "feFuncA" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "feFuncA" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function feFuncA-svg11-laml-validate! "feFuncA" (quote ()) (quote double) (quote svg11) #t #f))
(define feFuncA temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function cursor-svg11-laml-validate! "cursor" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "cursor" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function cursor-svg11-laml-validate! "cursor" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define cursor temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function a-svg11-laml-validate! "a" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "replace" xlink:actuate "onRequest")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "a" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function a-svg11-laml-validate! "a" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "replace" xlink:actuate "onRequest")) (quote double) (quote svg11) #t #f))
(define a temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function view-svg11-laml-validate! "view" (quote (preserveAspectRatio "xMidYMid meet" zoomAndPan "magnify")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "view" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function view-svg11-laml-validate! "view" (quote (preserveAspectRatio "xMidYMid meet" zoomAndPan "magnify")) (quote double) (quote svg11) #t #f))
(define view temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function script-svg11-laml-validate! "script" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "script" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function script-svg11-laml-validate! "script" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define script temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function animate-svg11-laml-validate! "animate" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove" calcMode "linear" additive "replace" accumulate "none")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "animate" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function animate-svg11-laml-validate! "animate" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove" calcMode "linear" additive "replace" accumulate "none")) (quote double) (quote svg11) #t #f))
(define animate temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function set-svg11-laml-validate! "set" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "set" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function set-svg11-laml-validate! "set" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove")) (quote double) (quote svg11) #t #f))
(define set temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function animateMotion-svg11-laml-validate! "animateMotion" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove" additive "replace" accumulate "none" calcMode "paced")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "animateMotion" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function animateMotion-svg11-laml-validate! "animateMotion" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove" additive "replace" accumulate "none" calcMode "paced")) (quote double) (quote svg11) #t #f))
(define animateMotion temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function animateColor-svg11-laml-validate! "animateColor" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove" calcMode "linear" additive "replace" accumulate "none")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "animateColor" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function animateColor-svg11-laml-validate! "animateColor" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove" calcMode "linear" additive "replace" accumulate "none")) (quote double) (quote svg11) #t #f))
(define animateColor temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function animateTransform-svg11-laml-validate! "animateTransform" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove" calcMode "linear" additive "replace" accumulate "none" type "translate")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "animateTransform" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function animateTransform-svg11-laml-validate! "animateTransform" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad" restart "always" fill "remove" calcMode "linear" additive "replace" accumulate "none" type "translate")) (quote double) (quote svg11) #t #f))
(define animateTransform temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function mpath-svg11-laml-validate! "mpath" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "mpath" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function mpath-svg11-laml-validate! "mpath" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define mpath temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function font-svg11-laml-validate! "font" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "font" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function font-svg11-laml-validate! "font" (quote ()) (quote double) (quote svg11) #t #f))
(define font temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function font-face-svg11-laml-validate! "font-face" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "font-face" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function font-face-svg11-laml-validate! "font-face" (quote ()) (quote double) (quote svg11) #t #f))
(define font-face temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function glyph-svg11-laml-validate! "glyph" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "glyph" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function glyph-svg11-laml-validate! "glyph" (quote ()) (quote double) (quote svg11) #t #f))
(define glyph temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function missing-glyph-svg11-laml-validate! "missing-glyph" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "missing-glyph" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function missing-glyph-svg11-laml-validate! "missing-glyph" (quote ()) (quote double) (quote svg11) #t #f))
(define missing-glyph temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function hkern-svg11-laml-validate! "hkern" (quote ()) (quote single) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "hkern" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function hkern-svg11-laml-validate! "hkern" (quote ()) (quote single) (quote svg11) #t #f))
(define hkern temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function vkern-svg11-laml-validate! "vkern" (quote ()) (quote single) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "vkern" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function vkern-svg11-laml-validate! "vkern" (quote ()) (quote single) (quote svg11) #t #f))
(define vkern temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function font-face-src-svg11-laml-validate! "font-face-src" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "font-face-src" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function font-face-src-svg11-laml-validate! "font-face-src" (quote ()) (quote double) (quote svg11) #t #f))
(define font-face-src temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function font-face-uri-svg11-laml-validate! "font-face-uri" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "font-face-uri" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function font-face-uri-svg11-laml-validate! "font-face-uri" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote double) (quote svg11) #t #f))
(define font-face-uri temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function font-face-format-svg11-laml-validate! "font-face-format" (quote ()) (quote single) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "font-face-format" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function font-face-format-svg11-laml-validate! "font-face-format" (quote ()) (quote single) (quote svg11) #t #f))
(define font-face-format temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function font-face-name-svg11-laml-validate! "font-face-name" (quote ()) (quote single) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "font-face-name" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function font-face-name-svg11-laml-validate! "font-face-name" (quote ()) (quote single) (quote svg11) #t #f))
(define font-face-name temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function definition-src-svg11-laml-validate! "definition-src" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote single) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "definition-src" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function definition-src-svg11-laml-validate! "definition-src" (quote (xmlns:xlink "http://www.w3.org/1999/xlink" xlink:type "simple" xlink:show "other" xlink:actuate "onLoad")) (quote single) (quote svg11) #t #f))
(define definition-src temp-mirror-function)

(set! temp-mirror-function (generate-xml-mirror-function foreignObject-svg11-laml-validate! "foreignObject" (quote ()) (quote double) (quote svg11) #f #f))
(set! temp-language-map (put-mirror-function temp-language-map "foreignObject" temp-mirror-function))
(set! temp-mirror-function (generate-xml-mirror-function foreignObject-svg11-laml-validate! "foreignObject" (quote ()) (quote double) (quote svg11) #t #f))
(define foreignObject temp-mirror-function)

; Register the name of the language:
(register-xml-in-laml-language (quote svg11) temp-language-map)

; Define the language variable
(define svg11 (activator-via-language-map (quote svg11)))

; Register the XML navigator of the language:
(register-xml-in-laml-navigator (quote svg11) (quote (xml-navigator #((a #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (altGlyph #(altGlyph) #(alignment-baseline baseline-shift class clip-path clip-rule color color-interpolation color-rendering cursor direction display dominant-baseline dx dy externalResourcesRequired fill fill-opacity fill-rule filter font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format glyph-orientation-horizontal glyph-orientation-vertical glyphRef id image-rendering kerning letter-spacing mask onactivate onclick onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup opacity pointer-events requiredExtensions requiredFeatures rotate shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-anchor text-decoration text-rendering unicode-bidi visibility word-spacing x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (altGlyphDef #(altGlyphDef altGlyphItem glyphRef) #(class dx dy font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format glyphRef id style x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (altGlyphItem #(altGlyphItem glyphRef) #(class dx dy font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format glyphRef id style x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (animate #(animate desc metadata title) #(accumulate additive attributeName attributeType begin by calcMode class dur end externalResourcesRequired fill from id keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart style systemLanguage to values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (animateColor #(animateColor desc metadata title) #(accumulate additive attributeName attributeType begin by calcMode class dur end externalResourcesRequired fill from id keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart style systemLanguage to values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (animateMotion #(animateMotion desc metadata mpath title) #(accumulate additive begin by calcMode class dur end externalResourcesRequired fill from id keyPoints keySplines keyTimes max min onbegin onend onload onrepeat origin path repeatCount repeatDur requiredExtensions requiredFeatures restart rotate style systemLanguage to values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (animateTransform #(animateTransform desc metadata title) #(accumulate additive attributeName attributeType begin by calcMode class dur end externalResourcesRequired fill from id keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart style systemLanguage to type values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (circle #(animate animateColor animateMotion animateTransform circle desc metadata mpath set title) #(accumulate additive attributeName attributeType begin by calcMode class clip-path clip-rule color color-interpolation color-rendering cursor cx cy display dur end externalResourcesRequired fill fill-opacity fill-rule filter from id image-rendering keyPoints keySplines keyTimes mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin path pointer-events r repeatCount repeatDur requiredExtensions requiredFeatures restart rotate shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-rendering to transform type values visibility xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (clipPath #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (color-profile #(color-profile desc metadata title) #(class id local name rendering-intent style xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (cursor #(cursor desc metadata title) #(class externalResourcesRequired id requiredExtensions requiredFeatures style systemLanguage x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (definition-src #(definition-src) #(id xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (defs #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (desc #(desc) #(class id style xml:base xml:lang xml:space)) (ellipse #(animate animateColor animateMotion animateTransform desc ellipse metadata mpath set title) #(accumulate additive attributeName attributeType begin by calcMode class clip-path clip-rule color color-interpolation color-rendering cursor cx cy display dur end externalResourcesRequired fill fill-opacity fill-rule filter from id image-rendering keyPoints keySplines keyTimes mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin path pointer-events repeatCount repeatDur requiredExtensions requiredFeatures restart rotate rx ry shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-rendering to transform type values visibility xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (feBlend #(animate desc feBlend metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id in in2 keySplines keyTimes max min mode onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feColorMatrix #(animate desc feColorMatrix metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id in keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage to type values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feComponentTransfer #(animate desc feComponentTransfer feFuncA feFuncB feFuncG feFuncR metadata set title) #(accumulate additive amplitude attributeName attributeType begin by calcMode class color-interpolation-filters dur end exponent externalResourcesRequired fill from height id in intercept keySplines keyTimes max min offset onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result slope style systemLanguage tableValues to type values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feComposite #(animate desc feComposite metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id in in2 k1 k2 k3 k4 keySplines keyTimes max min onbegin onend onload onrepeat operator repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feConvolveMatrix #(animate desc feConvolveMatrix metadata set title) #(accumulate additive attributeName attributeType begin bias by calcMode class color-interpolation-filters divisor dur edgeMode end externalResourcesRequired fill from height id in kernelMatrix kernelUnitLength keySplines keyTimes max min onbegin onend onload onrepeat order preserveAlpha repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage targetX targetY to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feDiffuseLighting #(animate animateColor desc feDiffuseLighting feDistantLight fePointLight feSpotLight metadata set title) #(accumulate additive attributeName attributeType azimuth begin by calcMode class color color-interpolation color-interpolation-filters color-rendering diffuseConstant dur elevation end externalResourcesRequired fill from height id in kernelUnitLength keySplines keyTimes lighting-color limitingConeAngle max min onbegin onend onload onrepeat pointsAtX pointsAtY pointsAtZ repeatCount repeatDur requiredExtensions requiredFeatures restart result specularExponent style surfaceScale systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y z)) (feDisplacementMap #(animate desc feDisplacementMap metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id in in2 keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result scale style systemLanguage to values width x xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y yChannelSelector)) (feDistantLight #(animate desc feDistantLight metadata set title) #(accumulate additive attributeName attributeType azimuth begin by calcMode class dur elevation end externalResourcesRequired fill from id keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart style systemLanguage to values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (feFlood #(animate animateColor desc feFlood metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color color-interpolation color-interpolation-filters color-rendering dur end externalResourcesRequired fill flood-color flood-opacity from height id in keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feFuncA #(animate desc feFuncA metadata set title) #(accumulate additive amplitude attributeName attributeType begin by calcMode class dur end exponent externalResourcesRequired fill from id intercept keySplines keyTimes max min offset onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart slope style systemLanguage tableValues to type values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (feFuncB #(animate desc feFuncB metadata set title) #(accumulate additive amplitude attributeName attributeType begin by calcMode class dur end exponent externalResourcesRequired fill from id intercept keySplines keyTimes max min offset onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart slope style systemLanguage tableValues to type values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (feFuncG #(animate desc feFuncG metadata set title) #(accumulate additive amplitude attributeName attributeType begin by calcMode class dur end exponent externalResourcesRequired fill from id intercept keySplines keyTimes max min offset onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart slope style systemLanguage tableValues to type values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (feFuncR #(animate desc feFuncR metadata set title) #(accumulate additive amplitude attributeName attributeType begin by calcMode class dur end exponent externalResourcesRequired fill from id intercept keySplines keyTimes max min offset onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart slope style systemLanguage tableValues to type values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (feGaussianBlur #(animate desc feGaussianBlur metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id in keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result stdDeviation style systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feImage #(animate animateTransform desc feImage metadata set title) #(accumulate additive alignment-baseline attributeName attributeType baseline-shift begin by calcMode class clip clip-path clip-rule color color-interpolation color-interpolation-filters color-profile color-rendering cursor direction display dominant-baseline dur enable-background end externalResourcesRequired fill fill-opacity fill-rule filter flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight from glyph-orientation-horizontal glyph-orientation-vertical height id image-rendering kerning keySplines keyTimes letter-spacing lighting-color marker-end marker-mid marker-start mask max min onbegin onend onload onrepeat opacity overflow pointer-events preserveAspectRatio repeatCount repeatDur requiredExtensions requiredFeatures restart result shape-rendering stop-color stop-opacity stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-anchor text-decoration text-rendering to type unicode-bidi values visibility width word-spacing writing-mode x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feMerge #(animate desc feMerge feMergeNode metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id in keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feMergeNode #(animate desc feMergeNode metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class dur end externalResourcesRequired fill from id in keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart style systemLanguage to values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (feMorphology #(animate desc feMorphology metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id in keySplines keyTimes max min onbegin onend onload onrepeat operator radius repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feOffset #(animate desc feOffset metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur dx dy end externalResourcesRequired fill from height id in keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (fePointLight #(animate desc fePointLight metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class dur end externalResourcesRequired fill from id keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart style systemLanguage to values x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y z)) (feSpecularLighting #(animate animateColor desc feDistantLight fePointLight feSpecularLighting feSpotLight metadata set title) #(accumulate additive attributeName attributeType azimuth begin by calcMode class color color-interpolation color-interpolation-filters color-rendering dur elevation end externalResourcesRequired fill from height id in kernelUnitLength keySplines keyTimes lighting-color limitingConeAngle max min onbegin onend onload onrepeat pointsAtX pointsAtY pointsAtZ repeatCount repeatDur requiredExtensions requiredFeatures restart result specularConstant specularExponent style surfaceScale systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y z)) (feSpotLight #(animate desc feSpotLight metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class dur end externalResourcesRequired fill from id keySplines keyTimes limitingConeAngle max min onbegin onend onload onrepeat pointsAtX pointsAtY pointsAtZ repeatCount repeatDur requiredExtensions requiredFeatures restart specularExponent style systemLanguage to values x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y z)) (feTile #(animate desc feTile metadata set title) #(accumulate additive attributeName attributeType begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id in keySplines keyTimes max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result style systemLanguage to values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (feTurbulence #(animate desc feTurbulence metadata set title) #(accumulate additive attributeName attributeType baseFrequency begin by calcMode class color-interpolation-filters dur end externalResourcesRequired fill from height id keySplines keyTimes max min numOctaves onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart result seed stitchTiles style systemLanguage to type values width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (filter #(animate animateColor animateTransform desc feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter metadata set title) #(accumulate additive alignment-baseline amplitude attributeName attributeType azimuth baseFrequency baseline-shift begin bias by calcMode class clip clip-path clip-rule color color-interpolation color-interpolation-filters color-profile color-rendering cursor diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight from glyph-orientation-horizontal glyph-orientation-vertical height id image-rendering in in2 intercept k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keySplines keyTimes letter-spacing lighting-color limitingConeAngle marker-end marker-mid marker-start mask max min mode numOctaves offset onbegin onend onload onrepeat opacity operator order overflow pointer-events pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits radius repeatCount repeatDur requiredExtensions requiredFeatures restart result scale seed shape-rendering slope specularConstant specularExponent stdDeviation stitchTiles stop-color stop-opacity stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues targetX targetY text-anchor text-decoration text-rendering to type unicode-bidi values visibility width word-spacing writing-mode x xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y yChannelSelector z)) (font #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (font-face #(definition-src desc font-face font-face-format font-face-name font-face-src font-face-uri metadata title) #(accent-height alphabetic ascent bbox cap-height class descent font-family font-size font-stretch font-style font-variant font-weight hanging id ideographic mathematical name overline-position overline-thickness panose-1 slope stemh stemv strikethrough-position strikethrough-thickness string style underline-position underline-thickness unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical widths x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (font-face-format #(font-face-format) #(id string xml:base xml:lang xml:space)) (font-face-name #(font-face-name) #(id name xml:base xml:lang xml:space)) (font-face-src #(font-face-format font-face-name font-face-src font-face-uri) #(id name string xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (font-face-uri #(font-face-format font-face-uri) #(id string xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (foreignObject #(foreignObject) #(alignment-baseline baseline-shift class clip clip-path clip-rule color color-interpolation color-interpolation-filters color-profile color-rendering cursor direction display dominant-baseline enable-background externalResourcesRequired fill fill-opacity fill-rule filter flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-orientation-horizontal glyph-orientation-vertical height id image-rendering kerning letter-spacing lighting-color marker-end marker-mid marker-start mask onactivate onclick onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup opacity overflow pointer-events requiredExtensions requiredFeatures shape-rendering stop-color stop-opacity stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-anchor text-decoration text-rendering transform unicode-bidi visibility width word-spacing writing-mode x xml:base xml:lang xml:space y)) (g #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (glyph #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (glyphRef #(glyphRef) #(class dx dy font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format glyphRef id style x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (hkern #(hkern) #(g1 g2 id k u1 u2 xml:base xml:lang xml:space)) (image #(animate animateColor animateMotion animateTransform desc image metadata mpath set title) #(accumulate additive attributeName attributeType begin by calcMode class clip clip-path clip-rule color color-interpolation color-profile color-rendering cursor display dur end externalResourcesRequired fill fill-opacity filter from height id image-rendering keyPoints keySplines keyTimes mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin overflow path pointer-events preserveAspectRatio repeatCount repeatDur requiredExtensions requiredFeatures restart rotate shape-rendering stroke-opacity style systemLanguage text-rendering to transform type values visibility width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (line #(animate animateColor animateMotion animateTransform desc line metadata mpath set title) #(accumulate additive attributeName attributeType begin by calcMode class clip-path clip-rule color color-interpolation color-rendering cursor display dur end externalResourcesRequired fill fill-opacity fill-rule filter from id image-rendering keyPoints keySplines keyTimes marker-end marker-mid marker-start mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin path pointer-events repeatCount repeatDur requiredExtensions requiredFeatures restart rotate shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-rendering to transform type values visibility x1 x2 xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y1 y2)) (linearGradient #(animate animateColor animateTransform desc linearGradient metadata set stop title) #(accumulate additive attributeName attributeType begin by calcMode class color color-interpolation color-rendering dur end externalResourcesRequired fill from gradientTransform gradientUnits id keySplines keyTimes max min offset onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart spreadMethod stop-color stop-opacity style systemLanguage to type values x1 x2 xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y1 y2)) (marker #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (mask #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (metadata #(metadata) #(id xml:base xml:lang xml:space)) (missing-glyph #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (mpath #(desc metadata mpath title) #(class externalResourcesRequired id style xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (path #(animate animateColor animateMotion animateTransform desc metadata mpath path set title) #(accumulate additive attributeName attributeType begin by calcMode class clip-path clip-rule color color-interpolation color-rendering cursor d display dur end externalResourcesRequired fill fill-opacity fill-rule filter from id image-rendering keyPoints keySplines keyTimes marker-end marker-mid marker-start mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin path pathLength pointer-events repeatCount repeatDur requiredExtensions requiredFeatures restart rotate shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-rendering to transform type values visibility xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (pattern #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (polygon #(animate animateColor animateMotion animateTransform desc metadata mpath polygon set title) #(accumulate additive attributeName attributeType begin by calcMode class clip-path clip-rule color color-interpolation color-rendering cursor display dur end externalResourcesRequired fill fill-opacity fill-rule filter from id image-rendering keyPoints keySplines keyTimes marker-end marker-mid marker-start mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin path pointer-events points repeatCount repeatDur requiredExtensions requiredFeatures restart rotate shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-rendering to transform type values visibility xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (polyline #(animate animateColor animateMotion animateTransform desc metadata mpath polyline set title) #(accumulate additive attributeName attributeType begin by calcMode class clip-path clip-rule color color-interpolation color-rendering cursor display dur end externalResourcesRequired fill fill-opacity fill-rule filter from id image-rendering keyPoints keySplines keyTimes marker-end marker-mid marker-start mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin path pointer-events points repeatCount repeatDur requiredExtensions requiredFeatures restart rotate shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-rendering to transform type values visibility xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (radialGradient #(animate animateColor animateTransform desc metadata radialGradient set stop title) #(accumulate additive attributeName attributeType begin by calcMode class color color-interpolation color-rendering cx cy dur end externalResourcesRequired fill from fx fy gradientTransform gradientUnits id keySplines keyTimes max min offset onbegin onend onload onrepeat r repeatCount repeatDur requiredExtensions requiredFeatures restart spreadMethod stop-color stop-opacity style systemLanguage to type values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (rect #(animate animateColor animateMotion animateTransform desc metadata mpath rect set title) #(accumulate additive attributeName attributeType begin by calcMode class clip-path clip-rule color color-interpolation color-rendering cursor display dur end externalResourcesRequired fill fill-opacity fill-rule filter from height id image-rendering keyPoints keySplines keyTimes mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin path pointer-events repeatCount repeatDur requiredExtensions requiredFeatures restart rotate rx ry shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-rendering to transform type values visibility width x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (script #(script) #(externalResourcesRequired id type xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (set #(desc metadata set title) #(attributeName attributeType begin class dur end externalResourcesRequired fill id max min onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart style systemLanguage to xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (stop #(animate animateColor desc metadata set stop title) #(accumulate additive attributeName attributeType begin by calcMode class color color-interpolation color-rendering dur end externalResourcesRequired fill from id keySplines keyTimes max min offset onbegin onend onload onrepeat repeatCount repeatDur requiredExtensions requiredFeatures restart stop-color stop-opacity style systemLanguage to values xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink)) (style #(style) #(id media title type xml:base xml:lang xml:space)) (svg #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (switch #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (symbol #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (text #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (textPath #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (title #(title) #(class id style xml:base xml:lang xml:space)) (tref #(animate animateColor desc metadata set title tref) #(accumulate additive alignment-baseline attributeName attributeType baseline-shift begin by calcMode class clip-path clip-rule color color-interpolation color-rendering cursor direction display dominant-baseline dur dx dy end externalResourcesRequired fill fill-opacity fill-rule filter font-family font-size font-size-adjust font-stretch font-style font-variant font-weight from glyph-orientation-horizontal glyph-orientation-vertical id image-rendering kerning keySplines keyTimes lengthAdjust letter-spacing mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity pointer-events repeatCount repeatDur requiredExtensions requiredFeatures restart rotate shape-rendering stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-anchor text-decoration text-rendering textLength to unicode-bidi values visibility word-spacing x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (tspan #(a altGlyph altGlyphDef altGlyphItem animate animateColor animateMotion animateTransform circle clipPath color-profile cursor definition-src defs desc ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern) #(accent-height accumulate additive alignment-baseline alphabetic amplitude arabic-form ascent attributeName attributeType azimuth baseFrequency baseProfile baseline-shift bbox begin bias by calcMode cap-height class clip clip-path clip-rule clipPathUnits color color-interpolation color-interpolation-filters color-profile color-rendering contentScriptType contentStyleType cursor cx cy d descent diffuseConstant direction display divisor dominant-baseline dur dx dy edgeMode elevation enable-background end exponent externalResourcesRequired fill fill-opacity fill-rule filter filterRes filterUnits flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight format from fx fy g1 g2 glyph-name glyph-orientation-horizontal glyph-orientation-vertical glyphRef gradientTransform gradientUnits hanging height horiz-adv-x horiz-origin-x horiz-origin-y id ideographic image-rendering in in2 intercept k k1 k2 k3 k4 kernelMatrix kernelUnitLength kerning keyPoints keySplines keyTimes lang lengthAdjust letter-spacing lighting-color limitingConeAngle local marker-end marker-mid marker-start markerHeight markerUnits markerWidth mask maskContentUnits maskUnits mathematical max media method min mode name numOctaves offset onabort onactivate onbegin onclick onend onerror onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat onresize onscroll onunload onzoom opacity operator order orient orientation origin overflow overline-position overline-thickness panose-1 path pathLength patternContentUnits patternTransform patternUnits pointer-events points pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits r radius refX refY rendering-intent repeatCount repeatDur requiredExtensions requiredFeatures restart result rotate rx ry scale seed shape-rendering slope spacing specularConstant specularExponent spreadMethod startOffset stdDeviation stemh stemv stitchTiles stop-color stop-opacity strikethrough-position strikethrough-thickness string stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style surfaceScale systemLanguage tableValues target targetX targetY text-anchor text-decoration text-rendering textLength title to transform type u1 u2 underline-position underline-thickness unicode unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical values version vert-adv-y vert-origin-x vert-origin-y viewBox viewTarget visibility width widths word-spacing writing-mode x x-height x1 x2 xChannelSelector xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns xmlns:xlink y y1 y2 yChannelSelector z zoomAndPan)) (use #(animate animateColor animateMotion animateTransform desc metadata mpath set title use) #(accumulate additive alignment-baseline attributeName attributeType baseline-shift begin by calcMode class clip clip-path clip-rule color color-interpolation color-interpolation-filters color-profile color-rendering cursor direction display dominant-baseline dur enable-background end externalResourcesRequired fill fill-opacity fill-rule filter flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight from glyph-orientation-horizontal glyph-orientation-vertical height id image-rendering kerning keyPoints keySplines keyTimes letter-spacing lighting-color marker-end marker-mid marker-start mask max min onactivate onbegin onclick onend onfocusin onfocusout onload onmousedown onmousemove onmouseout onmouseover onmouseup onrepeat opacity origin overflow path pointer-events repeatCount repeatDur requiredExtensions requiredFeatures restart rotate shape-rendering stop-color stop-opacity stroke stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width style systemLanguage text-anchor text-decoration text-rendering to transform type unicode-bidi values visibility width word-spacing writing-mode x xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xml:lang xml:space xmlns:xlink y)) (view #(desc metadata title view) #(class externalResourcesRequired id preserveAspectRatio style viewBox viewTarget xml:base xml:lang xml:space zoomAndPan)) (vkern #(vkern) #(g1 g2 id k u1 u2 xml:base xml:lang xml:space))))))

; Register the validation procedures of the language
(register-xml-in-laml-validators (quote svg11) (vector (list "a" a-svg11-laml-validate!) (list "altGlyph" altGlyph-svg11-laml-validate!) (list "altGlyphDef" altGlyphDef-svg11-laml-validate!) (list "altGlyphItem" altGlyphItem-svg11-laml-validate!) (list "animate" animate-svg11-laml-validate!) (list "animateColor" animateColor-svg11-laml-validate!) (list "animateMotion" animateMotion-svg11-laml-validate!) (list "animateTransform" animateTransform-svg11-laml-validate!) (list "circle" circle-svg11-laml-validate!) (list "clipPath" clipPath-svg11-laml-validate!) (list "color-profile" color-profile-svg11-laml-validate!) (list "cursor" cursor-svg11-laml-validate!) (list "definition-src" definition-src-svg11-laml-validate!) (list "defs" defs-svg11-laml-validate!) (list "desc" desc-svg11-laml-validate!) (list "ellipse" ellipse-svg11-laml-validate!) (list "feBlend" feBlend-svg11-laml-validate!) (list "feColorMatrix" feColorMatrix-svg11-laml-validate!) (list "feComponentTransfer" feComponentTransfer-svg11-laml-validate!) (list "feComposite" feComposite-svg11-laml-validate!) (list "feConvolveMatrix" feConvolveMatrix-svg11-laml-validate!) (list "feDiffuseLighting" feDiffuseLighting-svg11-laml-validate!) (list "feDisplacementMap" feDisplacementMap-svg11-laml-validate!) (list "feDistantLight" feDistantLight-svg11-laml-validate!) (list "feFlood" feFlood-svg11-laml-validate!) (list "feFuncA" feFuncA-svg11-laml-validate!) (list "feFuncB" feFuncB-svg11-laml-validate!) (list "feFuncG" feFuncG-svg11-laml-validate!) (list "feFuncR" feFuncR-svg11-laml-validate!) (list "feGaussianBlur" feGaussianBlur-svg11-laml-validate!) (list "feImage" feImage-svg11-laml-validate!) (list "feMerge" feMerge-svg11-laml-validate!) (list "feMergeNode" feMergeNode-svg11-laml-validate!) (list "feMorphology" feMorphology-svg11-laml-validate!) (list "feOffset" feOffset-svg11-laml-validate!) (list "fePointLight" fePointLight-svg11-laml-validate!) (list "feSpecularLighting" feSpecularLighting-svg11-laml-validate!) (list "feSpotLight" feSpotLight-svg11-laml-validate!) (list "feTile" feTile-svg11-laml-validate!) (list "feTurbulence" feTurbulence-svg11-laml-validate!) (list "filter" filter-svg11-laml-validate!) (list "font" font-svg11-laml-validate!) (list "font-face" font-face-svg11-laml-validate!) (list "font-face-format" font-face-format-svg11-laml-validate!) (list "font-face-name" font-face-name-svg11-laml-validate!) (list "font-face-src" font-face-src-svg11-laml-validate!) (list "font-face-uri" font-face-uri-svg11-laml-validate!) (list "foreignObject" foreignObject-svg11-laml-validate!) (list "g" g-svg11-laml-validate!) (list "glyph" glyph-svg11-laml-validate!) (list "glyphRef" glyphRef-svg11-laml-validate!) (list "hkern" hkern-svg11-laml-validate!) (list "image" image-svg11-laml-validate!) (list "line" line-svg11-laml-validate!) (list "linearGradient" linearGradient-svg11-laml-validate!) (list "marker" marker-svg11-laml-validate!) (list "mask" mask-svg11-laml-validate!) (list "metadata" metadata-svg11-laml-validate!) (list "missing-glyph" missing-glyph-svg11-laml-validate!) (list "mpath" mpath-svg11-laml-validate!) (list "path" path-svg11-laml-validate!) (list "pattern" pattern-svg11-laml-validate!) (list "polygon" polygon-svg11-laml-validate!) (list "polyline" polyline-svg11-laml-validate!) (list "radialGradient" radialGradient-svg11-laml-validate!) (list "rect" rect-svg11-laml-validate!) (list "script" script-svg11-laml-validate!) (list "set" set-svg11-laml-validate!) (list "stop" stop-svg11-laml-validate!) (list "style" style-svg11-laml-validate!) (list "svg" svg-svg11-laml-validate!) (list "switch" switch-svg11-laml-validate!) (list "symbol" symbol-svg11-laml-validate!) (list "text" text-svg11-laml-validate!) (list "textPath" textPath-svg11-laml-validate!) (list "title" title-svg11-laml-validate!) (list "tref" tref-svg11-laml-validate!) (list "tspan" tspan-svg11-laml-validate!) (list "use" use-svg11-laml-validate!) (list "view" view-svg11-laml-validate!) (list "vkern" vkern-svg11-laml-validate!)))

; Register the content model map of the language.
; This makes the content model available for LAML at runtime.
(register-xml-in-laml-content-models (quote svg11) (quote #(("a" (mixed-content (choice pcdata desc title metadata animate set animateMotion animateColor animateTransform svg g defs symbol use switch image style path rect circle line ellipse polyline polygon text altGlyphDef marker color-profile linearGradient radialGradient pattern clipPath mask filter cursor a view script font font-face))) ("altGlyph" (mixed-content pcdata)) ("altGlyphDef" (element-content (seq one (choice one (name one-or-more glyphRef) (name one-or-more altGlyphItem))))) ("altGlyphItem" (element-content (seq one (name one-or-more glyphRef)))) ("animate" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata)))) ("animateColor" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata)))) ("animateMotion" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (name optional mpath)))) ("animateTransform" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata)))) ("circle" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("clipPath" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one use) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef))))) ("color-profile" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata)))) ("cursor" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata)))) ("definition-src" empty) ("defs" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("desc" (mixed-content pcdata)) ("ellipse" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("feBlend" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feColorMatrix" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feComponentTransfer" (element-content (seq one (name optional feFuncR) (name optional feFuncG) (name optional feFuncB) (name optional feFuncA)))) ("feComposite" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feConvolveMatrix" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feDiffuseLighting" (element-content (seq one (choice one (name one feDistantLight) (name one fePointLight) (name one feSpotLight)) (choice zero-or-more (name one animate) (name one set) (name one animateColor))))) ("feDisplacementMap" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feDistantLight" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feFlood" (element-content (choice zero-or-more (name one animate) (name one set) (name one animateColor)))) ("feFuncA" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feFuncB" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feFuncG" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feFuncR" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feGaussianBlur" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feImage" (element-content (choice zero-or-more (name one animate) (name one set) (name one animateTransform)))) ("feMerge" (element-content (seq zero-or-more (name one feMergeNode)))) ("feMergeNode" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feMorphology" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feOffset" (element-content (choice zero-or-more (name one animate) (name one set)))) ("fePointLight" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feSpecularLighting" (element-content (seq one (choice one (name one feDistantLight) (name one fePointLight) (name one feSpotLight)) (choice zero-or-more (name one animate) (name one set) (name one animateColor))))) ("feSpotLight" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feTile" (element-content (choice zero-or-more (name one animate) (name one set)))) ("feTurbulence" (element-content (choice zero-or-more (name one animate) (name one set)))) ("filter" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one feBlend) (name one feColorMatrix) (name one feComponentTransfer) (name one feComposite) (name one feConvolveMatrix) (name one feDiffuseLighting) (name one feDisplacementMap) (name one feFlood) (name one feGaussianBlur) (name one feImage) (name one feMerge) (name one feMorphology) (name one feOffset) (name one feSpecularLighting) (name one feTile) (name one feTurbulence))))) ("font" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (name one font-face) (name one missing-glyph) (choice zero-or-more (name one glyph) (name one hkern) (name one vkern))))) ("font-face" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (name optional font-face-src) (name optional definition-src)))) ("font-face-format" empty) ("font-face-name" empty) ("font-face-src" (element-content (choice one-or-more (name one font-face-uri) (name one font-face-name)))) ("font-face-uri" (element-content (seq zero-or-more (name one font-face-format)))) ("foreignObject" (mixed-content pcdata)) ("g" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("glyph" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("glyphRef" empty) ("hkern" empty) ("image" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("line" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("linearGradient" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one stop) (name one animate) (name one set) (name one animateTransform))))) ("marker" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("mask" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("metadata" (mixed-content pcdata)) ("missing-glyph" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("mpath" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata)))) ("path" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("pattern" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("polygon" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("polyline" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("radialGradient" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one stop) (name one animate) (name one set) (name one animateTransform))))) ("rect" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("script" (mixed-content pcdata)) ("set" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata)))) ("stop" (element-content (choice zero-or-more (name one animate) (name one set) (name one animateColor)))) ("style" (mixed-content pcdata)) ("svg" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("switch" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one svg) (name one g) (name one use) (name one text) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one switch) (name one image) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one a) (name one foreignObject))))) ("symbol" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata) (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform) (name one svg) (name one g) (name one defs) (name one symbol) (name one use) (name one switch) (name one image) (name one style) (name one path) (name one rect) (name one circle) (name one line) (name one ellipse) (name one polyline) (name one polygon) (name one text) (name one altGlyphDef) (name one marker) (name one color-profile) (name one linearGradient) (name one radialGradient) (name one pattern) (name one clipPath) (name one mask) (name one filter) (name one cursor) (name one a) (name one view) (name one script) (name one font) (name one font-face)))) ("text" (mixed-content (choice pcdata desc title metadata animate set animateMotion animateColor animateTransform tspan tref textPath altGlyph a))) ("textPath" (mixed-content (choice pcdata tspan tref altGlyph animate set animateColor desc title metadata a))) ("title" (mixed-content pcdata)) ("tref" (element-content (choice zero-or-more (name one animate) (name one set) (name one animateColor) (name one desc) (name one title) (name one metadata)))) ("tspan" (mixed-content (choice pcdata tspan tref altGlyph animate set animateColor desc title metadata a))) ("use" (element-content (seq one (choice zero-or-more (name one desc) (name one title) (name one metadata)) (choice zero-or-more (name one animate) (name one set) (name one animateMotion) (name one animateColor) (name one animateTransform))))) ("view" (element-content (choice zero-or-more (name one desc) (name one title) (name one metadata)))) ("vkern" empty))))

; Register the action procedure map of the language.
(register-xml-in-laml-action-procedures (quote svg11) (vector))

